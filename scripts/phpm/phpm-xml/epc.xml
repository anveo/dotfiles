<?xml version="1.0" encoding="iso-8859-1"?>
<manual>
	<methodsynopsis function="EPC_Phpm_Install-&gt;__construct">
<sdesc>Checks that all the settings are set properly, will die() if not.</sdesc>
<desc></desc>
<type>EPC_Phpm_Install</type>
<methodparam>
<type>object</type>
<parameter>settings</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="EPC_Phpm_Install-&gt;install">
<sdesc>Set the project key to install, this will be checked against the list on the   server.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="EPC_Phpm_Install-&gt;run">
<sdesc>Main function to run on the object.</sdesc>
<desc>will connect to the server and get the latest download listing file,   check the key ste to download and finally download the file from the server to   the install path as specified in the settings file.</desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="EPC_Phpm_ListAll-&gt;__construct">
<sdesc>Constructor - Makes sure that the settings object contains   the download listing URL, if not the constructor will die() with   a message to the user.</sdesc>
<desc></desc>
<type>EPC_Phpm_ListAll</type>
<methodparam>
<type>object SimpleXMLElement</type>
<parameter>settings</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="EPC_Phpm_ListAll-&gt;run">
<sdesc>The only function to run on the object.</sdesc>
<desc>It will attempt to download the settings file and list all the   projects that can be downloaded from the central server.</desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="EPC_Phpm_ListAll-&gt;toXML">
<sdesc>Override the parent toXML().</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="EPC_Phpm_ListInstalled-&gt;__construct">
<sdesc>Checks the settings and if the install directory is intact for reading.</sdesc>
<desc></desc>
<type>EPC_Phpm_ListInstalled</type>
</methodsynopsis>
<methodsynopsis function="EPC_Phpm_ListInstalled-&gt;run">
<sdesc>Main function on the object.</sdesc>
<desc>Iterates over the install directory and lists the installed files   with instructions on how to install/update version.</desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="EPC_Phpm_ListInstalledIterator-&gt;accept">
<sdesc>Implement the accept() function to only allow XML files.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="EPC_Object-&gt;__construct">
<sdesc>Empty constructor for now.</sdesc>
<desc></desc>
<type>EPC_Object</type>
</methodsynopsis>
<methodsynopsis function="EPC_Object-&gt;toXML">
<sdesc>Serialize the object to XML.</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>array</type>
<parameter>variables</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="EPC_Phpm_Parser-&gt;__construct">
<sdesc>Create a new manual parser</sdesc>
<desc></desc>
<type>EPC_Phpm_Parser</type>
<methodparam>
<type>string</type>
<parameter>startDir</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="EPC_Phpm_Parser-&gt;run">
<sdesc>Main function on the object, initiates the parsing   of the main document tree.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="EPC_Phpm_Reader-&gt;__construct">
<sdesc>Constructor.</sdesc>
<desc>Makes sure that the settings file is correct and we have everything   needed to execute the application.</desc>
<type>EPC_Phpm_Reader</type>
<methodparam>
<type>string</type>
<parameter>conf</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="EPC_Phpm_Reader-&gt;display">
<sdesc>Display the function queried for to the user.</sdesc>
<desc>This function dumps the content out, no special considerations   are taken for now on where to output the content.If you want to use the result somewhere else: pipe it or use the   ob_*() functions to collect the content.</desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="EPC_Phpm_Reader-&gt;query">
<sdesc>Query the XML file that keeps all the function calls with a   XPath query to see if the user have entered a valid PHP function call.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>argv</parameter>
</methodparam>
</methodsynopsis>
<entry/>
</manual>  	
