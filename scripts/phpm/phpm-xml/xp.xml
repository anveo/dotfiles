<?xml version="1.0" encoding="iso-8859-1"?>
<manual>
	<methodsynopsis function="AboutState-&gt;process">
<sdesc>Process this state.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="AbstractAuthenticatedState-&gt;requiresAuthentication">
<sdesc>Returns whether we need an authentication. Always returns  TRUE in this implementation.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="AbstractState-&gt;addHandler">
<sdesc>Add a handler</sdesc>
<desc></desc>
<type>&amp;scriptlet.xml.workflow.Handler</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.Handler</type>
<parameter>&amp;handler</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="AbstractState-&gt;hasHandlers">
<sdesc>Retrieve whether handlers are existant for this state</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="AbstractState-&gt;process">
<sdesc>Process this state. Does nothing in this default implementation.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.Context</type>
<parameter>&amp;context</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="AbstractState-&gt;requiresAuthentication">
<sdesc>Retrieve whether authentication is needed. Returns FALSE in this  default implementation.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="AbstractState-&gt;setTrace">
<sdesc>Set a trace for debugging</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="AbstractState-&gt;setup">
<sdesc>Set up this state</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.Context</type>
<parameter>&amp;context</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="AbstractXMLScriptlet-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>AbstractXMLScriptlet</type>
<methodparam>
<type>&amp;lang.ClassLoader</type>
<parameter>&amp;classloader</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>base</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="AbstractXMLScriptlet-&gt;doGet">
<sdesc>Receives an HTTP GET request from the process() method  and handles it.</sdesc>
<desc> @access  protected</desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="AbstractXMLScriptlet-&gt;getContextClass">
<sdesc>Retrieve context class</sdesc>
<desc></desc>
<type>&amp;lang.XPClass</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="AbstractXMLScriptlet-&gt;needsSession">
<sdesc>Decide whether a session is needed</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="AbstractXMLScriptlet-&gt;processWorkflow">
<sdesc>Process workflow. Calls the state's setup() and process()  methods in this order. May be overwritten by subclasses.</sdesc>
<desc>Return FALSE from this method to indicate no further  processing is to be done</desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="AbstractXMLScriptlet-&gt;wantsContext">
<sdesc>Decide whether a context is needed. Returns FALSE in this default  implementation.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="AbstractXMLScriptlet-&gt;_request">
<sdesc>Create the request object</sdesc>
<desc></desc>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
</methodsynopsis>
<methodsynopsis function="AjpConnection-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>AjpConnection</type>
<methodparam>
<type>mixed</type>
<parameter>url</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>env</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="AjpConnection-&gt;_createRequest">
<sdesc>Create the request object</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;url</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="AjpRequest-&gt;getRequestString">
<sdesc>Get request string</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="AjpRequest-&gt;setEnvironment">
<sdesc>(Insert method's description here)</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Arc-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Arc</type>
<methodparam>
<type>&amp;img.Color</type>
<parameter>&amp;col</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>cx</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>cy</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>w</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>h</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>s</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>e</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>fill</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Arc-&gt;draw">
<sdesc>Draw function</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;resource</type>
<parameter>&amp;hdl</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Arc3D-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Arc3D</type>
<methodparam>
<type>&amp;img.Color[]</type>
<parameter>&amp;colors</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>cx</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>cy</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>w</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>h</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>s</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>e</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>fill</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>shadow</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Arc3D-&gt;draw">
<sdesc>Draw function</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;resource</type>
<parameter>&amp;hdl</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Archive-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Archive</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Archive-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Archive-&gt;add">
<sdesc>Add a file</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Archive-&gt;close">
<sdesc>Close this archive</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Archive-&gt;contains">
<sdesc>Check whether a given element exists</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Archive-&gt;create">
<sdesc>Create CCA archive</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Archive-&gt;extract">
<sdesc>Extract a file's contents</sdesc>
<desc></desc>
<type>&amp;string</type>
<methodparam>
<type>string</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Archive-&gt;getEntry">
<sdesc>Get entry (iterative use)</sdesc>
<desc>1        $a= &amp;new (new ('port.cca'));2        $a-&gt;();3        while ($id= $a-&gt;()) {4          ($id);5        }6        $a-&gt;();</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Archive-&gt;isOpen">
<sdesc>Checks whether this archive is open</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Archive-&gt;open">
<sdesc>Open this archive</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>mode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Archive-&gt;rewind">
<sdesc>Rewind archive</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="ArchiveClassLoader-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>ArchiveClassLoader</type>
<methodparam>
<type>&amp;lang.cca.Archive</type>
<parameter>&amp;archive</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ArchiveClassLoader-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="ArchiveClassLoader-&gt;loadClass">
<sdesc>Load a class from the CCA</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>className</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Argument-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Argument</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>optional</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Argument-&gt;getName">
<sdesc>Get Name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Argument-&gt;getType">
<sdesc>Get Type</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Argument-&gt;isOptional">
<sdesc>Retrieve whether this argument is optional</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="ArrayFormat-&gt;apply">
<sdesc>Apply format to argument</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>fmt</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;argument</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ArrayFormat-&gt;getInstance">
<sdesc>Get an instance</sdesc>
<desc></desc>
<type>&amp;text.format.ArrayFormat</type>
</methodsynopsis>
<methodsynopsis function="Article-&gt;getArticleId">
<sdesc>Get ArticleId</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Article-&gt;getBody">
<sdesc>Get Body</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Article-&gt;getHeader">
<sdesc>Get Headers</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Article-&gt;getHeaders">
<sdesc>Get Headers</sdesc>
<desc></desc>
<type>mixed[]</type>
</methodsynopsis>
<methodsynopsis function="Article-&gt;getMessageId">
<sdesc>Get MessageId</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Article-&gt;setArticleId">
<sdesc>Set ArticleId</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>articleId</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Article-&gt;setBody">
<sdesc>Set Body</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>body</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Article-&gt;setHeader">
<sdesc>Set Header</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed[]</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Article-&gt;setMessageId">
<sdesc>Set MessageId</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>messageId</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Article-&gt;toString">
<sdesc>Retrieve a string representation of this object</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="AssertionFailedError-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>AssertionFailedError</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>errorcode</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>actual</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>expect</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="AssertionFailedError-&gt;getErrorCode">
<sdesc>Get errorcode</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="AssertionFailedError-&gt;setErrorCode">
<sdesc>Set errorcode</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>errorcode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="AssertionFailedError-&gt;toString">
<sdesc>Retrieve string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="AuthenticationException-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>AuthenticationException</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>user</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>pass</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="AuthenticationException-&gt;getPass">
<sdesc>Get Pass</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="AuthenticationException-&gt;getUser">
<sdesc>Get User</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Authenticator-&gt;authenticate">
<sdesc>Authenticate a user</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>user</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>pass</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BabelFish-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>BabelFish</type>
</methodsynopsis>
<methodsynopsis function="BabelFish-&gt;translate">
<sdesc>Translates a text</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>sourcedata</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>src_lang</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>target_lang</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Base64-&gt;decode">
<sdesc>Decode base64 encoded data</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Base64-&gt;encode">
<sdesc>Encode string</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BaseTest-&gt;testPrerequisites">
<sdesc>Test prerequisites</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="BaseTest-&gt;testReflection">
<sdesc>Test reflection API via lang.XPClass</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="BasicAuthorization-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>BasicAuthorization</type>
<methodparam>
<type>string</type>
<parameter>user</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>pass</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BasicAuthorization-&gt;fromValue">
<sdesc>Returns a BasicAuthorization object from header value; returns  FALSE on error.</sdesc>
<desc></desc>
<type>peer.http.BasicAuthorization</type>
<methodparam>
<type>stirng</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BasicAuthorization-&gt;getPassword">
<sdesc>Returns the password</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="BasicAuthorization-&gt;getUser">
<sdesc>Returns the username</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="BasicAuthorization-&gt;getValueRepresentation">
<sdesc>Get header value representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="BIFFWriter-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>BIFFWriter</type>
</methodsynopsis>
<methodsynopsis function="BIFFWriter-&gt;getVersion">
<sdesc>Retrieve version</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="BIFFWriter-&gt;setVersion">
<sdesc>Set version</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BIFFWriter-&gt;write">
<sdesc>Write to a stream</sdesc>
<desc></desc>
<type>&amp;io.Stream</type>
<methodparam>
<type>&amp;io.Stream</type>
<parameter>&amp;stream</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BinaryFormat-&gt;apply">
<sdesc>Apply format to argument</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>fmt</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;argument</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BinaryFormat-&gt;getInstance">
<sdesc>Get an instance</sdesc>
<desc></desc>
<type>&amp;text.format.BinaryFormat</type>
</methodsynopsis>
<methodsynopsis function="Binford-&gt;getHeader">
<sdesc>Retrieve header suited for HTTP/Mail</sdesc>
<desc>Example:     X-Binford: 6100 (more power)</desc>
<type>&amp;peer.Header</type>
</methodsynopsis>
<methodsynopsis function="Binford-&gt;getPoweredBy">
<sdesc>Retrieve the power</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Binford-&gt;setPoweredBy">
<sdesc>Set the power</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>p</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BSDSocket-&gt;canRead">
<sdesc>Returns whether there is data that can be read</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>float</type>
<parameter>timeout</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BSDSocket-&gt;close">
<sdesc>Close socket</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="BSDSocket-&gt;connect">
<sdesc>Connect</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="BSDSocket-&gt;eof">
<sdesc>Returns whether eof has been reached</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="BSDSocket-&gt;getLastError">
<sdesc>Get last error</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="BSDSocket-&gt;read">
<sdesc>Read data from a socket</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>maxLen</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BSDSocket-&gt;readBinary">
<sdesc>Read data from a socket (binary-safe)</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>maxLen</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BSDSocket-&gt;readLine">
<sdesc>Read data from a socket</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>maxLen</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BSDSocket-&gt;setBlocking">
<sdesc>Set socket blocking</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>bool</type>
<parameter>blocking</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BSDSocket-&gt;write">
<sdesc>Write a string to the socket</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BufferedAppender-&gt;append">
<sdesc>Appends log data to the buffer</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BufferedAppender-&gt;clear">
<sdesc>Clears the buffers content.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="BufferedAppender-&gt;getBuffer">
<sdesc>Get buffer's contents</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getAssigned_to">
<sdesc>Retrieves assigned_to</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getBug_file_loc">
<sdesc>Retrieves bug_file_loc</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getBug_id">
<sdesc>Retrieves bug_id</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getBug_severity">
<sdesc>Retrieves bug_severity</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getBug_status">
<sdesc>Retrieves bug_status</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getByAssigned_to">
<sdesc>Gets an instance of this object by index &quot;assigned_to&quot;</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.Bug[]</type>
<methodparam>
<type>int</type>
<parameter>assigned_to</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getByBug_id">
<sdesc>Gets an instance of this object by index &quot;PRIMARY&quot;</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.Bug</type>
<methodparam>
<type>int</type>
<parameter>bug_id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getByBug_severity">
<sdesc>Gets an instance of this object by index &quot;bug_severity&quot;</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.Bug[]</type>
<methodparam>
<type>string</type>
<parameter>bug_severity</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getByBug_status">
<sdesc>Gets an instance of this object by index &quot;bug_status&quot;</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.Bug[]</type>
<methodparam>
<type>string</type>
<parameter>bug_status</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getByComponent">
<sdesc>Gets an instance of this object by index &quot;component&quot;</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.Bug[]</type>
<methodparam>
<type>string</type>
<parameter>component</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getByCreation_ts">
<sdesc>Gets an instance of this object by index &quot;creation_ts&quot;</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.Bug[]</type>
<methodparam>
<type>util.Date</type>
<parameter>creation_ts</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getByDelta_ts">
<sdesc>Gets an instance of this object by index &quot;delta_ts&quot;</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.Bug[]</type>
<methodparam>
<type>util.Date</type>
<parameter>delta_ts</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getByOp_sys">
<sdesc>Gets an instance of this object by index &quot;op_sys&quot;</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.Bug[]</type>
<methodparam>
<type>string</type>
<parameter>op_sys</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getByPriority">
<sdesc>Gets an instance of this object by index &quot;priority&quot;</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.Bug[]</type>
<methodparam>
<type>string</type>
<parameter>priority</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getByProduct">
<sdesc>Gets an instance of this object by index &quot;product&quot;</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.Bug[]</type>
<methodparam>
<type>string</type>
<parameter>product</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getByReporter">
<sdesc>Gets an instance of this object by index &quot;reporter&quot;</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.Bug[]</type>
<methodparam>
<type>int</type>
<parameter>reporter</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getByResolution">
<sdesc>Gets an instance of this object by index &quot;resolution&quot;</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.Bug[]</type>
<methodparam>
<type>string</type>
<parameter>resolution</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getByVersion">
<sdesc>Gets an instance of this object by index &quot;version&quot;</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.Bug[]</type>
<methodparam>
<type>string</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getByVotes">
<sdesc>Gets an instance of this object by index &quot;votes&quot;</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.Bug[]</type>
<methodparam>
<type>int</type>
<parameter>votes</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getCclist_accessible">
<sdesc>Retrieves cclist_accessible</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getComponent">
<sdesc>Retrieves component</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getCreation_ts">
<sdesc>Retrieves creation_ts</sdesc>
<desc></desc>
<type>util.Date</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getDelta_ts">
<sdesc>Retrieves delta_ts</sdesc>
<desc></desc>
<type>util.Date</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getEverconfirmed">
<sdesc>Retrieves everconfirmed</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getGroupset">
<sdesc>Retrieves groupset</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getKeywords">
<sdesc>Retrieves keywords</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getLastdiffed">
<sdesc>Retrieves lastdiffed</sdesc>
<desc></desc>
<type>util.Date</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getOp_sys">
<sdesc>Retrieves op_sys</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getPeer">
<sdesc>Retrieve associated peer</sdesc>
<desc></desc>
<type>&amp;rdbms.Peer</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getPriority">
<sdesc>Retrieves priority</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getProduct">
<sdesc>Retrieves product</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getQa_contact">
<sdesc>Retrieves qa_contact</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getReporter">
<sdesc>Retrieves reporter</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getReporter_accessible">
<sdesc>Retrieves reporter_accessible</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getRep_platform">
<sdesc>Retrieves rep_platform</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getResolution">
<sdesc>Retrieves resolution</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getShort_desc">
<sdesc>Retrieves short_desc</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getStatus_whiteboard">
<sdesc>Retrieves status_whiteboard</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getTarget_milestone">
<sdesc>Retrieves target_milestone</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getVersion">
<sdesc>Retrieves version</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;getVotes">
<sdesc>Retrieves votes</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setAssigned_to">
<sdesc>Sets assigned_to</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>assigned_to</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setBug_file_loc">
<sdesc>Sets bug_file_loc</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>bug_file_loc</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setBug_id">
<sdesc>Sets bug_id</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>bug_id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setBug_severity">
<sdesc>Sets bug_severity</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>bug_severity</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setBug_status">
<sdesc>Sets bug_status</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>bug_status</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setCclist_accessible">
<sdesc>Sets cclist_accessible</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>cclist_accessible</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setComponent">
<sdesc>Sets component</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>component</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setCreation_ts">
<sdesc>Sets creation_ts</sdesc>
<desc></desc>
<type>util.Date</type>
<methodparam>
<type>util.Date</type>
<parameter>creation_ts</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setDelta_ts">
<sdesc>Sets delta_ts</sdesc>
<desc></desc>
<type>util.Date</type>
<methodparam>
<type>util.Date</type>
<parameter>delta_ts</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setEverconfirmed">
<sdesc>Sets everconfirmed</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>everconfirmed</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setGroupset">
<sdesc>Sets groupset</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>groupset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setKeywords">
<sdesc>Sets keywords</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>keywords</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setLastdiffed">
<sdesc>Sets lastdiffed</sdesc>
<desc></desc>
<type>util.Date</type>
<methodparam>
<type>util.Date</type>
<parameter>lastdiffed</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setOp_sys">
<sdesc>Sets op_sys</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>op_sys</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setPriority">
<sdesc>Sets priority</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>priority</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setProduct">
<sdesc>Sets product</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>product</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setQa_contact">
<sdesc>Sets qa_contact</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>qa_contact</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setReporter">
<sdesc>Sets reporter</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>reporter</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setReporter_accessible">
<sdesc>Sets reporter_accessible</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>reporter_accessible</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setRep_platform">
<sdesc>Sets rep_platform</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>rep_platform</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setResolution">
<sdesc>Sets resolution</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>resolution</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setShort_desc">
<sdesc>Sets short_desc</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>short_desc</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setStatus_whiteboard">
<sdesc>Sets status_whiteboard</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>status_whiteboard</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setTarget_milestone">
<sdesc>Sets target_milestone</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>target_milestone</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setVersion">
<sdesc>Sets version</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;setVotes">
<sdesc>Sets votes</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>votes</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Bug-&gt;__static">
<sdesc>Static initializer</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="BugMessage-&gt;getBody">
<sdesc>Get message body. If this message is contained in a folder and the body  has'nt been fetched yet, it'll be retrieved from the storage underlying  the folder.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="BugMessage-&gt;setBug_severity">
<sdesc>Set Bug_severity</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>bug_severity</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugMessage-&gt;setComponent">
<sdesc>Set Component</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>component</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugMessage-&gt;setNoReport">
<sdesc>Suppress report mail when successful</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>b</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugMessage-&gt;setOp_sys">
<sdesc>Set Op_sys</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>op_sys</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugMessage-&gt;setPriority">
<sdesc>Set Priority</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>priority</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugMessage-&gt;setProduct">
<sdesc>Set Product</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>product</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugMessage-&gt;setRep_platform">
<sdesc>Set Rep_platform</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>rep_platform</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugMessage-&gt;setShort_desc">
<sdesc>Set Short_desc</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>short_desc</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugMessage-&gt;setVersion">
<sdesc>Set Version</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaCcList-&gt;getBug_id">
<sdesc>Retrieves bug_id</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="BugzillaCcList-&gt;getByBug_id">
<sdesc>Gets an instance of this object by index &quot;bug_id&quot;</sdesc>
<desc></desc>
<type>&amp;BugzillaCcList</type>
<methodparam>
<type>int</type>
<parameter>bug_id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaCcList-&gt;getByWho">
<sdesc>Gets an instance of this object by index &quot;who&quot;</sdesc>
<desc></desc>
<type>&amp;BugzillaCcList[]</type>
<methodparam>
<type>int</type>
<parameter>who</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaCcList-&gt;getPeer">
<sdesc>Retrieve associated peer</sdesc>
<desc></desc>
<type>&amp;rdbms.Peer</type>
</methodsynopsis>
<methodsynopsis function="BugzillaCcList-&gt;getWho">
<sdesc>Retrieves who</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="BugzillaCcList-&gt;setBug_id">
<sdesc>Sets bug_id</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>bug_id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaCcList-&gt;setWho">
<sdesc>Sets who</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>who</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaCcList-&gt;__static">
<sdesc>Static initializer</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="BugzillaComment-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>BugzillaComment</type>
<methodparam>
<type>int</type>
<parameter>bug_id</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>user_id</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>comment</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaComment-&gt;add">
<sdesc>Add a comment</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="BugzillaComment-&gt;getBug_id">
<sdesc>Get Bug_id</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="BugzillaComment-&gt;getComment">
<sdesc>Get Comment</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="BugzillaComment-&gt;getUser_id">
<sdesc>Get User_id</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="BugzillaComment-&gt;setBug_id">
<sdesc>Set Bug_id</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>bug_id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaComment-&gt;setComment">
<sdesc>Set Comment</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>comment</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaComment-&gt;setUser_id">
<sdesc>Set User_id</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>user_id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaLongDescs-&gt;getBug_id">
<sdesc>Retrieves bug_id</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="BugzillaLongDescs-&gt;getBug_when">
<sdesc>Retrieves bug_when</sdesc>
<desc></desc>
<type>util.Date</type>
</methodsynopsis>
<methodsynopsis function="BugzillaLongDescs-&gt;getByBug_id">
<sdesc>Gets an instance of this object by index &quot;bug_id&quot;</sdesc>
<desc></desc>
<type>&amp;BugzillaLongDescs[]</type>
<methodparam>
<type>int</type>
<parameter>bug_id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaLongDescs-&gt;getByBug_when">
<sdesc>Gets an instance of this object by index &quot;bug_when&quot;</sdesc>
<desc></desc>
<type>&amp;BugzillaLongDescs[]</type>
<methodparam>
<type>util.Date</type>
<parameter>bug_when</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaLongDescs-&gt;getByWho">
<sdesc>Gets an instance of this object by index &quot;who&quot;</sdesc>
<desc></desc>
<type>&amp;BugzillaLongDescs[]</type>
<methodparam>
<type>int</type>
<parameter>who</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaLongDescs-&gt;getPeer">
<sdesc>Retrieve associated peer</sdesc>
<desc></desc>
<type>&amp;rdbms.Peer</type>
</methodsynopsis>
<methodsynopsis function="BugzillaLongDescs-&gt;getThetext">
<sdesc>Retrieves thetext</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="BugzillaLongDescs-&gt;getWho">
<sdesc>Retrieves who</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="BugzillaLongDescs-&gt;setBug_id">
<sdesc>Sets bug_id</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>bug_id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaLongDescs-&gt;setBug_when">
<sdesc>Sets bug_when</sdesc>
<desc></desc>
<type>util.Date</type>
<methodparam>
<type>util.Date</type>
<parameter>bug_when</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaLongDescs-&gt;setThetext">
<sdesc>Sets thetext</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>thetext</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaLongDescs-&gt;setWho">
<sdesc>Sets who</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>who</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaLongDescs-&gt;__static">
<sdesc>Static initializer</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="BugzillaMySQLConnection-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>BugzillaMySQLConnection</type>
<methodparam>
<type>&amp;rdbms.DSN</type>
<parameter>&amp;dsn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaMySQLConnection-&gt;query">
<sdesc>Execute any statement</sdesc>
<desc></desc>
<type>&amp;rdbms.mysql.MySQLResultSet</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;getBlessgroupset">
<sdesc>Retrieves blessgroupset</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;getByLogin_name">
<sdesc>Gets an instance of this object by index &quot;login_name&quot;</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.BugzillaProfile</type>
<methodparam>
<type>string</type>
<parameter>login_name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;getByPerson_id">
<sdesc>Gets an instance of this object by person_id</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.BugzillaProfile</type>
<methodparam>
<type>int</type>
<parameter>person_id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;getByUserid">
<sdesc>Gets an instance of this object by index &quot;PRIMARY&quot;</sdesc>
<desc></desc>
<type>&amp;org.bugzilla.db.BugzillaProfile</type>
<methodparam>
<type>int</type>
<parameter>userid</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;getCryptpassword">
<sdesc>Retrieves cryptpassword</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;getDisabledtext">
<sdesc>Retrieves disabledtext</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;getEmailflags">
<sdesc>Retrieves emailflags</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;getGroupset">
<sdesc>Retrieves groupset</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;getLogin_name">
<sdesc>Retrieves login_name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;getMybugslink">
<sdesc>Retrieves mybugslink</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;getPeer">
<sdesc>Retrieve associated peer</sdesc>
<desc></desc>
<type>&amp;rdbms.Peer</type>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;getPerson_id">
<sdesc>Retrieves person_id</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;getRealname">
<sdesc>Retrieves realname</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;getUserid">
<sdesc>Retrieves userid</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;setBlessgroupset">
<sdesc>Sets blessgroupset</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>blessgroupset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;setCryptpassword">
<sdesc>Sets cryptpassword</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>cryptpassword</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;setDisabledtext">
<sdesc>Sets disabledtext</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>disabledtext</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;setEmailflags">
<sdesc>Sets emailflags</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>emailflags</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;setGroupset">
<sdesc>Sets groupset</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>groupset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;setLogin_name">
<sdesc>Sets login_name</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>login_name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;setMybugslink">
<sdesc>Sets mybugslink</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>mybugslink</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;setPerson_id">
<sdesc>Sets person_id</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>person_id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;setRealname">
<sdesc>Sets realname</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>realname</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;setUserid">
<sdesc>Sets userid</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>userid</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BugzillaProfile-&gt;__static">
<sdesc>Static initializer</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Business-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Business</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Business-&gt;getBusinessKey">
<sdesc>Get BusinessKey</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Business-&gt;getDescription">
<sdesc>Get Description</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Business-&gt;getName">
<sdesc>Get Name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Business-&gt;hasDescription">
<sdesc>Retrieve whether this item has a description</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Business-&gt;setBusinessKey">
<sdesc>Set BusinessKey</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>businessKey</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Business-&gt;setDescription">
<sdesc>Set Description</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>description</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BusinessList-&gt;getOperator">
<sdesc>Get Operator</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="BusinessList-&gt;isTruncated">
<sdesc>Retrieve if the list is truncated</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="BusinessList-&gt;itemAt">
<sdesc>Retrieve the business item at a specified position</sdesc>
<desc></desc>
<type>&amp;xml.uddi.Business</type>
<methodparam>
<type>int</type>
<parameter>pos</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BusinessList-&gt;numItems">
<sdesc>Returns number of items in this list</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="BusinessList-&gt;setOperator">
<sdesc>Set Operator</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>operator</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BusinessList-&gt;setTruncated">
<sdesc>Set truncated</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>truncated</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="BusinessList-&gt;toString">
<sdesc>Create a string representation of this list</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ByteOrder-&gt;nameOf">
<sdesc>Retrieves the name of a byteorder</sdesc>
<desc>Example:  1        ('io.ByteOrder');2     3        (::(::()));</desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>order</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ByteOrder-&gt;nativeOrder">
<sdesc>Retrieves this system's native byte order</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="ByteOrder-&gt;networkOrder">
<sdesc>Returns the network byte order.</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Calendar-&gt;advent">
<sdesc>Get first of advent for given year</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>int</type>
<parameter>year</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Calendar-&gt;dstBegin">
<sdesc>Calculates start of DST (daylight savings time).</sdesc>
<desc>This is the last Sunday of March for Europe, the first Sunday of  April in the U.S.</desc>
<type>&amp;util.Date</type>
<methodparam>
<type>int</type>
<parameter>year</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>method</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Calendar-&gt;dstEnd">
<sdesc>Calculates end of DST (daylight savings time)  This is the last Sunday of October</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>int</type>
<parameter>year</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Calendar-&gt;easter">
<sdesc>Get easter date for given year</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>int</type>
<parameter>year</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Calendar-&gt;midnight">
<sdesc>Return midnight of a given date</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Calendar-&gt;monthBegin">
<sdesc>Return beginning of month for a given date. E.g., given a date  2003-06-08, the function will return 2003-06-01 00:00:00.</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Calendar-&gt;monthEnd">
<sdesc>Return end of month for a given date. E.g., given a date  2003-06-08, the function will return 2003-06-30 23:59:59.</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Calendar-&gt;week">
<sdesc>Returns calendar week for a day</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Calendar-&gt;workdays">
<sdesc>Calculates the amount of workdays between to dates. Workdays are  defined as Monday through Friday.</sdesc>
<desc>This method takes an optional argument, an array of the following  form:1        $holidays[(...)]= TRUE;</desc>
<type>int</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;start</parameter>
</methodparam>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;end</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>holidays</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CclientStore-&gt;close">
<sdesc>Disconnect from store</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="CclientStore-&gt;closeFolder">
<sdesc>Proxy method for MailFolder: Close a folder</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.mail.MailFolder</type>
<parameter>&amp;f</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CclientStore-&gt;connect">
<sdesc>Connect to store using a DSN</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>dsn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CclientStore-&gt;deleteMessage">
<sdesc>Proxy method for MailFolder: Delete a message</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.mail.MailFolder</type>
<parameter>&amp;f</parameter>
</methodparam>
<methodparam>
<type>&amp;peer.mail.Message</type>
<parameter>&amp;msg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CclientStore-&gt;expunge">
<sdesc>Delete all messages marked for deletion</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="CclientStore-&gt;getFolder">
<sdesc>Get a folder. Note: Results from this method are cached.</sdesc>
<desc></desc>
<type>&amp;peer.mail.MailFolder</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CclientStore-&gt;getFolders">
<sdesc>Get all folders. Note: Results from this method are cached.</sdesc>
<desc></desc>
<type>&amp;peer.mail.MailFolder</type>
</methodsynopsis>
<methodsynopsis function="CclientStore-&gt;getMessageCount">
<sdesc>Proxy method for MailFolder: Get number of messages in this folder  Note: The results from this method are cached.</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>&amp;peer.mail.MailFolder</type>
<parameter>&amp;f</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>attr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CclientStore-&gt;getMessagePart">
<sdesc>Proxy method for MailFolder: Get a message part</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>&amp;peer.mail.MailFolder</type>
<parameter>&amp;f</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>uid</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>part</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CclientStore-&gt;getMessages">
<sdesc>Proxy method for MailFolder: Get messages in a folder</sdesc>
<desc></desc>
<type>&amp;peer.mail.Message[]</type>
<methodparam>
<type>mixed*</type>
<parameter>1</parameter>
</methodparam>
<methodparam>
<type>&amp;peer.mail.MailFolder</type>
<parameter>&amp;f</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CclientStore-&gt;getMessageStruct">
<sdesc>Proxy method for MailFolder: Get message structure</sdesc>
<desc></desc>
<type>&amp;object</type>
<methodparam>
<type>&amp;peer.mail.MailFolder</type>
<parameter>&amp;f</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>uid</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CclientStore-&gt;isConnected">
<sdesc>Returns whether the connection is open</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="CclientStore-&gt;openFolder">
<sdesc>Proxy method for MailFolder: Open a folder</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.mail.MailFolder</type>
<parameter>&amp;f</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>readonly</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CclientStore-&gt;undeleteMessage">
<sdesc>Proxy method for MailFolder: Undelete a message</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.mail.MailFolder</type>
<parameter>&amp;f</parameter>
</methodparam>
<methodparam>
<type>&amp;peer.mail.Message</type>
<parameter>&amp;msg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CclientStore-&gt;_supports">
<sdesc>Protected method to check whether this DSN is supported</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;int</type>
<parameter>2</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>u</parameter>
</methodparam>
<methodparam>
<type>&amp;array</type>
<parameter>&amp;attr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CData-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>CData</type>
<methodparam>
<type>string</type>
<parameter>cdata</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CertificateException-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>CertificateException</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>string[]</type>
<parameter>errors</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CertificateException-&gt;getErrors">
<sdesc>Returns errors</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="CertificateException-&gt;toString">
<sdesc>Return formatted output of stacktrace</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="CertificateTest-&gt;setUp">
<sdesc>Set up this testcase</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="CertificateTest-&gt;testX509Certificate">
<sdesc>Test an X.509 certificate</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="ChainedException-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>ChainedException</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>&amp;lang.Throwable</type>
<parameter>&amp;cause</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ChainedException-&gt;getCause">
<sdesc>Get cause</sdesc>
<desc></desc>
<type>&amp;lang.Throwable</type>
</methodsynopsis>
<methodsynopsis function="ChainedException-&gt;setCause">
<sdesc>Set cause</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;lang.Throwable</type>
<parameter>&amp;cause</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ChainedException-&gt;toString">
<sdesc>Return string representation of this exception</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Checksum-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Checksum</type>
<methodparam>
<type>mixed</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Checksum-&gt;fromFile">
<sdesc>Create a new checksum from a file object. Override this  method in child classes!</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Checksum-&gt;fromString">
<sdesc>Create a new checksum from a string. Override this  method in child classes!</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Checksum-&gt;getValue">
<sdesc>Retrieve the checksum's value</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="Checksum-&gt;verify">
<sdesc>Verify this checksum against another checksum</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;security.checksum.Checksum</type>
<parameter>&amp;sum</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;addChunk">
<sdesc>(Insert method's description here)</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;getChunk">
<sdesc>(Insert method's description here)</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;getChunk_size">
<sdesc>Get Chunk_size</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;getDensity">
<sdesc>Get Density</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;getDepth">
<sdesc>Get Depth</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;getExt">
<sdesc>Get Ext</sdesc>
<desc></desc>
<type>mixed[]</type>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;getFirst_pmgl">
<sdesc>Get First_pmgl</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;getGuid">
<sdesc>Get Guid</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;getIdentifier">
<sdesc>Get Identifier</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;getLang">
<sdesc>Get Lang</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;getLast_pmgl">
<sdesc>Get Last_pmgl</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;getLength">
<sdesc>Get Length</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;getNum_chunks">
<sdesc>Get Num_chunks</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;getRootindex_chunk">
<sdesc>Get Rootindex_chunk</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;getVersion">
<sdesc>Get Version</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;setChunk_size">
<sdesc>Set Chunk_size</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>chunk_size</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;setDensity">
<sdesc>Set Density</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>density</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;setDepth">
<sdesc>Set Depth</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>depth</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;setExt">
<sdesc>Set Ext</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed[]</type>
<parameter>ext</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;setFirst_pmgl">
<sdesc>Set First_pmgl</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>first_pmgl</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;setGuid">
<sdesc>Set Guid</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>guid</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;setIdentifier">
<sdesc>Set Identifier</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>identifier</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;setLang">
<sdesc>Set Lang</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>lang</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;setLast_pmgl">
<sdesc>Set Last_pmgl</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>last_pmgl</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;setLength">
<sdesc>Set Length</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>length</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;setNum_chunks">
<sdesc>Set Num_chunks</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>num_chunks</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;setRootindex_chunk">
<sdesc>Set Rootindex_chunk</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>rootindex_chunk</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMDirectory-&gt;setVersion">
<sdesc>Set Version</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMFile-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>CHMFile</type>
<methodparam>
<type>&amp;io.Stream</type>
<parameter>&amp;stream</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMFile-&gt;close">
<sdesc>Close file</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="CHMFile-&gt;getDirectory">
<sdesc>Retrieve CHM directory; extracts it if necessary</sdesc>
<desc></desc>
<type>&amp;com.microsoft.format.chm.CHMDirectory</type>
</methodsynopsis>
<methodsynopsis function="CHMFile-&gt;getHeader">
<sdesc>Retrieve CHM header; extracts it if necessary</sdesc>
<desc></desc>
<type>&amp;com.microsoft.format.chm.CHMHeader</type>
</methodsynopsis>
<methodsynopsis function="CHMFile-&gt;open">
<sdesc>Open file</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;getContent_offset">
<sdesc>Get Content_offset</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;getGuid1">
<sdesc>Get Guid1</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;getGuid2">
<sdesc>Get Guid2</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;getIdentifier">
<sdesc>Get Identifier</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;getLang">
<sdesc>Get Lang</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;getLength">
<sdesc>Get Length</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;getSection">
<sdesc>Get Section</sdesc>
<desc></desc>
<type>mixed[]</type>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;getTime">
<sdesc>Get Time</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;getVersion">
<sdesc>Get Version</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;setContent_offset">
<sdesc>Set Content_offset</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>content_offset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;setGuid1">
<sdesc>Set Guid1</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>guid1</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;setGuid2">
<sdesc>Set Guid2</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>guid2</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;setIdentifier">
<sdesc>Set Identifier</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>identifier</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;setLang">
<sdesc>Set Lang</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>lang</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;setLength">
<sdesc>Set Length</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>length</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;setSection">
<sdesc>Set Section</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed[]</type>
<parameter>section</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;setTime">
<sdesc>Set Time</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>time</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CHMHeader-&gt;setVersion">
<sdesc>Set Version</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ChoiceFormat-&gt;apply">
<sdesc>Apply format to argument</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>fmt</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;argument</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ChoiceFormat-&gt;getInstance">
<sdesc>Get an instance</sdesc>
<desc></desc>
<type>&amp;text.format.ChoiceFormat</type>
</methodsynopsis>
<methodsynopsis function="ClassComment-&gt;addExample">
<sdesc>Add an example</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>mixed</type>
<parameter>example</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassComment-&gt;addReference">
<sdesc>Add an reference</sdesc>
<desc></desc>
<type>&amp;lang.apidoc.Reference</type>
<methodparam>
<type>string</type>
<parameter>see</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassComment-&gt;setClassName">
<sdesc>Sets this class's name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassComment-&gt;setDeprecation">
<sdesc>Sets if this class is deprecated and use is discouraged</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>boolean</type>
<parameter>deprecated</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassComment-&gt;setExperimental">
<sdesc>Sets if this class is experimental</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>boolean</type>
<parameter>experimental</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassComment-&gt;setExtends">
<sdesc>Sets which class this class extends. This information is parsed  from the class declaration, i.e.</sdesc>
<desc>1        class Model extends  { }</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>extends</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassComment-&gt;setExtension">
<sdesc>Sets ext. Ext defines which PHP-Extensions a class depends on</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>extension</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassComment-&gt;setModel">
<sdesc>Sets class model. This information is parsed from the @purpose  documentation keyword.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>model</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassComment-&gt;setPurpose">
<sdesc>Sets purpose.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>purpose</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassComment-&gt;_handleTag">
<sdesc>Handles tags</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>string</type>
<parameter>tag</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>line</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassDocumentationState-&gt;process">
<sdesc>Process this state.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassLoader-&gt;__construct">
<sdesc>Constructor.</sdesc>
<desc>The path argument is optional and lets you define where to search for  classes (it will be prefixed to the class name).</desc>
<type>ClassLoader</type>
<methodparam>
<type>string</type>
<parameter>path</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassLoader-&gt;findClass">
<sdesc>Find a class by the specified name (but do not load it)</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>class</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassLoader-&gt;getDefault">
<sdesc>Retrieve the default class loader</sdesc>
<desc></desc>
<type>&amp;lang.ClassLoader</type>
</methodsynopsis>
<methodsynopsis function="ClassLoader-&gt;loadClass">
<sdesc>Load the class by the specified name</sdesc>
<desc></desc>
<type>&amp;lang.XPClass</type>
<methodparam>
<type>string</type>
<parameter>class</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassParser-&gt;parse">
<sdesc>Parse</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>util.log.LogCategory</type>
<parameter>cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassParser-&gt;setClassComment">
<sdesc>Callback function for the &quot;class comment&quot; (this is the comment  right above the class declaration)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>class</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>extends</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassParser-&gt;setDefine">
<sdesc>Callback function for defines</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>const</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>val</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassParser-&gt;setFileComment">
<sdesc>Callback function for the &quot;file comment&quot; (this is the comment at  the top of the file)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassParser-&gt;setFunctionComment">
<sdesc>Callback function for &quot;function comments&quot; (these are the comments  above a function declaration)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>function</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>returnsReference</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassProfiler-&gt;__construct">
<sdesc>Construct a profiler, overload this class</sdesc>
<desc></desc>
<type>ClassProfiler</type>
</methodsynopsis>
<methodsynopsis function="ClassProfiler-&gt;attachProfilee">
<sdesc>Attach a profilee</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;Object</type>
<parameter>&amp;obj</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassProfiler-&gt;getCalledCount">
<sdesc>Retrieve the call counter for a given function</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>string</type>
<parameter>method</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassProfiler-&gt;getCalledFunction">
<sdesc>Gets all method names for called methods</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="ClassProfiler-&gt;getTiming">
<sdesc>Retrieve the profiling results for a given function</sdesc>
<desc></desc>
<type>float</type>
<methodparam>
<type>string</type>
<parameter>method</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassProfiler-&gt;toString">
<sdesc>Creates a string representation for this class and  its profiling information.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ClassProfiler-&gt;__call">
<sdesc>The &quot;proxy&quot; function</sdesc>
<desc></desc>
<type>boolean</type>
<methodparam>
<type>string</type>
<parameter>method</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>params</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>&amp;return</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassProfiler-&gt;__get">
<sdesc>Get a property</sdesc>
<desc></desc>
<type>boolean</type>
<methodparam>
<type>string</type>
<parameter>propname</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;propvalue</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ClassProfiler-&gt;__set">
<sdesc>Set a property</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>propname</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>propvalue</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="sapi·cli-&gt;output">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Collator-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Collator</type>
<methodparam>
<type>string</type>
<parameter>locale</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Collator-&gt;compare">
<sdesc>Compares its two arguments for order. Returns a negative integer,  zero, or a positive integer as the first argument is less than,  equal to, or greater than the second.</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>&amp;string</type>
<parameter>&amp;a</parameter>
</methodparam>
<methodparam>
<type>&amp;string</type>
<parameter>&amp;b</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Collator-&gt;getInstance">
<sdesc>Gets the Collator for the desired locale.</sdesc>
<desc></desc>
<type>&amp;text.Collator</type>
<methodparam>
<type>&amp;util.Locale</type>
<parameter>&amp;locale</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Collection</type>
<methodparam>
<type>string</type>
<parameter>class</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;add">
<sdesc>Adds an element to this list</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;element</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;addAll">
<sdesc>Adds an array of elements to this list</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>lang.Object[]</type>
<parameter>array</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;clear">
<sdesc>Removes all of the elements from this list. The list will be empty  after this call returns.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;contains">
<sdesc>Checks if a value exists in this array</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;element</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;forClass">
<sdesc>Returns a new Collection object for a specified class</sdesc>
<desc></desc>
<type>&amp;lang.Collection</type>
<methodparam>
<type>string</type>
<parameter>class</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;get">
<sdesc>Returns the element at the specified position in this list.</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>int</type>
<parameter>index</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;getElementClass">
<sdesc>Returns the element's class name</sdesc>
<desc></desc>
<type>&amp;lang.XPClass</type>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;getElementClassName">
<sdesc>Returns the element's class name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;indexOf">
<sdesc>Searches for the first occurence of the given argument</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;element</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;isEmpty">
<sdesc>Tests if this list has no elements.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;lastIndexOf">
<sdesc>Searches for the last occurence of the given argument</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;element</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;prepend">
<sdesc>Adds an element to the beginning of this list</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;element</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;prependAll">
<sdesc>Prepend an array of elements to this list</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>lang.Object[]</type>
<parameter>array</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;remove">
<sdesc>Removes the element at the specified position in this list.</sdesc>
<desc>Shifts any subsequent elements to the left (subtracts one  from their indices).</desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>int</type>
<parameter>index</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;set">
<sdesc>Replaces the element at the specified position in this list with  the specified element.</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>int</type>
<parameter>index</parameter>
</methodparam>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;element</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;size">
<sdesc>Returns the number of elements in this list.</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Collection-&gt;values">
<sdesc>Returns an array of this list's elements</sdesc>
<desc></desc>
<type>lang.Object[]</type>
</methodsynopsis>
<methodsynopsis function="Color-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Color</type>
<methodparam>
<type>mixed</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Color-&gt;fromHex">
<sdesc>Set RGB values from hexadecimal string</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>h</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Color-&gt;toHex">
<sdesc>Get RGB value as hexidecimal string (e.g. #990000)</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ColoredConsoleAppender-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>ColoredConsoleAppender</type>
<methodparam>
<type>string</type>
<parameter>cerror</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>cwarn</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>cinfo</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>cdebug</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>cdefault</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ColoredConsoleAppender-&gt;append">
<sdesc>Appends log data to STDERR</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Comment-&gt;fromString">
<sdesc>Create a comment from a string</sdesc>
<desc></desc>
<type>&amp;lang.apidoc.Comment</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Comment-&gt;getText">
<sdesc>Gets text</sdesc>
<desc></desc>
<type>strung</type>
</methodsynopsis>
<methodsynopsis function="Comment-&gt;setText">
<sdesc>Sets text</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>text</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CommentFactory-&gt;factory">
<sdesc>Creates</sdesc>
<desc></desc>
<type>lang.apidoc.Comment</type>
<methodparam>
<type>const</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="COMObject-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>COMObject</type>
<methodparam>
<type>string</type>
<parameter>identifier</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>server</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="COMObject-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="COMObject-&gt;__call">
<sdesc>Magic interceptor for member method access</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>args</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>return</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="COMObject-&gt;__get">
<sdesc>Magic interceptor for member read access</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="COMObject-&gt;__set">
<sdesc>Magic interceptor for member write access</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Comparator-&gt;compare">
<sdesc>Compares its two arguments for order. Returns a negative integer,  zero, or a positive integer as the first argument is less than,  equal to, or greater than the second.</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;a</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;b</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Completer-&gt;complete">
<sdesc>Completion function</sdesc>
<desc></desc>
<type>string[]</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>offset</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>length</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Configurable-&gt;configure">
<sdesc>Configure</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;util.Properties</type>
<parameter>&amp;properties</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ConnectionEvent-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>ConnectionEvent</type>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
<methodparam>
<type>&amp;peer.Socket</type>
<parameter>&amp;stream</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ConnectionListener-&gt;connected">
<sdesc>Method to be triggered when a client connects</sdesc>
<desc>Example:  1      (&quot;&gt;&gt;&gt; ConnectionListener::connected() @%d\n&quot;, ());</desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ConnectionListener-&gt;data">
<sdesc>Method to be triggered when a client has sent data</sdesc>
<desc>Example:  1        (2          &quot;&gt;&gt;&gt; ConnectionListener::data(%s) @%d\n&quot;,3          ($event-&gt;, [...]), // see addcslashes() manual page4          ()5        );6        if ('QUIT' == ($event-&gt;, 0, 4)) {7          $event-&gt;stream-&gt;close();8        }</desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ConnectionListener-&gt;disconnected">
<sdesc>Method to be triggered when a client disconnects</sdesc>
<desc>Example:  1      (&quot;&gt;&gt;&gt; ConnectionListener::disconnected() @%d\n&quot;, ());</desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ConnectionListener-&gt;error">
<sdesc>Method to be triggered when a communication error occurs</sdesc>
<desc>Example:  1      (&quot;&gt;&gt;&gt; ConnectionListener::error() @%d\n&quot;, ());2      $event-&gt;-&gt;printStackTrace();</desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ConnectionManager-&gt;configure">
<sdesc>Configure this ConnectionManager</sdesc>
<desc>A sample configuration file:   [caffeine]
 dsn=&quot;sybase://news:enieffac@gurke/CAFFEINE?autoconnect=1&quot;

 [caffeine.dbo]
 dsn=&quot;sybase://timm:binford@gurke/CAFFEINE?autoconnect=1&quot;</desc>
<type>bool</type>
<methodparam>
<type>&amp;util.Properties</type>
<parameter>&amp;properties</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ConnectionManager-&gt;get">
<sdesc>Return a database connection object by host and user</sdesc>
<desc></desc>
<type>&amp;rdbms.DBConnection</type>
<methodparam>
<type>string</type>
<parameter>host</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>user</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ConnectionManager-&gt;getByHost">
<sdesc>Return one or more connections by host</sdesc>
<desc></desc>
<type>&amp;rdbms.DBConnection</type>
<methodparam>
<type>string</type>
<parameter>hostName</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>num</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ConnectionManager-&gt;getConnections">
<sdesc>Retrieves all registered connections as an array of DBConnection  objects.</sdesc>
<desc></desc>
<type>rdbms.DBConnection[]</type>
</methodsynopsis>
<methodsynopsis function="ConnectionManager-&gt;getInstance">
<sdesc>Return the ConnectionManager's instance</sdesc>
<desc></desc>
<type>&amp;rdbms.ConnectionManager</type>
</methodsynopsis>
<methodsynopsis function="ConnectionManager-&gt;register">
<sdesc>Register a connection</sdesc>
<desc></desc>
<type>&amp;rdbms.DBConnection</type>
<methodparam>
<type>&amp;rdbms.DBConnection</type>
<parameter>&amp;conn</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>hostAlias</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>userAlias</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Console-&gt;flush">
<sdesc>Flush output buffer</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Console-&gt;read">
<sdesc>Read a single character from standard input.</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Console-&gt;readLine">
<sdesc>Read a line from standard input. The line ending (\r and/or \n)  is trimmed off the end.</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>prompt</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Console-&gt;write">
<sdesc>Write a string to standard output</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Console-&gt;writef">
<sdesc>Write a formatted string to standard output</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>mixed*</type>
<parameter>1</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Console-&gt;writeLine">
<sdesc>Write a string to standard output and append a newline</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Console-&gt;writeLinef">
<sdesc>Write a formatted string to standard output and append a newline</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>mixed*</type>
<parameter>1</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ConsoleAppender-&gt;append">
<sdesc>Appends log data to STDERR</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Constructor-&gt;getReturnType">
<sdesc>Retrieve return type</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Constructor-&gt;newInstance">
<sdesc>Uses the constructor represented by this Constructor object to create  and initialize a new instance of the constructor's declaring class,  with the specified initialization parameters.</sdesc>
<desc>Example:  1        $class= &amp;::('lang.Object');2        $constructor= &amp;$class-&gt;getConstructor();3     4        ($constructor-&gt;());</desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Context-&gt;getChanged">
<sdesc>Get changed flag</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Context-&gt;insertStatus">
<sdesc>Insert formresult nodes.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Context-&gt;process">
<sdesc>Process the context.</sdesc>
<desc>Does nothing in this default implementation.</desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Context-&gt;setChanged">
<sdesc>Set changed flag</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>changed</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Context-&gt;setup">
<sdesc>Setup context.</sdesc>
<desc>Does nothing in this default implementation.</desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Context-&gt;__sleep">
<sdesc>Sleep function. Returns an array of the names of those member  variables that should be serialized to the session. In this  implementation, it returns all public members (members whose names  do not begin with an underscore).</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="Cookie-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Cookie</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>value</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>expires</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>path</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>domain</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>secure</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Cookie-&gt;getDomain">
<sdesc>Get Domain. Note: This value is not available for cookies retrieved  from HttpScriptletRequest, as the browser does not submit this in  subsequent requests.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Cookie-&gt;getExpires">
<sdesc>Get Expires. Note: This value is not available for cookies retrieved  from HttpScriptletRequest, as the browser does not submit this in  subsequent requests.</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Cookie-&gt;getHeaderValue">
<sdesc>Get header value representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Cookie-&gt;getName">
<sdesc>Get Name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Cookie-&gt;getPath">
<sdesc>Get Path. Note: This value is not available for cookies retrieved  from HttpScriptletRequest, as the browser does not submit this in  subsequent requests.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Cookie-&gt;getSecure">
<sdesc>Get Secure. Note: This value is not available for cookies retrieved  from HttpScriptletRequest, as the browser does not submit this in  subsequent requests.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Cookie-&gt;getValue">
<sdesc>Get Value</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Cookie-&gt;setDomain">
<sdesc>Set Domain</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>domain</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Cookie-&gt;setExpires">
<sdesc>Set Expires</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>expires</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Cookie-&gt;setName">
<sdesc>Set Name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Cookie-&gt;setPath">
<sdesc>Set Path</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>path</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Cookie-&gt;setSecure">
<sdesc>Set Secure</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>secure</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Cookie-&gt;setValue">
<sdesc>Set Value</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CRC16-&gt;fromFile">
<sdesc>Create a new checksum from a file object</sdesc>
<desc></desc>
<type>&amp;security.checksum.CRC16</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CRC16-&gt;fromString">
<sdesc>Create a new checksum from a string</sdesc>
<desc></desc>
<type>&amp;security.checksum.CRC16</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CRC32-&gt;fromFile">
<sdesc>Create a new checksum from a file object</sdesc>
<desc></desc>
<type>&amp;security.checksum.CRC32</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CRC32-&gt;fromString">
<sdesc>Create a new checksum from a string</sdesc>
<desc></desc>
<type>&amp;security.checksum.CRC32</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Criteria-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Criteria</type>
<methodparam>
<type>array*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Criteria-&gt;add">
<sdesc>Add a condition</sdesc>
<desc>The order parameter may be one of the following constants:  INNOT_INLIKEEQUALNOT_EQUALLESS_THANGREATER_THANLESS_EQUALGREATER_EQUAL</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>value</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>comparison</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Criteria-&gt;addGroupBy">
<sdesc>Add group by</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>column</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Criteria-&gt;addOrderBy">
<sdesc>Add order by</sdesc>
<desc>1         ($c= &amp;new ()); {2          $this-&gt;('bz_id', 500, );3          $this-&gt;('created_at', );4        }The order parameter may be one of the following constants:  ASCENDINGDESCENDING</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>column</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>order</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Criteria-&gt;toSQL">
<sdesc>Export SQL</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>&amp;rdbms.DBConnection</type>
<parameter>&amp;db</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>types</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Criteria-&gt;toString">
<sdesc>Creates a string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="CSR-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>CSR</type>
<methodparam>
<type>&amp;security.Principal</type>
<parameter>&amp;principal</parameter>
</methodparam>
<methodparam>
<type>&amp;security.KeyPair</type>
<parameter>&amp;keypair</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CSR-&gt;export">
<sdesc>Export this CSR</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="CSR-&gt;sign">
<sdesc>Sign this CSR</sdesc>
<desc></desc>
<type>&amp;security.cert.X509Certificate</type>
<methodparam>
<type>&amp;security.KeyPair</type>
<parameter>&amp;keypair</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>days</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>cacert</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CSVGenerator-&gt;__construct">
<sdesc>Construct a CSVGenerator</sdesc>
<desc></desc>
<type>CSVGenerator</type>
</methodsynopsis>
<methodsynopsis function="CSVGenerator-&gt;setColDelimiter">
<sdesc>Sets another column delimiter (standard is pipe &quot;|&quot;).</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>char</type>
<parameter>delim</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CSVGenerator-&gt;setHeader">
<sdesc>Sets the header information. The keys in this array will be  used to write the records, so be sure they are named exactly  as the data.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>array</type>
<parameter>array</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CSVGenerator-&gt;setOutputStream">
<sdesc>Set the output stream. The stream must be writeable. If the  stream is not open, it will be opened.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>stream</type>
<parameter>&amp;stream</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CSVGenerator-&gt;writeRecord">
<sdesc>Writes a record into the stream.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>array</type>
<parameter>data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CSVParser-&gt;getColumnIndex">
<sdesc>Checks whether a certain column exists in the csv.</sdesc>
<desc>If not existColumn return FALSE, otherwise the index  of the column.</desc>
<type>int</type>
<methodparam>
<type>string</type>
<parameter>column</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CSVParser-&gt;getColumnName">
<sdesc>Retrieves the name of a column if one is available</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>nr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CSVParser-&gt;getHeaderRecord">
<sdesc>Read the record and save the result as the header record.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="CSVParser-&gt;getNextRecord">
<sdesc>Read the next record from the stream. This returns a  StdClass object with the members named as the header  record supposes. When no header was available, the  fields are enumerated.</sdesc>
<desc></desc>
<type>StdClass</type>
</methodsynopsis>
<methodsynopsis function="CSVParser-&gt;guessDelimiter">
<sdesc>Make an educated guess for the column delimiter. This reads  the next (first?) line from the stream, scans the frequency of  chars and returns the one with the highest occurrence (which  is in a certain range of chars).</sdesc>
<desc>Afterwards the stream is rewinded to the former position.</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="CSVParser-&gt;hasHeader">
<sdesc>Returns whether the header record has already been read.</sdesc>
<desc>There is no information in the CSV itself that states whether  an header record is available, so this has to be decided by  the calling program (or user).</desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="CSVParser-&gt;setColDelimiter">
<sdesc>Sets the new delimiter for columns. Once CSVs had comma &quot;,&quot; as  delimiters, today this varies. The pipe &quot;|&quot; is often used  as delimiter. It only makes sense to call this before any  line was read.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>char</type>
<parameter>delim</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CSVParser-&gt;setHeaderRecord">
<sdesc>Manually set the header information to be able to supply  additional information and get nicer output (non-enumerated)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CSVParser-&gt;setInputStream">
<sdesc>Sets the input stream. This stream must support  isOpen(), open(), eof(), readLine().</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type></type>
<parameter>&amp;stream</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CVSDirectory-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>CVSDirectory</type>
<methodparam>
<type>string</type>
<parameter>path</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CVSDirectory-&gt;update">
<sdesc>Update a directory</sdesc>
<desc></desc>
<type>stdclass[]</type>
<methodparam>
<type>bool</type>
<parameter>recursive</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>sim</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CVSDirectory-&gt;_execute">
<sdesc>Protected helper method that executes a CVS command, changing  to the desired directory before doing so and changing it back  after finishing.</sdesc>
<desc></desc>
<type>string[]</type>
<methodparam>
<type>string</type>
<parameter>cvsCmd</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CVSFile-&gt;__construct">
<sdesc>Construct a new CVS Interface object</sdesc>
<desc></desc>
<type>CVSFile</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CVSFile-&gt;add">
<sdesc>Adds a file to a repository. Please note, that it is neccessary  that the directory also already exists in CVS, otherwise  an error will be thrown.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="CVSFile-&gt;commit">
<sdesc>Commit the file (needs write access to repository)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>comment</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CVSFile-&gt;diff">
<sdesc>Compares two versions of this file. Leave both parameters NULL to  let CVS compare the local file agains the one in the repository.</sdesc>
<desc>Specify only $r1 to compare local version agains revision $r1.  Specify both params to diff two CVS-revisions against each other.  You can also use CVS-Tags here.</desc>
<type>array</type>
<methodparam>
<type>string</type>
<parameter>r1</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>r2</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CVSFile-&gt;getLog">
<sdesc>Get the log entries from cvs. The output format for those  log-entries are crap because the format is ambigous. This  parser will fail to correctly identify log-entries if any  log-line contains a line of 28 '-'.</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="CVSFile-&gt;getRevision">
<sdesc>Retrieves the data of the file at a specific revision.</sdesc>
<desc>If no revision is given, this fetches HEAD.</desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>rev</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CVSFile-&gt;getStatus">
<sdesc>Get the status from a file</sdesc>
<desc>The returned object has the form:</desc>
<type>&amp;stdclass</type>
</methodsynopsis>
<methodsynopsis function="CVSFile-&gt;remove">
<sdesc>Removes a file from the repository, deletes (renames) it locally.</sdesc>
<desc>To complete this action, you have to call commit. Use this with  caution.</desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="CVSFile-&gt;tag">
<sdesc>Tags a file in repository.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>tag</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CVSFile-&gt;update">
<sdesc>Update a file or directory</sdesc>
<desc></desc>
<type>stdclass[]</type>
<methodparam>
<type>bool</type>
<parameter>sim</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CVSFile-&gt;_execute">
<sdesc>Protected helper method that executes a CVS command, changing  to the desired directory before doing so and changing it back  after finishing.</sdesc>
<desc></desc>
<type>string[]</type>
<methodparam>
<type>string</type>
<parameter>cvsCmd</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CVSInterface-&gt;getCVSStatus">
<sdesc>Returns the internal statuscode from the cvs status code</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>char</type>
<parameter>statusCode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CVSInterface-&gt;getCVSStatusFromString">
<sdesc>Returns the internal statuscode from the cvs status string</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>string</type>
<parameter>statusCode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CVSInterface-&gt;setCVSRoot">
<sdesc>Set CVS-Root and Login  Login must be without &quot;-d&quot;  E.g: setCVSRoot ('/home/cvs/', ':ext:alex@php3.de')</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>cvsRoot</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>login</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CvsPassword-&gt;decode">
<sdesc>Decode a given string</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="CvsPassword-&gt;encode">
<sdesc>Encode a given string</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DaemonMailParser-&gt;addHeaderFound">
<sdesc>Set handler for the event that a header is found</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>header</parameter>
</methodparam>
<methodparam>
<type>function</type>
<parameter>func</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DaemonMailParser-&gt;addHeaderMatch">
<sdesc>Set handler for the event that a header matches a specified regular expression</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>header</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>regex</parameter>
</methodparam>
<methodparam>
<type>function</type>
<parameter>func</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DaemonMailParser-&gt;parse">
<sdesc>Parse a stream</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.mail.Message</type>
<parameter>&amp;message</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DaemonMessage-&gt;getFailedRecipient">
<sdesc>Get the recipient the message was destined for</sdesc>
<desc></desc>
<type>peer.mail.InternetAddress</type>
</methodsynopsis>
<methodsynopsis function="DaemonMessage-&gt;getReason">
<sdesc>Get the reason the message failed for</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DaemonMessage-&gt;setFailedRecipient">
<sdesc>Set the recipient the message was destined for</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.mail.InternetAddress</type>
<parameter>&amp;r</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DaemonMessage-&gt;setReason">
<sdesc>Set the reason the message failed for</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>reason</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DataSet-&gt;__construct">
<sdesc>Constructor. Supports the array syntax, where an associative  array is passed to the constructor, the keys being the member  variables and the values the member's values.</sdesc>
<desc></desc>
<type>DataSet</type>
<methodparam>
<type>array</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DataSet-&gt;changes">
<sdesc>Returns an array of fields that were changed suitable for passing  to Peer::doInsert() and Peer::doUpdate()</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="DataSet-&gt;delete">
<sdesc>Delete this dataset (remove the corresponding row from the table).</sdesc>
<desc>Does nothing in this default implementation and may be overridden  in subclasses where it makes sense.</desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="DataSet-&gt;doDelete">
<sdesc>Delete this object from the database by specified criteria</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>&amp;rdbms.Criteria</type>
<parameter>&amp;criteria</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DataSet-&gt;doInsert">
<sdesc>Update this object in the database by specified criteria</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="DataSet-&gt;doUpdate">
<sdesc>Update this object in the database by specified criteria</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>&amp;rdbms.Criteria</type>
<parameter>&amp;criteria</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DataSet-&gt;getPeer">
<sdesc>Retrieve associated peer</sdesc>
<desc></desc>
<type>&amp;rdbms.Peer</type>
</methodsynopsis>
<methodsynopsis function="DataSet-&gt;insert">
<sdesc>Insert this dataset (create a new row in the table).</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="DataSet-&gt;toString">
<sdesc>Creates a string representation of this dataset. In this default  implementation, it will look like the following:</sdesc>
<desc>de.thekid.db.News(0.86699200 1086297326)@{
     [newsId         PK,I] 76288
     [categoryId         ] 12
     [caption            ] 'Hello'
     [body               ] NULL
     [author             ] 'Timm'
     [createdAt          ] Thu,  3 Jun 2004 22:26:15 +0200
   }Note: Keys with a leading &quot;_&quot; will be omitted from the list, they  indicate &quot;protected&quot; members.</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DataSet-&gt;update">
<sdesc>Update this dataset (change an existing row in the table).</sdesc>
<desc>Updates the record by using the primary key(s) as criteria.</desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="DataSet-&gt;_change">
<sdesc>Changes a value by a specified key and returns the previous value.</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Date-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Date</type>
<methodparam>
<type>mixed</type>
<parameter>in</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Date-&gt;compareTo">
<sdesc>Compare this date to another date</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Date-&gt;equals">
<sdesc>Indicates whether the date to compare equals this date.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;cmp</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Date-&gt;format">
<sdesc>Format date</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>format</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Date-&gt;fromString">
<sdesc>Create a date from a string</sdesc>
<desc>1        $d= &amp;::('yesterday');2        $d= &amp;::('2003-02-01');</desc>
<type>&amp;util.Date</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Date-&gt;getDay">
<sdesc>Get day</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Date-&gt;getDayOfWeek">
<sdesc>Get day of week</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Date-&gt;getDayOfYear">
<sdesc>Get day of year</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Date-&gt;getHours">
<sdesc>Get hours</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Date-&gt;getMinutes">
<sdesc>Get minutes</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Date-&gt;getMonth">
<sdesc>Get month</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Date-&gt;getSeconds">
<sdesc>Get seconds</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Date-&gt;getTime">
<sdesc>Retrieve Unix-Timestamp for this date</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Date-&gt;getYear">
<sdesc>Get year</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Date-&gt;isAfter">
<sdesc>Checks whether this date is after a given date</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Date-&gt;isBefore">
<sdesc>Checks whether this date is before a given date</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Date-&gt;mktime">
<sdesc>Overflow-safe replacement for PHP's mktime() function. Uses the builtin  function in case the year is between 1971 and 2037.</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>hour</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>minute</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>second</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>month</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>day</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>year</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>is_dst</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Date-&gt;now">
<sdesc>Static method to get current date/time</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="Date-&gt;toString">
<sdesc>Create a string representation</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>format</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Date-&gt;_getdate">
<sdesc>Overflow-safe replacement for PHP's getdate() function. Uses the  builtin function when 0 </sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>int</type>
<parameter>stamp</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Date-&gt;_getGMTOffset">
<sdesc>Get local time zones' offset from GMT (Greenwich main time).</sdesc>
<desc>Caches the result.</desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Date-&gt;_isLeapYear">
<sdesc>Returns whether a year is a leap year</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>year</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Date-&gt;_strtotime">
<sdesc>Overflow-safe replacement for PHP's strtotime() function.</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>string</type>
<parameter>in</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DateChecker-&gt;check">
<sdesc>Check a given value</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DateFormat-&gt;apply">
<sdesc>Apply format to argument</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>fmt</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;argument</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DateFormat-&gt;getInstance">
<sdesc>Get an instance</sdesc>
<desc></desc>
<type>&amp;text.format.DateFormat</type>
</methodsynopsis>
<methodsynopsis function="DateParser-&gt;parse">
<sdesc>Parse a date</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>string</type>
<parameter>s</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DateTest-&gt;setUp">
<sdesc>Set up this test</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DateTest-&gt;testCalendarAdvent">
<sdesc>Test calendar class (first of advent calculation)</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DateTest-&gt;testCalendarBasic">
<sdesc>Test calendar class</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DateTest-&gt;testCalendarDSTBegin">
<sdesc>Test calendar class (DST / daylight savings times)</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DateTest-&gt;testCalendarDSTEnd">
<sdesc>Test calendar class (DST / daylight savings times)</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DateTest-&gt;testCalendarEaster">
<sdesc>Test calendar class (easter day calculation)</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DateTest-&gt;testDate">
<sdesc>Test date class</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DateUtil-&gt;addDays">
<sdesc>Adds a positive or negative amount of days</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>count</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DateUtil-&gt;addHours">
<sdesc>Adds a positive or negative amount of hours</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>count</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DateUtil-&gt;addMinutes">
<sdesc>Adds a positive or negative amount of minutes</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>count</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DateUtil-&gt;addMonths">
<sdesc>Adds a positive or negative amount of months</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>count</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DateUtil-&gt;addSeconds">
<sdesc>Adds a positive or negative amount of seconds</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>count</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DateUtil-&gt;addWeeks">
<sdesc>Adds a positive or negative amount of weeks</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>count</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DateUtil-&gt;getFirstOfMonth">
<sdesc>Gets the first day of the month</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DateUtil-&gt;getLastOfMonth">
<sdesc>Gets the last day of the month</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DateUtil-&gt;getMidnight">
<sdesc>Returns a Date object which represents the date at  the given date at midnight.</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavFileImpl-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DavFileImpl</type>
<methodparam>
<type>string</type>
<parameter>base</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavFileImpl-&gt;backup">
<sdesc>Move a file</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>destination</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavFileImpl-&gt;copy">
<sdesc>Copy a file</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>destination</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>overwrite</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavFileImpl-&gt;delete">
<sdesc>Delete a file</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavFileImpl-&gt;get">
<sdesc>Get a file</sdesc>
<desc></desc>
<type>&amp;org.webdav.WebdavObject</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavFileImpl-&gt;lock">
<sdesc>do locking</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;org.webdav.xml.WebdavLockRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.xml.WebdavScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavFileImpl-&gt;mkcol">
<sdesc>Make a directory (&quot;collection&quot;)</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>col</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavFileImpl-&gt;move">
<sdesc>Move a file</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>destination</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>overwrite</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>docopy</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavFileImpl-&gt;propfind">
<sdesc>Find properties</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;org.webdav.xml.WebdavPropFindRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.xml.WebdavMultistatusResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavFileImpl-&gt;proppatch">
<sdesc>Patch properties</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;org.webdav.xml.WebdavPropPatchRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.xml.WebdavPropPatchResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavFileImpl-&gt;put">
<sdesc>Put a file</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>&amp;data</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>resourcetype</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavFileImpl-&gt;report">
<sdesc>Report version status</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;org.webdav.xml.WebdavPropFindRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.xml.WebdavMultistatusResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavFileImpl-&gt;unlock">
<sdesc>do unlocking</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;org.webdav.xml.WebdavScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.xml.WebdavScripltetResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavFileImpl-&gt;VersionControl">
<sdesc>Start Version-Control of file</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>path</parameter>
</methodparam>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavImpl-&gt;copy">
<sdesc>Copy a file</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>destination</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>overwrite</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavImpl-&gt;delete">
<sdesc>Delete a file</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavImpl-&gt;get">
<sdesc>Get a file</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavImpl-&gt;getCapabilities">
<sdesc>Retreive implementation's capabilites</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="DavImpl-&gt;getLockInfo">
<sdesc>Retrieve lock information</sdesc>
<desc></desc>
<type>org.webdav.WebdavLock</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavImpl-&gt;lock">
<sdesc>Lock a File</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;org.webdav.xml.WebdavLockRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.xml.WebdavScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavImpl-&gt;mkcol">
<sdesc>Make a directory</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>colname</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavImpl-&gt;move">
<sdesc>Move a file</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>destination</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>overwrite</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavImpl-&gt;propfind">
<sdesc>Find properties</sdesc>
<desc></desc>
<type>&amp;org.webdav.xml.WebdavMultistatus</type>
<methodparam>
<type>&amp;org.webdav.xml.WebdavPropFindRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.xml.WebdavMultistatus</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavImpl-&gt;proppatch">
<sdesc>Patch properties</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;org.webdav.xml.WebdavPropPatcRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavImpl-&gt;put">
<sdesc>Put a file</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
<methodparam>
<type>&amp;string</type>
<parameter>&amp;data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavImpl-&gt;report">
<sdesc>Report version status</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;org.webdav.xml.WebdavLockRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.xml.WebdavScriptletResponse</type>
<parameter>response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavImpl-&gt;setLockInfo">
<sdesc>Set lock for URI</sdesc>
<desc></desc>
<type>&amp;org.webdav.WebdavLock</type>
<methodparam>
<type>&amp;org.webdav.WebdavLock</type>
<parameter>&amp;lock</parameter>
</methodparam>
<methodparam>
<type>string[]</type>
<parameter>tokens</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavImpl-&gt;unlock">
<sdesc>Unlock a File</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;org.webdav.xml.WebdavLockRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.xml.WebdavScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DavImpl-&gt;VersionControl">
<sdesc>Start Version-Control of file</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>path</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAdapter-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DBAdapter</type>
<methodparam>
<type>&amp;Object</type>
<parameter>&amp;conn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAdapter-&gt;getDatabases">
<sdesc>Get databaases</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAdapter-&gt;getTable">
<sdesc>Get a table</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAdapter-&gt;getTables">
<sdesc>Get tables</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>database</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFile-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DBAFile</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>handler</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFile-&gt;close">
<sdesc>Close this database</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="DBAFile-&gt;delete">
<sdesc>Removes a specified key from this database</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFile-&gt;fetch">
<sdesc>Fetches the value associated with a specified key from this  database. Returns FALSE in case the key cannot be found.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFile-&gt;getFilename">
<sdesc>Get Filename</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DBAFile-&gt;getHandler">
<sdesc>Get Handler</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DBAFile-&gt;insert">
<sdesc>Inserts the entry described with key and value into the  database. Fails if an entry with the same key already  exists.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFile-&gt;iterator">
<sdesc>Returns an iterator over the keys of this DBA file</sdesc>
<desc></desc>
<type>&amp;io.dba.DBAIterator</type>
</methodsynopsis>
<methodsynopsis function="DBAFile-&gt;keys">
<sdesc>Returns an array of keys</sdesc>
<desc>Note: Do not use this for databases containing large amounts  of keys, use the iterator() method instead.</desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="DBAFile-&gt;lookup">
<sdesc>Checks for existance of a key</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFile-&gt;open">
<sdesc>Open this DBA file</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>mode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFile-&gt;save">
<sdesc>Synchronizes the database specified by handle. This will  probably trigger a physical write to disk, if supported.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>bool</type>
<parameter>optimize</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFile-&gt;store">
<sdesc>Replaces or inserts the entry described with key and value  into the database.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFilePropertyStorage-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DBAFilePropertyStorage</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>handler</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFilePropertyStorage-&gt;getLock">
<sdesc>Retrieve lock for specific URI</sdesc>
<desc></desc>
<type>&amp;org.webdav.WebdavLock</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFilePropertyStorage-&gt;getProperties">
<sdesc>Read all properties for specific uri</sdesc>
<desc></desc>
<type>org.webdav.WebdavProperty[]</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFilePropertyStorage-&gt;getProperty">
<sdesc>Retrieve property for specific URI</sdesc>
<desc></desc>
<type>&amp;org.webdav.WebdavProperty</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFilePropertyStorage-&gt;hasProperty">
<sdesc>Check if property is available</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFilePropertyStorage-&gt;removeLock">
<sdesc>Deletes a Lock for a specific URI</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFilePropertyStorage-&gt;setLock">
<sdesc>Sets a Lock for a specific URI</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
<methodparam>
<type>org.webdav.WebdavLock</type>
<parameter>&amp;lock</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFilePropertyStorage-&gt;setProperties">
<sdesc>Set all properties for specific uri</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
<methodparam>
<type>org.webdav.WebdavProperty[]</type>
<parameter>properties</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAFilePropertyStorage-&gt;setProperty">
<sdesc>Sets a property for a specific URI</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.WebdavProperty</type>
<parameter>&amp;property</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAIterator-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DBAIterator</type>
<methodparam>
<type>resource</type>
<parameter>fd</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAIterator-&gt;hasNext">
<sdesc>Returns true if the iteration has more elements. (In other words,  returns true if next would return an element rather than throwing  an exception.)</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="DBAIterator-&gt;next">
<sdesc>Returns the next element in the iteration.</sdesc>
<desc></desc>
<type>&amp;mixed</type>
</methodsynopsis>
<methodsynopsis function="DBAStorage-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DBAStorage</type>
<methodparam>
<type>string</type>
<parameter>handler</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAStorage-&gt;contains">
<sdesc>Returns whether this storage contains the given key</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAStorage-&gt;free">
<sdesc>Remove all keys</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DBAStorage-&gt;get">
<sdesc>Get a key by it's name</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAStorage-&gt;initialize">
<sdesc>Initialize this storage</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAStorage-&gt;keys">
<sdesc>Get all keys</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="DBAStorage-&gt;put">
<sdesc>Insert/update a key</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>permissions</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBAStorage-&gt;remove">
<sdesc>Remove a key</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DBConnection</type>
<methodparam>
<type>&amp;rdbms.DSN</type>
<parameter>&amp;dsn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;begin">
<sdesc>Begin a transaction</sdesc>
<desc></desc>
<type>&amp;rdbms.DBTransaction</type>
<methodparam>
<type>&amp;rdbms.DBTransaction</type>
<parameter>&amp;transaction</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;close">
<sdesc>Disconnect</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;commit">
<sdesc>Commit a transaction</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;connect">
<sdesc>Connect</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;delete">
<sdesc>Execute an update statement</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;getTimeout">
<sdesc>Get Timeout</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;hasChanged">
<sdesc>Checks whether changed flag is set</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;hashCode">
<sdesc>Returns a hashcode for this connection</sdesc>
<desc>Example:     sybase-ct link #50</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;identity">
<sdesc>Retrieve identity</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;insert">
<sdesc>Execute an insert statement</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;prepare">
<sdesc>Prepare an SQL statement</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;query">
<sdesc>Execute any statement</sdesc>
<desc></desc>
<type>&amp;rdbms.ResultSet</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;rollback">
<sdesc>Rollback a transaction</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;select">
<sdesc>Execute a select statement</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;selectdb">
<sdesc>Select database</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>db</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;setFlag">
<sdesc>Set a flag</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>flag</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;setTimeout">
<sdesc>Set Timeout</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>timeout</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;transtate">
<sdesc>Retrieve transaction state</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBConnection-&gt;update">
<sdesc>Execute an update statement</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBEvent-&gt;__construct">
<sdesc>Constructor.</sdesc>
<desc></desc>
<type>DBEvent</type>
</methodsynopsis>
<methodsynopsis function="DBEvent-&gt;getArgument">
<sdesc>Get Arg</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
</methodsynopsis>
<methodsynopsis function="DBEvent-&gt;getName">
<sdesc>Get Name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DBEvent-&gt;setArgument">
<sdesc>Set Arg</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;arg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBEvent-&gt;setName">
<sdesc>Set Name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBEvent-&gt;toString">
<sdesc>Return the string representation for this event.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DBIndex-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DBIndex</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string[]</type>
<parameter>keys</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBIndex-&gt;getKeys">
<sdesc>Returns all keys</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="DBIndex-&gt;getName">
<sdesc>Return this index' name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DBIndex-&gt;isPrimaryKey">
<sdesc>Return whether this is the primary key</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="DBIndex-&gt;isUnique">
<sdesc>Return whether this index is unique</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="DBObserver-&gt;instanceFor">
<sdesc>Retrieves an instance.</sdesc>
<desc></desc>
<type>&amp;rdbms.DBObserver</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBTable-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DBTable</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBTable-&gt;addAttribute">
<sdesc>Add an attribute</sdesc>
<desc></desc>
<type>&amp;rdbms.DBAttribute</type>
<methodparam>
<type>&amp;rdbms.DBAttribute</type>
<parameter>&amp;attr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBTable-&gt;addIndex">
<sdesc>Add an index</sdesc>
<desc></desc>
<type>&amp;rdbms.DBIndex</type>
<methodparam>
<type>&amp;rdbms.DBIndex</type>
<parameter>&amp;index</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBTable-&gt;getByDatabase">
<sdesc>Get tables by database</sdesc>
<desc></desc>
<type>&amp;rdbms.DBTable[]</type>
<methodparam>
<type>&amp;rdbms.DBAdapter</type>
<parameter>&amp;adapter</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>database</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBTable-&gt;getByName">
<sdesc>Get a table by it's name</sdesc>
<desc></desc>
<type>&amp;rdbms.DBTable</type>
<methodparam>
<type>&amp;rdbms.DBAdapter</type>
<parameter>&amp;adapter</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBTable-&gt;getFirstAttribute">
<sdesc>Get first attribute - Iterator function</sdesc>
<desc></desc>
<type>&amp;rdbms.DBAttribute</type>
</methodsynopsis>
<methodsynopsis function="DBTable-&gt;getFirstIndex">
<sdesc>Get first index - Iterator function</sdesc>
<desc></desc>
<type>&amp;rdbms.DBIndex</type>
</methodsynopsis>
<methodsynopsis function="DBTable-&gt;getNextAttribute">
<sdesc>Get next attribute - Iterator function</sdesc>
<desc>Example:  1        $table= &amp;::($adapter, 'person');2        $attr= $table-&gt;();3        do {4          ($attr);5        } while ($attr= $table-&gt;());</desc>
<type>&amp;rdbms.DBAttribute</type>
</methodsynopsis>
<methodsynopsis function="DBTable-&gt;getNextIndex">
<sdesc>Get next index - Iterator function</sdesc>
<desc></desc>
<type>&amp;rdbms.DBIndex</type>
</methodsynopsis>
<methodsynopsis function="DBTable-&gt;hasAttribute">
<sdesc>Check to see if there is an attribute of this table with the name specified</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBTableAttribute-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DBTableAttribute</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>type</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>identity</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>nullable</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>length</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>precision</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>scale</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBTableAttribute-&gt;getName">
<sdesc>Returns this attribute's name</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="DBTableAttribute-&gt;getTypeString">
<sdesc>Returns a textual representation of the type, e.g.</sdesc>
<desc>DB_ATTRTYPE_VARCHAR</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DBTableAttribute-&gt;isIdentity">
<sdesc>Returns whether this attribute is an identity field</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="DBTableAttribute-&gt;isNullable">
<sdesc>Returns whether this attribute is nullable</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="DBTableAttribute-&gt;typeName">
<sdesc>Return this attribute's type name (for XP)</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DBTest-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DBTest</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>dsn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBTest-&gt;setUp">
<sdesc>Setup function</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DBTest-&gt;tearDown">
<sdesc>Tear down function</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DBTest-&gt;testConnect">
<sdesc>Test database connect</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DBTest-&gt;testSelect">
<sdesc>Test database select</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DBXmlGenerator-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DBXmlGenerator</type>
</methodsynopsis>
<methodsynopsis function="DBXmlGenerator-&gt;createFromTable">
<sdesc>Create XML from a DBTable</sdesc>
<desc></desc>
<type>&amp;rdbms.util.DBXmlGenerator</type>
<methodparam>
<type>&amp;rdbms.DBTable</type>
<parameter>&amp;table</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>dbhost</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>database</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DBXmlGenerator-&gt;getSource">
<sdesc>Get XML source</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DetailsState-&gt;process">
<sdesc>Process this state</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="scriptlet-&gt;except">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DevelState-&gt;process">
<sdesc>Process this state.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DictClient-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DictClient</type>
<methodparam>
<type>string</type>
<parameter>info</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DictClient-&gt;close">
<sdesc>Disconnect</sdesc>
<desc>Example of C/S communication:   &gt;&gt;&gt; QUIT
 &lt;&lt;&lt; 221 bye [d/m/c = 0/0/0; 87.000r 0.000u 0.000s]</desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="DictClient-&gt;connect">
<sdesc>Connect to a DICT server</sdesc>
<desc>Example of C/S communication:   &lt;&lt;&lt; 220 miranda.org dictd 1.7.0/rf on Linux 2.2.19 &lt;auth.mime&gt; &lt;1110507.2399.1042576&gt;&gt;&gt; CLIENT netcat
 &lt;&lt;&lt; 250 ok</desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>server</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DictClient-&gt;getDatabaseInfo">
<sdesc>Retrieve information</sdesc>
<desc>Example of C/S communication:   &gt;&gt;&gt; SHOW INFO devils
 &lt;&lt;&lt; 112 information for devils
 &lt;&lt;&lt; 00-database-info
 &lt;&lt;&lt; This file was converted from the original database on:
 &lt;&lt;&lt;           Sun Sep 10 15:32:59 2000
 &lt;&lt;&lt; [...]
 &lt;&lt;&lt; .
 &lt;&lt;&lt; 250 ok</desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="DictClient-&gt;getDatabases">
<sdesc>Get available databases</sdesc>
<desc>Example of C/S communication:   &gt;&gt;&gt; SHOW DB
 &lt;&lt;&lt; 110 11 databases present
 &lt;&lt;&lt; elements &quot;Elements database 20001107&quot;
 &lt;&lt;&lt; web1913 &quot;Webster's Revised Unabridged Dictionary (1913)&quot;
 &lt;&lt;&lt; wn &quot;WordNet (r) 1.7&quot;
 &lt;&lt;&lt; gazetteer &quot;U.S. Gazetteer (1990)&quot;
 &lt;&lt;&lt; jargon &quot;Jargon File (4.3.0, 30 APR 2001)&quot;
 &lt;&lt;&lt; foldoc &quot;The Free On-line Dictionary of Computing (09 FEB 02)&quot;
 &lt;&lt;&lt; easton &quot;Easton's 1897 Bible Dictionary&quot;
 &lt;&lt;&lt; hitchcock &quot;Hitchcock's Bible Names Dictionary (late 1800's)&quot;
 &lt;&lt;&lt; devils &quot;THE DEVIL'S DICTIONARY ((C)1911 Released April 15 1993)&quot;
 &lt;&lt;&lt; world95 &quot;The CIA World Factbook (1995)&quot;
 &lt;&lt;&lt; vera &quot;V.E.R.A. -- Virtual Entity of Relevant Acronyms December 2001&quot;
 &lt;&lt;&lt; .
 &lt;&lt;&lt; 250 ok</desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="DictClient-&gt;getDefinition">
<sdesc>Get a definition fo a word</sdesc>
<desc>Example of C/S communication:   &gt;&gt;&gt; DEFINE * 'database'
 &lt;&lt;&lt; 150 2 definitions retrieved
 &lt;&lt;&lt; 151 &quot;database&quot; wn &quot;WordNet (r) 1.7&quot;
 &lt;&lt;&lt; database
 &lt;&lt;&lt;      n : an organized body of related information
 &lt;&lt;&lt; .
 &lt;&lt;&lt; 151 &quot;database&quot; foldoc &quot;The Free On-line Dictionary of Computing (09 FEB 02)&quot;
 &lt;&lt;&lt; database
 &lt;&lt;&lt;
 &lt;&lt;&lt;    1. &lt;database&gt; One or more large structured sets of persistent
 &lt;&lt;&lt; [...]
 &lt;&lt;&lt; .
 &lt;&lt;&lt; 250 ok [d/m/c = 2/0/112; 0.000r 0.000u 0.000s]&gt;&gt;&gt; define * 'Deutsch'
 &lt;&lt;&lt; 552 no match [d/m/c = 0/0/107; 0.000r 0.000u 0.000s]</desc>
<type>org.dict.DictDefinitionEntry[]</type>
<methodparam>
<type>string</type>
<parameter>word</parameter>
</methodparam>
<methodparam>
<type>strind</type>
<parameter>db</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DictClient-&gt;getServer">
<sdesc>Get server statistics</sdesc>
<desc>Example of C/S communication:   &gt;&gt;&gt; SHOW SERVER
 &lt;&lt;&lt; 114 server information
 &lt;&lt;&lt; dictd 1.7.0/rf on Linux 2.2.19
 &lt;&lt;&lt; On miranda.org: up 35+19:00:44, 1110507 forks (1292.8/hour)
 &lt;&lt;&lt;
 &lt;&lt;&lt; Database      Headwords         Index          Data  Uncompressed
 &lt;&lt;&lt; elements            130          2 kB         14 kB         45 kB
 &lt;&lt;&lt; web1913          185399       3438 kB         11 MB         30 MB
 &lt;&lt;&lt; wn               136975       2763 kB       8173 kB         25 MB
 &lt;&lt;&lt; gazetteer         52994       1087 kB       1754 kB       8351 kB
 &lt;&lt;&lt; jargon             2373         42 kB        619 kB       1427 kB
 &lt;&lt;&lt; foldoc            13533        262 kB       2016 kB       4947 kB
 &lt;&lt;&lt; easton             3968         64 kB       1077 kB       2648 kB
 &lt;&lt;&lt; hitchcock          2619         34 kB         33 kB         85 kB
 &lt;&lt;&lt; devils              997         15 kB        161 kB        377 kB
 &lt;&lt;&lt; world95             277          5 kB        936 kB       2796 kB
 &lt;&lt;&lt; vera               8930        101 kB        154 kB        537 kB
 &lt;&lt;&lt; .
 &lt;&lt;&lt; 250 ok</desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="DictClient-&gt;getStatus">
<sdesc>Retrieve status</sdesc>
<desc>Example of C/S communication:   &gt;&gt;&gt; STATUS
 &lt;&lt;&lt; 210 status [d/m/c = 0/167/2380096; 211.000r 0.000u 0.000s]</desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="DictClient-&gt;getStrategies">
<sdesc>Get available strategies</sdesc>
<desc>Example of C/S communication:   &gt;&gt;&gt; SHOW STRAT
 &gt;&gt;&gt; 111 8 databases present
 &lt;&lt;&lt; exact &quot;Match words exactly&quot;
 &lt;&lt;&lt; prefix &quot;Match prefixes&quot;
 &lt;&lt;&lt; substring &quot;Match substring occurring anywhere in word&quot;
 &lt;&lt;&lt; suffix &quot;Match suffixes&quot;
 &lt;&lt;&lt; re &quot;POSIX 1003.2 (modern) regular expressions&quot;
 &lt;&lt;&lt; regexp &quot;Old (basic) regular expressions&quot;
 &lt;&lt;&lt; soundex &quot;Match using SOUNDEX algorithm&quot;
 &lt;&lt;&lt; lev &quot;Match words within Levenshtein distance one&quot;
 &lt;&lt;&lt; .
 &lt;&lt;&lt; 250 ok</desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="DictClient-&gt;getWords">
<sdesc>Get words</sdesc>
<desc>Example of C/S communication:   &gt;&gt;&gt; MATCH * substring database
 &lt;&lt;&lt; 152 81 matches found
 &lt;&lt;&lt; elements &quot;00-database-info&quot;
 &lt;&lt;&lt; [...]
 &lt;&lt;&lt; vera &quot;00-database-url&quot;
 &lt;&lt;&lt; .
 &lt;&lt;&lt; 250 ok [d/m/c = 0/81/955839; 0.000r 0.000u 0.000s]</desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>word</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>strategy</parameter>
</methodparam>
<methodparam>
<type>strind</type>
<parameter>db</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DictClient-&gt;setTrace">
<sdesc>Set a trace for debugging</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DictDefinitionEntry-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DictDefinitionEntry</type>
<methodparam>
<type>string</type>
<parameter>database</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>definition</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DictDefinitionEntry-&gt;getDatabase">
<sdesc>Get Database</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DictDefinitionEntry-&gt;getDefinition">
<sdesc>Get Definition</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DictTest-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DictTest</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>server</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DictTest-&gt;setUp">
<sdesc>Setup function</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DictTest-&gt;tearDown">
<sdesc>Tear down this test case.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DictTest-&gt;testDefinition">
<sdesc>Test getting a definition</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;fromString">
<sdesc>Creates a DigestChallenge object from a string</sdesc>
<desc>Example input string:     realm=&quot;example.com&quot;,nonce=&quot;GMybUaOM4lpMlJbeRwxOLzTalYDwLAxv/sLf8de4DPA=&quot;,
   qop=&quot;auth,auth-int,auth-conf&quot;,cipher=&quot;rc4-40,rc4-56,rc4&quot;,charset=utf-8,
   algorithm=md5-sess</desc>
<type>&amp;security.sasl.DigestChallenge</type>
<methodparam>
<type>string</type>
<parameter>s</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;getAlgorithm">
<sdesc>Get Algorithm</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;getCharset">
<sdesc>Get Charset</sdesc>
<desc>This directive, if present, specifies that the server supports  UTF-8 encoding for the username and password. If not present, the  username and password must be encoded in ISO 8859-1 (of which  US-ASCII is a subset). The directive is needed for backwards  compatibility with HTTP Digest, which only supports ISO 8859-1.  This directive may appear at most once; if multiple instances are  present, the client should abort the authentication exchange.</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;getCipher">
<sdesc>Get Cipher</sdesc>
<desc></desc>
<type>mixed[]</type>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;getDomain">
<sdesc>Get Domain</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;getMaxbuf">
<sdesc>Get Maxbuf</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;getNonce">
<sdesc>Get Nonce</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;getOpaque">
<sdesc>Get Opaque</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;getQop">
<sdesc>Get Qop (the &quot;quality of protection&quot; values).  The value &quot;auth&quot;  indicates authentication; the value &quot;auth-int&quot; indicates  authentication with integrity protection; the value &quot;auth-conf&quot;  indicates authentication with integrity protection and encryption.</sdesc>
<desc></desc>
<type>mixed[]</type>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;getRealm">
<sdesc>Get Realm. Definition (realm):</sdesc>
<desc>Mechanistically, a string which can enable users to know which  username and password to use, in case they might have different  ones for different servers. Conceptually, it is the name of a  collection of accounts that might include the user's account. This  string should contain at least the name of the host performing the  authentication and might additionally indicate the collection of  users who might have access. An example might be  &quot;registered_users@gotham.news.example.com&quot;.  This directive is  optional; if not present, the client SHOULD solicit it from the  user or be able to compute a default; a plausible default might be  the realm supplied by the user when they logged in to the client  system. Multiple realm directives are allowed, in which case the  user or client must choose one as the realm for which to supply to  username and password.</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;getStale">
<sdesc>Get Stale</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;hasCipher">
<sdesc>Check whether a specified cipher value exists</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>cipher</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;hasQop">
<sdesc>Check whether a specified qop is present</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>qop</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;responseFor">
<sdesc>Returns the challenge response</sdesc>
<desc></desc>
<type>&amp;security.sasl.DigestResponse</type>
<methodparam>
<type>string</type>
<parameter>qop</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>user</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>pass</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>authzid</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;setAlgorithm">
<sdesc>Set Algorithm</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>algorithm</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;setCharset">
<sdesc>Set Charset</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>charset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;setCipher">
<sdesc>Set Cipher</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed[]</type>
<parameter>cipher</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;setDomain">
<sdesc>Set Domain</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>domain</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;setMaxbuf">
<sdesc>Set Maxbuf</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>maxbuf</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;setNonce">
<sdesc>Set Nonce</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>nonce</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;setOpaque">
<sdesc>Set Opaque</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>opaque</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;setQop">
<sdesc>Set Qop</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed[]</type>
<parameter>qop</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;setRealm">
<sdesc>Set Realm</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>realm</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestChallenge-&gt;setStale">
<sdesc>Set Stale</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>stale</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DigestResponse</type>
<methodparam>
<type>string</type>
<parameter>realm</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nonce</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>qop</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;getAuthzid">
<sdesc>Get Authzid</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;getCharset">
<sdesc>Get Charset</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;getDigestUri">
<sdesc>Get DigestUri</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;getNcount">
<sdesc>Get Ncount</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;getNonce">
<sdesc>Get Nonce</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;getPass">
<sdesc>Get Pass</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;getQop">
<sdesc>Get Qop</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;getString">
<sdesc>Retrieve response string</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;getUser">
<sdesc>Get User</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;setAuthzid">
<sdesc>Set Authzid</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>authzid</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;setCharset">
<sdesc>Set Charset</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>charset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;setDigestUri">
<sdesc>Set DigestUri</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>digestUri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;setNcount">
<sdesc>Set Ncount</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>ncount</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;setNonce">
<sdesc>Set Nonce</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>nonce</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;setPass">
<sdesc>Set Pass</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>pass</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;setQop">
<sdesc>Set Qop</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>qop</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;setUser">
<sdesc>Set User</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>user</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DigestResponse-&gt;_encode">
<sdesc>Helper method for encoding strings</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DirectoryCategory-&gt;getFullViewableName">
<sdesc>Retrieves fullViewableName</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DirectoryCategory-&gt;getSpecialEncoding">
<sdesc>Retrieves specialEncoding</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DirectoryCategory-&gt;setFullViewableName">
<sdesc>Sets fullViewableName</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>fullViewableName</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DirectoryCategory-&gt;setSpecialEncoding">
<sdesc>Sets specialEncoding</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>specialEncoding</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Document-&gt;createElement">
<sdesc>Creates an element of the type specified.</sdesc>
<desc></desc>
<type>&amp;xml.Node</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Document-&gt;fromFile">
<sdesc>Construct a document from a file</sdesc>
<desc></desc>
<type>&amp;xml.dom.Document</type>
<methodparam>
<type>&amp;xml.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Document-&gt;fromString">
<sdesc>Construct a document from a string</sdesc>
<desc></desc>
<type>&amp;xml.dom.Document</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Document-&gt;getDocumentElement">
<sdesc>This is a convenience method that allows direct access to the  child node that is the root element of the document.</sdesc>
<desc></desc>
<type>&amp;xml.Node</type>
</methodsynopsis>
<methodsynopsis function="Document-&gt;getElementById">
<sdesc>Returns an object reference to the identified element.</sdesc>
<desc></desc>
<type>&amp;xml.Node</type>
<methodparam>
<type>string</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Document-&gt;getElementsByName">
<sdesc>Returns a list of elements of a given name in the document.</sdesc>
<desc></desc>
<type>xml.Node[]</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>max</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Document-&gt;getElementsByTagName">
<sdesc>Returns a list of elements of a given tag name in the document.</sdesc>
<desc></desc>
<type>xml.Node[]</type>
<methodparam>
<type>string</type>
<parameter>tagname</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>max</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Document-&gt;_getElementsByAttribute">
<sdesc>Helper method</sdesc>
<desc></desc>
<type>xml.Node[]</type>
<methodparam>
<type>&amp;xml.Node</type>
<parameter>&amp;node</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>attribute</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>max</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Document-&gt;_getElementsByTagName">
<sdesc>Helper method</sdesc>
<desc></desc>
<type>xml.Node[]</type>
<methodparam>
<type>&amp;xml.Node</type>
<parameter>&amp;node</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>tagname</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>max</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DocumentationState-&gt;process">
<sdesc>Process this state.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DomXSLProcessor-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DomXSLProcessor</type>
</methodsynopsis>
<methodsynopsis function="DomXSLProcessor-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="DomXSLProcessor-&gt;output">
<sdesc>Retrieve the transformation's result</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="DomXSLProcessor-&gt;run">
<sdesc>Run the XSL transformation</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="DomXSLProcessor-&gt;setBase">
<sdesc>Set base directory</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>dir</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DomXSLProcessor-&gt;setParam">
<sdesc>Set XSL transformation parameter</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>val</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DomXSLProcessor-&gt;setParams">
<sdesc>Set XSL transformation parameters</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>array</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DomXSLProcessor-&gt;setSchemeHandler">
<sdesc>Set a scheme handler</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>defines</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DomXSLProcessor-&gt;setXMLBuf">
<sdesc>Set XML buffer</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>xml</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DomXSLProcessor-&gt;setXMLFile">
<sdesc>Set XML file</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DomXSLProcessor-&gt;setXSLBuf">
<sdesc>Set XSL buffer</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>xsl</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DomXSLProcessor-&gt;setXSLFile">
<sdesc>Set XSL file</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DriverManager-&gt;getConnection">
<sdesc>Get a connection by a DSN string</sdesc>
<desc></desc>
<type>&amp;rdbms.DBConnection</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DriverManager-&gt;getInstance">
<sdesc>Gets an instance</sdesc>
<desc></desc>
<type>&amp;rdbms.DriverManager</type>
</methodsynopsis>
<methodsynopsis function="DriverManager-&gt;register">
<sdesc>Register a driver</sdesc>
<desc>Usage:  1        ::('mydb', ::('my.db.Connection'));2        // [...]3        $conn= &amp;::('mydb://...');</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>&amp;lang.XPClass</type>
<parameter>&amp;class</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DSN-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>DSN</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DSN-&gt;getDatabase">
<sdesc>Retrieve database</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DSN-&gt;getDriver">
<sdesc>Retrieve driver</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DSN-&gt;getFlags">
<sdesc>Retrieve flags</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="DSN-&gt;getHost">
<sdesc>Retrieve host</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DSN-&gt;getPassword">
<sdesc>Retrieve password</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DSN-&gt;getPort">
<sdesc>Retrieve port</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DSN-&gt;getProperty">
<sdesc>Get a property by its name</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DSN-&gt;getUser">
<sdesc>Retrieve user</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="DSN-&gt;getValue">
<sdesc>Retrieve value of a given parameter</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="EmbeddedFile-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>EmbeddedFile</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="EmbeddedFile-&gt;__call">
<sdesc>Proxy method to call methods</sdesc>
<desc></desc>
<type>boolean</type>
<methodparam>
<type>string</type>
<parameter>method</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>params</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;return</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="EmbeddedFile-&gt;__get">
<sdesc>Proxy method to get values</sdesc>
<desc></desc>
<type>boolean</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="EmbeddedFile-&gt;__set">
<sdesc>Proxy method to set values</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ErrorDocument-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>ErrorDocument</type>
<methodparam>
<type>int</type>
<parameter>statusCode</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>language</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ErrorDocument-&gt;getContent">
<sdesc>Retrieve contents of errordocument</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Excel-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Excel</type>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;flashUsed">
<sdesc>Retrieve whether the flash was used.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;fromFile">
<sdesc>Read from a file</sdesc>
<desc></desc>
<type>&amp;img.util.ExifData</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;getDateTime">
<sdesc>Get DateTime</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;getFileName">
<sdesc>Get FileName</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;getFileSize">
<sdesc>Get FileSize</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;getFlash">
<sdesc>Get Flash</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;getHeight">
<sdesc>Get Height</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;getMake">
<sdesc>Get Make</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;getMimeType">
<sdesc>Get MimeType</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;getModel">
<sdesc>Get Model</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;getOrientation">
<sdesc>Get Orientation</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;getOrientationString">
<sdesc>(Insert method's description here)</sdesc>
<desc>The orientation of the camera relative to the scene, when the  image was captured. The relation of the '0th row' and '0th column'  to visual position is shown as below:+---------------------------------+-----------------+
   | value | 0th row    | 0th column | human readable  |
   +---------------------------------+-----------------+
   | 1     | top        | left side  | normal          |
   | 2     | top        | right side | flip horizontal |
   | 3     | bottom     | right side | rotate 180°     |
   | 4     | bottom     | left side  | flip vertical   |
   | 5     | left side  | top        | transpose       |
   | 6     | right side | top        | rotate 90°      |
   | 7     | right side | bottom     | transverse      |
   | 8     | left side  | bottom     | rotate 270°     |
   +---------------------------------+-----------------+</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;getRotationDegree">
<sdesc>Get degree of rotation (one of 0, 90, 180 or 270)</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;getWidth">
<sdesc>Get Width</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;isHorizontal">
<sdesc>Returns whether picture is horizontal</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;isVertical">
<sdesc>Returns whether picture is vertical</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;setDateTime">
<sdesc>Set DateTime</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;dateTime</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;setFileName">
<sdesc>Set FileName</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>fileName</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;setFileSize">
<sdesc>Set FileSize</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>fileSize</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;setFlash">
<sdesc>Set Flash</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>flash</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;setHeight">
<sdesc>Set Height</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>height</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;setMake">
<sdesc>Set Make</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>make</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;setMimeType">
<sdesc>Set MimeType</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>mimeType</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;setModel">
<sdesc>Set Model</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>model</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;setOrientation">
<sdesc>Set Orientation</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>orientation</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;setWidth">
<sdesc>Set Width</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>width</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ExifData-&gt;toString">
<sdesc>Retrieve a string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>File</type>
<methodparam>
<type>mixed</type>
<parameter>file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="File-&gt;close">
<sdesc>Close this file</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;copy">
<sdesc>Copy this file</sdesc>
<desc>Warning: Open files cannot be copied. Use the close() method to  close the file first</desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="File-&gt;createdAt">
<sdesc>Retrieve when the file was created</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;eof">
<sdesc>Returns whether the file pointer is at the end of the file</sdesc>
<desc>Hint:  Use isOpen() to check if the file is open</desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;exists">
<sdesc>Returns whether this file eixtss</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;getExtension">
<sdesc>Get Extension</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;getFileName">
<sdesc>Returns the filename of the file</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;getPath">
<sdesc>Get Path</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;gets">
<sdesc>Read a line</sdesc>
<desc>This function is identical to readLine except that trailing CR and LF characters  will be included in its return value</desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>bytes</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="File-&gt;getURI">
<sdesc>Returns the URI of the file</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;isOpen">
<sdesc>Returns whether this file is open</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;lastAccessed">
<sdesc>Retrieve last access time</sdesc>
<desc>Note:  The atime of a file is supposed to change whenever the data blocks of a file  are being read. This can be costly performancewise when an application  regularly accesses a very large number of files or directories. Some Unix  filesystems can be mounted with atime updates disabled to increase the  performance of such applications; USENET news spools are a common example.  On such filesystems this function will be useless.</desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;lastModified">
<sdesc>Retrieve last modification time</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;lockExclusive">
<sdesc>Acquire an exclusive lock (writer)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>block</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="File-&gt;lockShared">
<sdesc>Acquire a shared lock (reader)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>block</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="File-&gt;move">
<sdesc>Move this file</sdesc>
<desc>Warning: Open files cannot be moved. Use the close() method to  close the file first</desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="File-&gt;open">
<sdesc>Open the file</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>mode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="File-&gt;read">
<sdesc>Read (binary-safe)</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>bytes</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="File-&gt;readChar">
<sdesc>Read one char</sdesc>
<desc></desc>
<type>char</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;readLine">
<sdesc>Read one line and chop off trailing CR and LF characters</sdesc>
<desc>Returns a string of up to length - 1 bytes read from the file.  Reading ends when length - 1 bytes have been read, on a newline (which is  included in the return value), or on EOF (whichever comes first).</desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>bytes</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="File-&gt;rewind">
<sdesc>Sets the file position indicator for fp to the beginning of the  file stream.</sdesc>
<desc>This function is identical to a call of $f-&gt;seek(0, SEEK_SET)</desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;seek">
<sdesc>Move file pointer to a new position</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>position</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>mode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="File-&gt;size">
<sdesc>Retrieve the file's size in bytes</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;tell">
<sdesc>Retrieve file pointer position</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;touch">
<sdesc>Set last modification time</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>time</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="File-&gt;truncate">
<sdesc>Truncate the file to the specified length</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>size</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="File-&gt;unlink">
<sdesc>Delete this file</sdesc>
<desc>Warning: Open files cannot be deleted. Use the close() method to  close the file first</desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;unLock">
<sdesc>Release a lock (shared or exclusive)</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="File-&gt;write">
<sdesc>Write</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="File-&gt;writeLine">
<sdesc>Write a line and append a LF (\n) character</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileAppender-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>FileAppender</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileAppender-&gt;append">
<sdesc>Appends log data to the file</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileComment-&gt;setCVSVersion">
<sdesc>Sets CVS version</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>ver</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileComment-&gt;_handleTag">
<sdesc>Handles tags</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>string</type>
<parameter>tag</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>line</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileData-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>FileData</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileData-&gt;getFile">
<sdesc>Get File</sdesc>
<desc></desc>
<type>&amp;io.File</type>
</methodsynopsis>
<methodsynopsis function="FileData-&gt;getName">
<sdesc>Get Name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FileData-&gt;getSize">
<sdesc>Get Size</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="FileData-&gt;getType">
<sdesc>Get Type</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FileData-&gt;setFile">
<sdesc>Set File</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileData-&gt;setName">
<sdesc>Set Name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileData-&gt;setSize">
<sdesc>Set Size</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>size</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileData-&gt;setType">
<sdesc>Set Type</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>FileDialog</type>
<methodparam>
<type>string</type>
<parameter>dir</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>filter</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;getDirectory">
<sdesc>Get Dir</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;getFilename">
<sdesc>Get Filename</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;getFilter">
<sdesc>Get Filter</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;init">
<sdesc>Initialize application</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;onClose">
<sdesc>Callback for OK and cancel buttons</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;php.GtkWidget</type>
<parameter>&amp;widget</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;onEntrySelected">
<sdesc>Callback for when a row in the file list is selected</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;php.GtkWidget</type>
<parameter>&amp;widget</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>row</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>data</parameter>
</methodparam>
<methodparam>
<type>php.GtkEvent</type>
<parameter>event</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;onFavoriteClicked">
<sdesc>Callback for favorites buttons</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;php.GtkWidget</type>
<parameter>&amp;widget</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;onHomeClicked">
<sdesc>Callback for home button</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;php.GtkWidget</type>
<parameter>&amp;widget</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;onPNClicked">
<sdesc>Callback for history buttons</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;php.GtkWidget</type>
<parameter>&amp;widget</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;onRefreshClicked">
<sdesc>Callback for refresh button</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;php.GtkWidget</type>
<parameter>&amp;widget</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;onUpDirClicked">
<sdesc>Callback for up button</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;php.GtkWidget</type>
<parameter>&amp;widget</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;readFiles">
<sdesc>Read the selected directory's content</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;run">
<sdesc>Run this dialog</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;setDirectory">
<sdesc>Set directory to show</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>dir</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>update_offset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;setFilename">
<sdesc>Set Filename</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;setFilter">
<sdesc>Set Filter</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>filter</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileDialog-&gt;show">
<sdesc>Show this dialog</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="FilesystemImageLoader-&gt;load">
<sdesc>Load an image</sdesc>
<desc></desc>
<type>string[2]</type>
<methodparam>
<type>&amp;peer.URL</type>
<parameter>&amp;source</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FilesystemStorage-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>FilesystemStorage</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorage-&gt;create">
<sdesc>Creates a new StorageEntry and return it</sdesc>
<desc></desc>
<type>&amp;peer.ftp.server.storage.StorageEntry</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FilesystemStorage-&gt;getBase">
<sdesc>Retrieves base</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorage-&gt;lookup">
<sdesc>Looks up a element. Returns a StorageCollection, a StorageElement  or NULL in case it nothing is found.</sdesc>
<desc></desc>
<type>&amp;peer.ftp.server.storage.StorageEntry</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FilesystemStorage-&gt;realname">
<sdesc>Helper method</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FilesystemStorage-&gt;setBase">
<sdesc>Sets base</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageCollection-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>FilesystemStorageCollection</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageCollection-&gt;delete">
<sdesc>Deletes an entry</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageCollection-&gt;elements">
<sdesc>Retrieves a list of elements</sdesc>
<desc></desc>
<type>&amp;peer.ftp.server.storage.StorageEntry[]</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageCollection-&gt;getGroup">
<sdesc>Retrieves the owner's group name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageCollection-&gt;getModifiedStamp">
<sdesc>Retrieves the modified timestamp of this storage entry</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageCollection-&gt;getName">
<sdesc>Retrieves the (short) name of a storage entry</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageCollection-&gt;getOwner">
<sdesc>Retrieves the owner's username</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageCollection-&gt;getPermissions">
<sdesc>Retrieves the permissions of this storage entry expressed in a  unix-permission style integer</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageCollection-&gt;getSize">
<sdesc>Retrieves the size of this storage entry</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageCollection-&gt;numLinks">
<sdesc>Retrieves the number of links</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageCollection-&gt;rename">
<sdesc>Renames an entry</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageCollection-&gt;setPermissions">
<sdesc>Sets the permissions of this storage entry expressed in a  unix-permission style integer</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>permissions</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageElement-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>FilesystemStorageElement</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageElement-&gt;close">
<sdesc>Close this element</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageElement-&gt;delete">
<sdesc>Deletes an entry</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageElement-&gt;getGroup">
<sdesc>Retrieves the owner's group name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageElement-&gt;getModifiedStamp">
<sdesc>Retrieves the modified timestamp of this storage entry</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageElement-&gt;getName">
<sdesc>Retrieves the (short) name of a storage entry</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageElement-&gt;getOwner">
<sdesc>Retrieves the owner's username</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageElement-&gt;getPermissions">
<sdesc>Retrieves the permissions of this storage entry expressed in a  unix-permission style integer</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageElement-&gt;getSize">
<sdesc>Retrieves the size of this storage entry</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageElement-&gt;numLinks">
<sdesc>Retrieves the number of links</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageElement-&gt;open">
<sdesc>Open this element with a specified mode</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>mode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageElement-&gt;read">
<sdesc>Read a chunk of data from this element</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageElement-&gt;rename">
<sdesc>Renames an entry</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageElement-&gt;setPermissions">
<sdesc>Sets the permissions of this storage entry expressed in a  unix-permission style integer</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>permissions</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FilesystemStorageElement-&gt;write">
<sdesc>Write a chunk of data to this element</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>buf</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileUploadPrechecker-&gt;check">
<sdesc>Check a given value</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileUtil-&gt;getContents">
<sdesc>Retrieve file contents as a string</sdesc>
<desc>1        $str= ::(new ('/etc/passwd'));</desc>
<type>string</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FileUtil-&gt;setContents">
<sdesc>Set file contents</sdesc>
<desc>1        $bytes_written= ::(new ('myfile'), 'Hello world');</desc>
<type>int</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FindBusinessesCommand-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>FindBusinessesCommand</type>
<methodparam>
<type>string[]</type>
<parameter>names</parameter>
</methodparam>
<methodparam>
<type>string[]</type>
<parameter>findQualifiers</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>maxRows</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FindBusinessesCommand-&gt;marshalTo">
<sdesc>Marshal command to a specified node</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;xml.Node</type>
<parameter>&amp;node</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FindBusinessesCommand-&gt;unmarshalFrom">
<sdesc>Unmarshal return value from a specified node</sdesc>
<desc></desc>
<type>&amp;xml.uddi.BusinessList</type>
<methodparam>
<type>&amp;xml.Node</type>
<parameter>&amp;node</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FlatfileStorage-&gt;contains">
<sdesc>Returns whether this storage contains the given key</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FlatfileStorage-&gt;free">
<sdesc>Remove all keys</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="FlatfileStorage-&gt;get">
<sdesc>Get a key by it's name</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FlatfileStorage-&gt;initialize">
<sdesc>Initialize this storage</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FlatfileStorage-&gt;keys">
<sdesc>Get all keys</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="FlatfileStorage-&gt;put">
<sdesc>Insert/update a key</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>permissions</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FlatfileStorage-&gt;remove">
<sdesc>Remove a key</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Folder-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Folder</type>
<methodparam>
<type>string</type>
<parameter>dirname</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Folder-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Folder-&gt;close">
<sdesc>Close directory</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Folder-&gt;create">
<sdesc>Create this directory, recursively, if needed.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>permissions</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Folder-&gt;exists">
<sdesc>Returns whether this directory exists</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Folder-&gt;getEntry">
<sdesc>Read through the contents of the directory, ommitting the entries &quot;.&quot; and &quot;..&quot;</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Folder-&gt;getURI">
<sdesc>Get URI</sdesc>
<desc></desc>
<type>uri</type>
</methodsynopsis>
<methodsynopsis function="Folder-&gt;move">
<sdesc>Move this directory</sdesc>
<desc>Warning: Open directories cannot be moved. Use the close() method to  close the directory first</desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Folder-&gt;rewind">
<sdesc>Rewinds the directory to the beginning.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Folder-&gt;unlink">
<sdesc>Delete this folder and all its subentries recursively  Warning: Stops at the first element that can't be deleted!</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="ForkingRMIServer-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>ForkingRMIServer</type>
<methodparam>
<type>string</type>
<parameter>host</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ForkingRMIServer-&gt;setTrace">
<sdesc>Set a logcategory for tracing</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ForkingServer-&gt;service">
<sdesc>Service</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>FPDF</type>
<methodparam>
<type>string</type>
<parameter>orientation</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>unit</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>format</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;addFont">
<sdesc>Add a font to this PDF</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;org.pdf.FPDFFont</type>
<parameter>&amp;font</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;addHook">
<sdesc>Add a hook</sdesc>
<desc></desc>
<type>&amp;org.fpdf.FPDFHook</type>
<methodparam>
<type>string</type>
<parameter>event</parameter>
</methodparam>
<methodparam>
<type>&amp;org.fpdf.FPDFHook</type>
<parameter>&amp;hook</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;addLink">
<sdesc>Creates a new internal link and returns its identifier. An internal  link is a clickable area which directs to another place within the  document.</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;addPage">
<sdesc>Start a new page with an optional orientation, which, if  omitted, defaults to orientation given to constructor</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>orientation</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;close">
<sdesc>Terminates the PDF document. It is not necessary to call this  method explicitly because getBuffer() does it automatically.</sdesc>
<desc>If the document contains no page, addPage() is called to prevent  from getting an invalid document.</desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;drawLine">
<sdesc>Draw a line</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>x1</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>y1</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>x2</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>y2</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;drawRect">
<sdesc>Draw a rectangle</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>x</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>y</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>w</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>h</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>style</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;getAcceptPageBreak">
<sdesc>Accept automatic page break or not</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;getBuffer">
<sdesc>Retrieve current buffer. The method first calls close() if  necessary to terminate the document.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;getFont">
<sdesc>Get font</sdesc>
<desc></desc>
<type>org.pdf.FPDFFont</type>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;getFontByName">
<sdesc>Retrieve a font by name and optionally style. Returns NULL if font  wasn't found</sdesc>
<desc></desc>
<type>&amp;org.pdf.FPDFFont</type>
<methodparam>
<type>string</type>
<parameter>family</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>style</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;getPageDimensions">
<sdesc>Retrieve page dimensions for a specified format</sdesc>
<desc></desc>
<type>float[2]</type>
<methodparam>
<type>string</type>
<parameter>format</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;getScaleFactor">
<sdesc>Retrieve scale factor for a specified unit</sdesc>
<desc></desc>
<type>float</type>
<methodparam>
<type>string</type>
<parameter>unit</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;getStringWidth">
<sdesc>Get width of a string in the current font</sdesc>
<desc></desc>
<type>float</type>
<methodparam>
<type>string</type>
<parameter>s</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;getX">
<sdesc>Get x position</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;getY">
<sdesc>Get y position</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;lineFeed">
<sdesc>Line feed; default value is last cell height</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>h</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;loadFonts">
<sdesc>Load fonts</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Properties</type>
<parameter>&amp;prop</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;open">
<sdesc>This method begins the generation of the PDF document. It is not  necessary to call it explicitly because AddPage() does it  automatically.</sdesc>
<desc>Note: no page is created by this method.</desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;pageNumber">
<sdesc>Get current page number</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;putImage">
<sdesc>Put an image on the page</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>file</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>x</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>y</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>w</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>h</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>link</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;putLink">
<sdesc>Puts a link on a rectangular area of the page. Text or image  links are generally put via cell(), write() or image(), but  this method can be useful for instance to define a clickable  area inside an image.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>x</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>y</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>w</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>h</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>link</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;putText">
<sdesc>Prints a character string. The origin is on the left of the first</sdesc>
<desc>charcter, on the baseline. This method allows to place a string  precisely on the page, but it is usually easier to use cell(),  MultiCell() or Write() which are the standard methods to print  text.</desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>x</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>y</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>text</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setAuthor">
<sdesc>Sets author of document</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>author</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setAutoPageBreak">
<sdesc>Set auto page break mode and triggering margin</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>auto</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>margin</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setCompression">
<sdesc>Turns page compression on or off. Throws an exception in case  compression was requested (set to TRUE) but not available.</sdesc>
<desc>Compression is possible if PHP is compiled with zlib and the  function gzcompress() is available.</desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>compress</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setCreator">
<sdesc>Defines the creator of the document. This is typically the name  of the application that generates the PDF.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>creator</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setDisplayMode">
<sdesc>Set display mode in viewer</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>zoom</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>layout</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setDrawColor">
<sdesc>Set color for all stroking operations</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>r</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>g</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>b</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setFillColor">
<sdesc>Set color for all filling operations</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>r</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>g</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>b</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setFont">
<sdesc>Set font</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;org.pdf.FPDFFont</type>
<parameter>&amp;font</parameter>
</methodparam>
<methodparam>
<type>float</type>
<parameter>size</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setFontSize">
<sdesc>Set font size in points</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>size</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setKeywords">
<sdesc>Associates keywords with the document, generally in the following form:</sdesc>
<desc>'keyword1 keyword2 ...'</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>keywords</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setLeftMargin">
<sdesc>Set left margin</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>float</type>
<parameter>margin</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setLineWidth">
<sdesc>Set line width</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>width</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setLink">
<sdesc>Set destination of internal link</sdesc>
<desc>Example: Set link to the top of page #1  1        $pdf-&gt;($pdf-&gt;(), 0, 1);</desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>link</parameter>
</methodparam>
<methodparam>
<type>float</type>
<parameter>y</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>page</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setMargins">
<sdesc>Set left, top and right margins</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>float</type>
<parameter>left</parameter>
</methodparam>
<methodparam>
<type>float</type>
<parameter>top</parameter>
</methodparam>
<methodparam>
<type>float</type>
<parameter>right</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setOrientation">
<sdesc>Set orientation</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>orientation</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setPageFormat">
<sdesc>Set page format</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>format</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setRightMargin">
<sdesc>Set right margin</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>float</type>
<parameter>margin</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setSubject">
<sdesc>Sets subject of document</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>subject</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setTextColor">
<sdesc>Set color for text</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>r</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>g</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>b</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setTitle">
<sdesc>Sets title of document</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>title</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setTopMargin">
<sdesc>Set top margin</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>float</type>
<parameter>margin</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setX">
<sdesc>Set x position. Negative values calculate the x position relative  to the width.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>x</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setXY">
<sdesc>Set x and y positions</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>x</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>y</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;setY">
<sdesc>Set y position and reset x. Negative values calculate the y  position relative to the height.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>y</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;writeCell">
<sdesc>Prints a cell (rectangular area) with optional borders, background</sdesc>
<desc>color and character string. The upper-left corner of the cell  corresponds to the current position. The text can be aligned or  centered. After the call, the current position moves to the right  or to the next line. It is possible to put a link on the text.If automatic page breaking is enabled and the cell goes beyond the  limit, a page break is done before outputting.The parameter ln indicates where the current position should go  after the call.</desc>
<type>void</type>
<methodparam>
<type>float</type>
<parameter>w</parameter>
</methodparam>
<methodparam>
<type>float</type>
<parameter>h</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>text</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>border</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>ln</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>align</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>fill</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>link</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;writeCells">
<sdesc>This method allows printing text with line breaks. They can be  automatic (as soon as the text reaches the right border of the  cell) or explicit (via the \n character). As many cells as  necessary are output, one below the other.</sdesc>
<desc>Text can be aligned, centered or justified. The cell block can be  framed and the background painted.</desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>w</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>h</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>txt</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>border</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>align</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>fill</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;writeText">
<sdesc>Output text in flowing mode</sdesc>
<desc>This method prints text from the current position. When the right  margin is reached (or the \n character is met) a line break  occurs and text continues from the left margin. Upon method  exit, the current position is left just at the end of the text.It is possible to put a link on the text.</desc>
<type>void</type>
<methodparam>
<type>float</type>
<parameter>h</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>text</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>link</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;_begindoc">
<sdesc>Start document</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="FPDF-&gt;_enddoc">
<sdesc>Terminate document</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="FPDFFont-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>FPDFFont</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDFFont-&gt;configure">
<sdesc>Load this font's properties from a .ini-file</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Properties</type>
<parameter>&amp;p</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDFFont-&gt;getCharWidth">
<sdesc>Return the width of a specified character</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>char</type>
<parameter>c</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDFFont-&gt;isBold">
<sdesc>Check whether this font is bold</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="FPDFFont-&gt;isItalic">
<sdesc>Check whether this font is italic</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="FPDFFont-&gt;isUnderline">
<sdesc>Check whether this font is underlined</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="FPDFHook-&gt;onEndPage">
<sdesc>Gets called when a page is finalized</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;org.fpdf.FPDF</type>
<parameter>&amp;pdf</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>page</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FPDFHookImpl-&gt;onEndPage">
<sdesc>Gets called when a page is finalized</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;org.fpdf.FPDF</type>
<parameter>&amp;pdf</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>page</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Ftok-&gt;get">
<sdesc>Convert a pathname and a project identifier to a System V IPC key</sdesc>
<desc>Sample:  1        $key= ::();2        $anotherKey= ::(2);3        $yetAnotherKey= ::(1, $_SERVER['PHP_SELF']);</desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>id</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>path</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnection-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc>Values for the parameter DSN:   - ftp://user:pass@ftp.server/?timeout=3
 - ftp://localhost
 - ftp://anonymous:devnull@ftp.server:2121
 - ftps://user@localhostNote: SSL connect is only available if OpenSSL support is enabled  into your version of PHP.Parameters and defaults:  host: localhostport: 21timeout: 4 (seconds)</desc>
<type>FtpConnection</type>
<methodparam>
<type>string</type>
<parameter>dsn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnection-&gt;close">
<sdesc>Disconnect</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="FtpConnection-&gt;connect">
<sdesc>Connect (and log in, if necessary)</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="FtpConnection-&gt;delete">
<sdesc>Deletes a file.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>remote</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnection-&gt;get">
<sdesc>Download a file</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>remote</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;arg</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>mode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnection-&gt;getDir">
<sdesc>Get a directory object</sdesc>
<desc></desc>
<type>&amp;peer.ftp.FtpDir</type>
<methodparam>
<type>string</type>
<parameter>dir</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnection-&gt;makeDir">
<sdesc>Create a directory</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.ftp.FtpDir</type>
<parameter>&amp;f</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnection-&gt;put">
<sdesc>Upload a file</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;arg</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>remote</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>mode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnection-&gt;rename">
<sdesc>Renames a file in this directory.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>src</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnection-&gt;setDir">
<sdesc>Set working directory</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.ftp.FtpDir</type>
<parameter>&amp;f</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnection-&gt;setPassive">
<sdesc>Enables or disables the passive ftp mode. Call this after the inital  login.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>bool</type>
<parameter>enable</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>FtpConnectionListener</type>
<methodparam>
<type>&amp;peer.ftp.server.Storage</type>
<parameter>&amp;storage</parameter>
</methodparam>
<methodparam>
<type>&amp;peer.ftp.server.Authenticator</type>
<parameter>&amp;authenticator</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;answer">
<sdesc>Write an answer message to the socket</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>&amp;peer.Socket</type>
<parameter>&amp;sock</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>code</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>text</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>lines</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;connected">
<sdesc>Method to be triggered when a client connects</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;data">
<sdesc>Method to be triggered when a client has sent data</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;disconnected">
<sdesc>Method to be triggered when a client disconnects</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;eol">
<sdesc>Returns end of line identifier depending on the type</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onCwd">
<sdesc>CWD: This command allows the user to work with a different  directory or dataset without altering his login or account  information.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onFeat">
<sdesc>FEAT: This command causes the FTP server to list all new FTP  features that the server supports beyond those described in  RFC 959.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onHelp">
<sdesc>HELP: This command causes the server to send a list of supported  commands and other helpful information.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onList">
<sdesc>LIST: This command causes a list of file names and file details  to be sent from the FTP site to the client.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onMdtm">
<sdesc>MDTM: This command can be used to determine when a file in the  server was last modified.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onMkd">
<sdesc>MKD:  This command causes the directory specified in pathname to  be created as a directory (if pathname is absolute) or as a  subdirectory of the current working directory (if pathname is  relative).</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onNlst">
<sdesc>NLST: This command causes a list of file names (with no other  information) to be sent from the FTP site to the client.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onNoop">
<sdesc>NOOP:  This command does not affect any parameters or previously  entered commands. It specifies no action other than that the  server send an OK reply.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onOpts">
<sdesc>Callback for the &quot;OPTS&quot; command</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onPass">
<sdesc>Callback for the &quot;PASS&quot; command</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onPasv">
<sdesc>Callback for the &quot;PASV&quot; command</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onPort">
<sdesc>Callback for the &quot;PORT&quot; command</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onPwd">
<sdesc>Callback for the &quot;PWD&quot; command</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onQuit">
<sdesc>Callback for the &quot;QUIT&quot; command</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onRein">
<sdesc>REIN: This command terminates a USER, flushing all I/O and  account information, except to allow any transfer in progress  to be completed. A USER command may be expected to follow.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onRetr">
<sdesc>RETR: This command causes the server to transfer a copy of the  file specified in pathname to the client. The status and contents  of the file at the server site are unaffected.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onRmd">
<sdesc>RMD: This command causes the directory specified in pathname to  be removed as a directory (if pathname is absolute) or as a  subdirectory of the current working directory (if pathname is  relative).</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onSite">
<sdesc>SITE: This allows you to enter a command that is specific to the  current FTP site.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onSiteChmod">
<sdesc>SITE CHMOD</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onSiteHelp">
<sdesc>SITE HELP</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onSize">
<sdesc>SIZE:  This command is used to obtain the transfer size of a file  from the server: that is, the exact number of octets (8 bit bytes)  which would be transmitted over the data connection should that  file be transmitted.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onStor">
<sdesc>Callback for the &quot;STOR&quot; command</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onSyst">
<sdesc>Callback for the &quot;SYST&quot; command</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onType">
<sdesc>Callback for the &quot;TYPE&quot; command</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;onUser">
<sdesc>Callback for the &quot;USER&quot; command</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;permissionString">
<sdesc>Create a string representation from integer permissions</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>permissions</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;setTrace">
<sdesc>Set a trace for debugging</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;typeName">
<sdesc>Returns type name depending on the type</sdesc>
<desc>The following codes are assigned:   A = ASCII (text files)
 N = Non-print (files that have no vertical format controls such
     as carriage returns and line feeds)
 T = Telnet format effectors (files that have ASCII or EBCDIC
     vertical format controls)
 E = EBCDIC (files being transferred between systems that use
     EBCDIC for internal character representation)
 C = Carriage Control (ASA) (files that contain ASA [FORTRAN]
     vertical format controls)
 I = Image (binary files)
 L = Local byte size (files that need to be transferred using
     specific non-standard size bytes)The default representation type is ASCII Non-print. This  implementation supports ASCII (A) and BINARY (I)</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FtpConnectionListener-&gt;_rwx">
<sdesc>Helper method</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>bits</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpDir-&gt;getEntry">
<sdesc>Get entries (iterative function)</sdesc>
<desc></desc>
<type>&amp;peer.ftp.FtpEntry</type>
</methodsynopsis>
<methodsynopsis function="FtpEntry-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>FtpEntry</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>resource</type>
<parameter>hdl</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpEntry-&gt;getDate">
<sdesc>Get Date</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="FtpEntry-&gt;getGroup">
<sdesc>Get Group</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FtpEntry-&gt;getName">
<sdesc>Get Name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FtpEntry-&gt;getNumlinks">
<sdesc>Get Numlinks</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="FtpEntry-&gt;getPermissions">
<sdesc>Get Permissions</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="FtpEntry-&gt;getSize">
<sdesc>Get Size</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="FtpEntry-&gt;getUser">
<sdesc>Get User</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="FtpEntry-&gt;setDate">
<sdesc>Set Date</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpEntry-&gt;setGroup">
<sdesc>Set Group</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>group</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpEntry-&gt;setName">
<sdesc>Set Name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpEntry-&gt;setNumlinks">
<sdesc>Set Numlinks</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>numlinks</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpEntry-&gt;setPermissions">
<sdesc>Set Permissions. Takes either a string or an integer as argument.</sdesc>
<desc>In case a string is passed, it should have the following form:rwxr-xr-x  # 755
   rw-r--r--  # 644</desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>perm</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpEntry-&gt;setSize">
<sdesc>Set Size</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>size</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FtpEntry-&gt;setUser">
<sdesc>Set User</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>user</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FunctionComment-&gt;addDefaultParam">
<sdesc>Add a default parameter</sdesc>
<desc></desc>
<type>&amp;stdClass</type>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>default</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>description</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FunctionComment-&gt;addParam">
<sdesc>Add a parameter</sdesc>
<desc></desc>
<type>&amp;stdClass</type>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>description</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FunctionComment-&gt;addReference">
<sdesc>Adds a reference</sdesc>
<desc></desc>
<type>&amp;lang.apidoc.Reference</type>
<methodparam>
<type>string</type>
<parameter>see</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FunctionComment-&gt;addThrows">
<sdesc>Add a throws</sdesc>
<desc></desc>
<type>&amp;stdClass</type>
<methodparam>
<type>string</type>
<parameter>exception</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>condition</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FunctionComment-&gt;getModel">
<sdesc>Get Model</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="FunctionComment-&gt;setAccess">
<sdesc>Set access</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>access</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FunctionComment-&gt;setModel">
<sdesc>Set Model</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>model</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FunctionComment-&gt;setReturn">
<sdesc>Set return value</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>description</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="FunctionComment-&gt;_handleTag">
<sdesc>Handles tags</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="GD2StreamReader-&gt;readFromStream">
<sdesc>Read an image</sdesc>
<desc></desc>
<type>resource</type>
</methodsynopsis>
<methodsynopsis function="GD2StreamWriter-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>GD2StreamWriter</type>
<methodparam>
<type>&amp;io.Stream</type>
<parameter>&amp;stream</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>format</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GD2StreamWriter-&gt;output">
<sdesc>Output an image</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>resource</type>
<parameter>handle</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GDStreamReader-&gt;readFromStream">
<sdesc>Read an image</sdesc>
<desc></desc>
<type>resource</type>
</methodsynopsis>
<methodsynopsis function="GDStreamWriter-&gt;output">
<sdesc>Output an image</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>resource</type>
<parameter>handle</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GenericParser-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>GenericParser</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GenericParser-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="GenericParser-&gt;configure">
<sdesc>Configure</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="GenericParser-&gt;parse">
<sdesc>Parse</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>util.log.LogCategory</type>
<parameter>cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GenericParser-&gt;setFile">
<sdesc>Set file</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GetText-&gt;bind">
<sdesc>Sets path for text domain</sdesc>
<desc></desc>
<type>&amp;org.gnu.GetText</type>
<methodparam>
<type>string</type>
<parameter>domain</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>directory</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GetText-&gt;get">
<sdesc>Get text. The id is returned in case there is no string matching  the given id</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>id</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>lang</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GetText-&gt;setLanguage">
<sdesc>Set language</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>lang</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GifStreamReader-&gt;readFromStream">
<sdesc>Read an image</sdesc>
<desc></desc>
<type>resource</type>
</methodsynopsis>
<methodsynopsis function="GifStreamWriter-&gt;output">
<sdesc>Output an image</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>resource</type>
<parameter>handle</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GlobalWeather-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>GlobalWeather</type>
</methodsynopsis>
<methodsynopsis function="GlobalWeather-&gt;getWeatherReport">
<sdesc>Gets weather report by Airport code</sdesc>
<desc></desc>
<type>object report</type>
<methodparam>
<type>string</type>
<parameter>code</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleDateRange-&gt;dateToJulian">
<sdesc>Converts a Date object to Julian daycount.</sdesc>
<desc>The Julian date is calculated by the number of days since  January 1, 4713 BC.Note: Returns zero (0) on failure.</desc>
<type>int</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleDateRange-&gt;forDates">
<sdesc>Returns a date range for the given start and end dates</sdesc>
<desc></desc>
<type>&amp;com.google.util.GoogleDateRange</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;start</parameter>
</methodparam>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;end</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleDateRange-&gt;getEnd">
<sdesc>Get End</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="GoogleDateRange-&gt;getStart">
<sdesc>Get Start</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="GoogleDateRange-&gt;setEnd">
<sdesc>Set End</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;end</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleDateRange-&gt;setStart">
<sdesc>Set Start</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;start</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleDateRange-&gt;toString">
<sdesc>Creates string representation of this date range</sdesc>
<desc>Example:     daterange:2452122-2452234</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="GoogleSearchClient-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>GoogleSearchClient</type>
<methodparam>
<type>string</type>
<parameter>endpoint</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchClient-&gt;doGetCachedPage">
<sdesc>Invokes the method &quot;doGetCachedPage&quot;</sdesc>
<desc></desc>
<type>xml.soap.types.SOAPBase64Binary</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>url</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchClient-&gt;doGoogleSearch">
<sdesc>Invokes the method &quot;doGoogleSearch&quot;</sdesc>
<desc></desc>
<type>&amp;com.google.soap.search.GoogleSearchResult</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>q</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>start</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>maxResults</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>filter</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>restrict</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>safeSearch</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>lr</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>ie</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>oe</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchClient-&gt;doSpellingSuggestion">
<sdesc>Invokes the method &quot;doSpellingSuggestion&quot;</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>phrase</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;getDirectoryCategories">
<sdesc>Retrieves directoryCategories</sdesc>
<desc></desc>
<type>com.google.soap.search.DirectoryCategory[]</type>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;getDirectoryCategory">
<sdesc>Retrieves directoryCategoriy at a given position. Returns NULL if the  position specified is out of range.</sdesc>
<desc></desc>
<type>&amp;com.google.soap.search.DirectoryCategory</type>
<methodparam>
<type>int</type>
<parameter>pos</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;getDocumentFiltering">
<sdesc>Retrieves documentFiltering</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;getEndIndex">
<sdesc>Retrieves endIndex</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;getEstimatedTotalResultsCount">
<sdesc>Retrieves estimatedTotalResultsCount</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;getEstimateIsExact">
<sdesc>Retrieves estimateIsExact</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;getResultElement">
<sdesc>Retrieves resultElement at a given position. Returns NULL if the  position specified is out of range.</sdesc>
<desc></desc>
<type>&amp;com.google.soap.search.ResultElement</type>
<methodparam>
<type>int</type>
<parameter>pos</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;getResultElements">
<sdesc>Retrieves resultElements</sdesc>
<desc></desc>
<type>com.google.soap.search.ResultElement[]</type>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;getSearchComments">
<sdesc>Retrieves searchComments</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;getSearchQuery">
<sdesc>Retrieves searchQuery</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;getSearchTime">
<sdesc>Retrieves searchTime</sdesc>
<desc></desc>
<type>float</type>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;getSearchTips">
<sdesc>Retrieves searchTips</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;getStartIndex">
<sdesc>Retrieves startIndex</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;hasDirectoryCategories">
<sdesc>Retrieves whether there is at least one directory category</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;hasResultElements">
<sdesc>Retrieves whether there is at least one result element</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;numDirectoryCategories">
<sdesc>Retrieves number of directoryCategories</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;numResultElements">
<sdesc>Retrieves number of resultElements</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;setDirectoryCategories">
<sdesc>Sets directoryCategories</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>com.google.soap.search.DirectoryCategory[]</type>
<parameter>directoryCategories</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;setDocumentFiltering">
<sdesc>Sets documentFiltering</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>documentFiltering</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;setEndIndex">
<sdesc>Sets endIndex</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>endIndex</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;setEstimatedTotalResultsCount">
<sdesc>Sets estimatedTotalResultsCount</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>estimatedTotalResultsCount</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;setEstimateIsExact">
<sdesc>Sets estimateIsExact</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>estimateIsExact</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;setResultElements">
<sdesc>Sets resultElements</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>resultElements</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;setSearchComments">
<sdesc>Sets searchComments</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>searchComments</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;setSearchQuery">
<sdesc>Sets searchQuery</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>searchQuery</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;setSearchTime">
<sdesc>Sets searchTime</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>float</type>
<parameter>searchTime</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;setSearchTips">
<sdesc>Sets searchTips</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>searchTips</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;setStartIndex">
<sdesc>Sets startIndex</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>startIndex</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GoogleSearchResult-&gt;toString">
<sdesc>Create string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Graph-&gt;draw">
<sdesc>Draws an object</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>img.DrawableGraphObject</type>
<parameter>&amp;graphObject</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="sapi·gtk-&gt;output">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="GtkApplication-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>GtkApplication</type>
<methodparam>
<type>&amp;util.ParamString</type>
<parameter>&amp;p</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GtkApplication-&gt;connect">
<sdesc>Connect a widget's signal to a callback. The callback method  name is created by using 'on' +  +   if none is defined.</sdesc>
<desc>By adding 'after:' before the signal's name, you can specify  that the callback is called _after_ the normal and default  handlers. Per default, invokation takes place directly when  the signal is emmitted.Example:  1        function () {2          $this-&gt;($this-&gt;('select'), 'clicked');3          $this-&gt;($this-&gt;('button'), 'clicked', 'onSelectClicked');4          $button= &amp;new GtkButton('Click me:)');5          $button-&gt;set_name('click_me');6          $this-&gt;($button, 'clicked', 'onSelectClicked');7        }8     9        function onSelectClicked(&amp;$widget) {10         $this-&gt;-&gt;info('The widget', $widget-&gt;get_name(), 'was clicked');11       }</desc>
<type>&amp;php.GtkWidget</type>
<methodparam>
<type>&amp;php.GtkWidget</type>
<parameter>&amp;widget</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>signal</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>callback</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GtkApplication-&gt;create">
<sdesc>Creates the main window</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="GtkApplication-&gt;destroy">
<sdesc>Callback for when the application is to be closed.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="GtkApplication-&gt;done">
<sdesc>Is called after the application comes down. Include cleanup  code in here.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="GtkApplication-&gt;init">
<sdesc>Initializes the application</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="GtkApplication-&gt;processEvents">
<sdesc>Process events</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="GtkApplication-&gt;run">
<sdesc>Shows application window and enters main loop.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="GtkApplication-&gt;widget">
<sdesc>Returns a widget</sdesc>
<desc></desc>
<type>&amp;php.GtkWidget</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GtkGladeApplication-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>GtkGladeApplication</type>
<methodparam>
<type>&amp;util.cmd.ParamString</type>
<parameter>&amp;p</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>gladefile</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>mainwin</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GtkGladeApplication-&gt;create">
<sdesc>Creates the main window</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="GtkGladeApplication-&gt;widget">
<sdesc>Returns a widget from the glade file</sdesc>
<desc></desc>
<type>&amp;php.GtkWidget</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GtkGladeDialogWindow-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>GtkGladeDialogWindow</type>
<methodparam>
<type>string</type>
<parameter>gladefile</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>windowname</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GtkGladeDialogWindow-&gt;close">
<sdesc>Close (hide) this window</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="GtkGladeDialogWindow-&gt;create">
<sdesc>Creates the main window</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="GtkGladeDialogWindow-&gt;destroy">
<sdesc>Callback for when the window is about to be destroyed.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="GtkGladeDialogWindow-&gt;setModal">
<sdesc>Changes this dialog's modal state</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>modal</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GtkGladeDialogWindow-&gt;show">
<sdesc>Show this dialog window</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="GtkMenuWidget-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>GtkMenuWidget</type>
</methodsynopsis>
<methodsynopsis function="GtkMenuWidget-&gt;addMenuItem">
<sdesc>Add a new menu entry</sdesc>
<desc></desc>
<type>&amp;GtkMenuItem</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>callback</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GtkMenuWidget-&gt;addSeparator">
<sdesc>Add a menu separator</sdesc>
<desc></desc>
<type>&amp;GtkMenuItem</type>
</methodsynopsis>
<methodsynopsis function="GtkMenuWidget-&gt;show">
<sdesc>Shows the popup menu</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>button</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>time</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GTKPixmapLoader-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>GTKPixmapLoader</type>
<methodparam>
<type>GtkWindow</type>
<parameter>&amp;window</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>baseDir</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GTKPixmapLoader-&gt;load">
<sdesc>Loads one or more pixmaps</sdesc>
<desc></desc>
<type>&amp;array</type>
<methodparam>
<type>mixed</type>
<parameter>names</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GTKPixmapLoader-&gt;setBase">
<sdesc>Sets basedir for pixmaps</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>base</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GTKPixmapLoader-&gt;setTransparentColor">
<sdesc>Sets transparent color</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>GdkColor</type>
<parameter>&amp;color</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GTKPixmapLoader-&gt;setWindowRef">
<sdesc>Sets window reference</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>GtkWindow</type>
<parameter>&amp;window</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GTKWidgetUtil-&gt;connect">
<sdesc>Connect a list of signals for a widget</sdesc>
<desc>Example:     GTKWidgetUtil::connect($w, array(
     'after:button_press_event' =&gt; array(&amp;$this, 'onButtonPressed'),
     ':clicked'                 =&gt; array(&amp;$this, 'onButtonClicked', &amp;$data)
   ));</desc>
<type>void</type>
<methodparam>
<type>&amp;GtkWidget</type>
<parameter>&amp;widget</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>signals</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GTKWidgetUtil-&gt;connectChildren">
<sdesc>Connects a list of signals to a widget's children</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;GtkWidget</type>
<parameter>&amp;widget</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="GTKWidgetUtil-&gt;setChildrenSensitive">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Handler</type>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;addError">
<sdesc>Add an error</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>code</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>field</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>info</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;errorsOccured">
<sdesc>Check whether errors occured</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;finalize">
<sdesc>Finalize this handler</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.Context</type>
<parameter>&amp;context</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;getFormValue">
<sdesc>Retrieve a form value by its name</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;getFormValues">
<sdesc>Return all form values</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;getName">
<sdesc>Get name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;getValue">
<sdesc>Retrieve a value by its name</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;getValues">
<sdesc>Return all values</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;getWrapper">
<sdesc>Get Wrapper</sdesc>
<desc></desc>
<type>&amp;scriptlet.xml.workflow.Wrapper</type>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;handleErrorCondition">
<sdesc>Handle error condition</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.Context</type>
<parameter>&amp;context</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;handleSubmittedData">
<sdesc>Handle submitted data</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.Context</type>
<parameter>&amp;context</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;hasWrapper">
<sdesc>Check whether a wrapper is present</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;identifierFor">
<sdesc>Get identifier. Returns name in this default implementation.</sdesc>
<desc>Overwrite in subclasses.</desc>
<type>string</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.Context</type>
<parameter>&amp;context</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;isActive">
<sdesc>Returns whether this handler is active. Returns TRUE in this  default implementation in case the request has a parameter named  __handler whose value contains this handler's name.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.Context</type>
<parameter>&amp;context</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;needsData">
<sdesc>Retrieve whether this handler needs data</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.Context</type>
<parameter>&amp;context</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;setFormValue">
<sdesc>Set a form value by a specified name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;setup">
<sdesc>Set up this handler. Called when this handler has not yet been  registered to the session</sdesc>
<desc>Return TRUE to indicate success, FALSE to signal failure.</desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.Context</type>
<parameter>&amp;context</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;setValue">
<sdesc>Set a value by a specified name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;setWrapper">
<sdesc>Set Wrapper</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.Wrapper</type>
<parameter>&amp;wrapper</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Handler-&gt;toString">
<sdesc>Creates a string representation of this handler</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HashFormat-&gt;apply">
<sdesc>Apply format to argument</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>fmt</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;argument</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HashFormat-&gt;getInstance">
<sdesc>Get an instance</sdesc>
<desc></desc>
<type>&amp;text.format.HashFormat</type>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Hashmap</type>
<methodparam>
<type>map</type>
<parameter>map</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;__destruct">
<sdesc>Destructor. Frees all elements</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;clear">
<sdesc>Clear the hashmap</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;containsKey">
<sdesc>Check whether the given key exists in this hashmap</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>scalar</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;containsValue">
<sdesc>Check whether the given value exists in this hashmap. With strict  checking off (which is the default), the type won't be checked,  i.e. a value of 0 is also found when searching for FALSE.</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;val</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>strict</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;filter">
<sdesc>Filters elements from this hashmap using a callback  function</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>function</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;flip">
<sdesc>Flip keys and values. Note that the values may only consists</sdesc>
<desc>of scalar values, else the operation will fail (and no key/value  pair in question will *not* be flipped. If a value has several  occurrences, the latest key will be used as its valueExample:     before   after
   ------   -----
   a =&gt; b   b =&gt; b
   b =&gt; b   1 =&gt; c
   c =&gt; 1</desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;get">
<sdesc>Retrieve a value by its key. Returns NULL if there is no such key</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>scalar</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;isEmpty">
<sdesc>Checks whether the hashmap is empty (in other words: contains  no elements)</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;isEqual">
<sdesc>Compares two hashmaps and returns TRUE when equal.</sdesc>
<desc></desc>
<type>boolean</type>
<methodparam>
<type>&amp;util.Hashmap</type>
<parameter>&amp;cmp</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;iterator">
<sdesc>Returns an iterator over the keys of this hashmap</sdesc>
<desc></desc>
<type>&amp;util.HashmapIterator</type>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;keys">
<sdesc>Returns all keys in this hashmap.</sdesc>
<desc></desc>
<type>&amp;scalar[]</type>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;merge">
<sdesc>Merge this hashmap. There are two ways of doing this:</sdesc>
<desc>Non-recursive merge: In case the given map contains identical keys the values from  the given hashmap for these keys will be discarded.2. Recursive merge:  In case the given map contains identical keys the values for  these keys are merged together into an array (recursively)</desc>
<type>void</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;map</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>recursive</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;put">
<sdesc>Put a value into this hashmap</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>scalar</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;putref">
<sdesc>Put a value into this hashmap by reference.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>scalar</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;remove">
<sdesc>Remove a value from the hashmap</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>scalar</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;rsort">
<sdesc>Sort this hashmap in reverse order</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>flags</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;size">
<sdesc>Returns size of the hashmap</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;sort">
<sdesc>Sort this hashmap</sdesc>
<desc>The flags parameter may be used to influence the sorting  behaviour and may be one of the following constans  SORT_REGULAR - compare items normally  SORT_NUMERIC - compare items numerically  SORT_STRING  - compare items as strings</desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>flags</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;swap">
<sdesc>Swaps the values with the specified keys. If one of the  keys does not exist, the function returns FALSE</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>scalar</type>
<parameter>k</parameter>
</methodparam>
<methodparam>
<type>scalar</type>
<parameter>j</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;toString">
<sdesc>Create string representation</sdesc>
<desc>Example:     util.Hashmap@[2]{
     'key'  =&gt; 'value',
     'key2' =&gt; 'value2',
   }</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;usort">
<sdesc>Sort this hashmap using a comparator.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Comparator</type>
<parameter>&amp;comparator</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hashmap-&gt;values">
<sdesc>Returns all values in this hashmap</sdesc>
<desc></desc>
<type>&amp;mixed[]</type>
</methodsynopsis>
<methodsynopsis function="HashmapIterator-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>HashmapIterator</type>
<methodparam>
<type>&amp;array</type>
<parameter>&amp;hash</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HashmapIterator-&gt;hasNext">
<sdesc>Returns true if the iteration has more elements. (In other words,  returns true if next would return an element rather than throwing  an exception.)</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="HashmapIterator-&gt;next">
<sdesc>Returns the next element in the iteration.</sdesc>
<desc></desc>
<type>&amp;mixed</type>
</methodsynopsis>
<methodsynopsis function="Header-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Header</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Header-&gt;fromString">
<sdesc>Create a header from a string</sdesc>
<desc></desc>
<type>&amp;peer.Header</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Header-&gt;getName">
<sdesc>Get header name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Header-&gt;getValue">
<sdesc>Get header value</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Header-&gt;getValueRepresentation">
<sdesc>Get header value representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Header-&gt;toString">
<sdesc>Create string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HMAC_MD5-&gt;fromFile">
<sdesc>Create a new checksum from a file object</sdesc>
<desc></desc>
<type>&amp;security.checksum.HMAC_MD5</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HMAC_MD5-&gt;fromString">
<sdesc>Create a new checksum from a string</sdesc>
<desc></desc>
<type>&amp;security.checksum.HMAC_MD5</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HMAC_MD5-&gt;hash">
<sdesc>Calculate HMAC_MD5 for given string (and key, if specified)</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getByHost_name">
<sdesc>Gets the service status by hostname</sdesc>
<desc></desc>
<type>&amp;Hoststatus[]</type>
<methodparam>
<type>string</type>
<parameter>host_name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getByHost_status">
<sdesc>Gets the service status by hostname</sdesc>
<desc></desc>
<type>&amp;Hoststatus[]</type>
<methodparam>
<type>string</type>
<parameter>host_status</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getByNotUp">
<sdesc>Gets the service status by hostname</sdesc>
<desc></desc>
<type>&amp;Hoststatus[]</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getChecks_enabled">
<sdesc>Retrieves checks_enabled</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getCurrent_notification">
<sdesc>Retrieves current_notification</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getEvent_handler_enabled">
<sdesc>Retrieves event_handler_enabled</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getFailure_prediction_enabled">
<sdesc>Retrieves failure_prediction_enabled</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getFlap_detection_enabled">
<sdesc>Retrieves flap_detection_enabled</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getHost_name">
<sdesc>Retrieves host_name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getHost_status">
<sdesc>Retrieves host_status</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getIs_flapping">
<sdesc>Retrieves is_flapping</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getLast_check">
<sdesc>Retrieves last_check</sdesc>
<desc></desc>
<type>util.Date</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getLast_notification">
<sdesc>Retrieves last_notification</sdesc>
<desc></desc>
<type>util.Date</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getLast_state_change">
<sdesc>Retrieves last_state_change</sdesc>
<desc></desc>
<type>util.Date</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getLast_update">
<sdesc>Retrieves last_update</sdesc>
<desc></desc>
<type>util.Date</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getNotifications_enabled">
<sdesc>Retrieves notifications_enabled</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getPercent_state_change">
<sdesc>Retrieves percent_state_change</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getPlugin_output">
<sdesc>Retrieves plugin_output</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getProblem_acknowledged">
<sdesc>Retrieves problem_acknowledged</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getProcess_performance_data">
<sdesc>Retrieves process_performance_data</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getScheduled_downtime_depth">
<sdesc>Retrieves scheduled_downtime_depth</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getTime_down">
<sdesc>Retrieves time_down</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getTime_unreachable">
<sdesc>Retrieves time_unreachable</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;getTime_up">
<sdesc>Retrieves time_up</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;insert">
<sdesc>Write this object to the database</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setChecks_enabled">
<sdesc>Sets checks_enabled</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>checks_enabled</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setCurrent_notification">
<sdesc>Sets current_notification</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>current_notification</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setEvent_handler_enabled">
<sdesc>Sets event_handler_enabled</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>event_handler_enabled</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setFailure_prediction_enabled">
<sdesc>Sets failure_prediction_enabled</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>failure_prediction_enabled</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setFlap_detection_enabled">
<sdesc>Sets flap_detection_enabled</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>flap_detection_enabled</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setHost_name">
<sdesc>Sets host_name</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>host_name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setHost_status">
<sdesc>Sets host_status</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>host_status</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setIs_flapping">
<sdesc>Sets is_flapping</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>is_flapping</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setLast_check">
<sdesc>Sets last_check</sdesc>
<desc></desc>
<type>util.Date</type>
<methodparam>
<type>util.Date</type>
<parameter>last_check</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setLast_notification">
<sdesc>Sets last_notification</sdesc>
<desc></desc>
<type>util.Date</type>
<methodparam>
<type>util.Date</type>
<parameter>last_notification</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setLast_state_change">
<sdesc>Sets last_state_change</sdesc>
<desc></desc>
<type>util.Date</type>
<methodparam>
<type>util.Date</type>
<parameter>last_state_change</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setLast_update">
<sdesc>Sets last_update</sdesc>
<desc></desc>
<type>util.Date</type>
<methodparam>
<type>util.Date</type>
<parameter>last_update</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setNotifications_enabled">
<sdesc>Sets notifications_enabled</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>notifications_enabled</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setPercent_state_change">
<sdesc>Sets percent_state_change</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>percent_state_change</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setPlugin_output">
<sdesc>Sets plugin_output</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>plugin_output</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setProblem_acknowledged">
<sdesc>Sets problem_acknowledged</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>problem_acknowledged</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setProcess_performance_data">
<sdesc>Sets process_performance_data</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>process_performance_data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setScheduled_downtime_depth">
<sdesc>Sets scheduled_downtime_depth</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>scheduled_downtime_depth</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setTime_down">
<sdesc>Sets time_down</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>time_down</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setTime_unreachable">
<sdesc>Sets time_unreachable</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>time_unreachable</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;setTime_up">
<sdesc>Sets time_up</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>time_up</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Hoststatus-&gt;update">
<sdesc>Update this object in the database</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;fromArray">
<sdesc>Create a HtdigEntry from an array</sdesc>
<desc></desc>
<type>&amp;org.htdig.HtdigResult</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;arr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;getCurrent">
<sdesc>Get Current</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;getDocId">
<sdesc>Get DocId</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;getExcerpt">
<sdesc>Get Excerpt</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;getHopcount">
<sdesc>Get Hopcount</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;getMetadescription">
<sdesc>Get Metadescription</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;getModified">
<sdesc>Get Modified</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;getPercent">
<sdesc>Get Percent</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;getScore">
<sdesc>Get Score</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;getSize">
<sdesc>Get Size</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;getStars">
<sdesc>Get Stars</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;getTitle">
<sdesc>Get Title</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;getUrl">
<sdesc>Get Url</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;setCurrent">
<sdesc>Set Current</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>current</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;setDocId">
<sdesc>Set DocId</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>docId</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;setExcerpt">
<sdesc>Set Excerpt</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>excerpt</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;setHopcount">
<sdesc>Set Hopcount</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>hopcount</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;setMetadescription">
<sdesc>Set Metadescription</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>metadesc</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;setModified">
<sdesc>Set Modified</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;modified</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;setNstars">
<sdesc>Alias for the setStars function.</sdesc>
<desc>(Needed because htdigs result field name is nstars)</desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>stars</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;setPercent">
<sdesc>Set Percent</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>percent</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;setScore">
<sdesc>Set Score</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>score</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;setSize">
<sdesc>Set Size</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>size</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;setStars">
<sdesc>Set Stars</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>stars</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;setTitle">
<sdesc>Set Title</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>title</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;setUrl">
<sdesc>Set Url</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>url</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigEntry-&gt;toString">
<sdesc>Returns the string representation of this object.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HtdigResultset-&gt;addResult">
<sdesc>Adds an entry to the result entries.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>result</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigResultset-&gt;getLogicalWords">
<sdesc>Returns the logical words determined for the  search query.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HtdigResultset-&gt;getMatches">
<sdesc>Returns the number of matches contained in  this resultset.</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="HtdigResultset-&gt;getMetaresult">
<sdesc>Get Metaresult</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
</methodsynopsis>
<methodsynopsis function="HtdigResultset-&gt;getResults">
<sdesc>Get Results</sdesc>
<desc></desc>
<type>mixed[]</type>
</methodsynopsis>
<methodsynopsis function="HtdigResultset-&gt;setCsvdef">
<sdesc>Set Csvdef. This is the mapping of the no. of the retrieved  column to its name, just like a csv-file header.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;array</type>
<parameter>csvdef</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigResultset-&gt;setMetaresult">
<sdesc>Set Metaresult</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;metaresult</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigResultset-&gt;setResults">
<sdesc>Set Results</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed[]</type>
<parameter>results</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigResultset-&gt;toString">
<sdesc>Returns the string representation of this object.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;getAlgorithms">
<sdesc>Get Algorithm</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;getConfig">
<sdesc>Get Config</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;getExcludes">
<sdesc>Get Excludes</sdesc>
<desc></desc>
<type>mixed[]</type>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;getExecutable">
<sdesc>Get Executable</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;getMaxresults">
<sdesc>Get Maxresults</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;getMethod">
<sdesc>Get Method</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;getParam">
<sdesc>Get a single param</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;getParams">
<sdesc>Get Params</sdesc>
<desc></desc>
<type>mixed[]</type>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;getSort">
<sdesc>Get Sort</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;getWords">
<sdesc>Get Words</sdesc>
<desc></desc>
<type>mixed[]</type>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;invoke">
<sdesc>Invoke the search.</sdesc>
<desc></desc>
<type>&amp;org.htdig.HtdigResultset</type>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;setAlgorithms">
<sdesc>Set Algorithm</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>algorithm</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;setConfig">
<sdesc>Set Config</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>config</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;setExcludes">
<sdesc>Set Excludes</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed[]</type>
<parameter>excludes</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;setExecutable">
<sdesc>Set Executable</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>executable</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;setMaxresults">
<sdesc>Set Maxresults</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>maxresults</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;setMethod">
<sdesc>Set Method</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>method</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;setParam">
<sdesc>Set a single param</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;setParams">
<sdesc>Set Params</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed[]</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;setSort">
<sdesc>Set Sort</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>sort</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;setWords">
<sdesc>Set Words</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed[]</type>
<parameter>words</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;_getQuery">
<sdesc>Build query string.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HtdigSearch-&gt;_getWordString">
<sdesc>Build the query string for the search.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HtmlMessage-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>HtmlMessage</type>
</methodsynopsis>
<methodsynopsis function="HtmlMessage-&gt;addImage">
<sdesc>Add an image</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>data</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>contentType</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtmlMessage-&gt;getHeaderString">
<sdesc>Return headers as string</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HtmlMessage-&gt;loadImage">
<sdesc>Loads an image from a given URL</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>&amp;peer.URL</type>
<parameter>&amp;source</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtmlMessage-&gt;prepare">
<sdesc>Prepare HTML part. This goes through all the images, loading them  as necessary and rewriting the image tags contained within the  HTML sourcecode to reference the MIME parts created.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="HtmlMessage-&gt;registerLoader">
<sdesc>Register an image loader for a specified scheme</sdesc>
<desc></desc>
<type>&amp;peer.mail.util.ImageLoader</type>
<methodparam>
<type>string</type>
<parameter>scheme</parameter>
</methodparam>
<methodparam>
<type>&amp;peer.mail.util.ImageLoader</type>
<parameter>&amp;loader</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtpasswdAuthenticator-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>HtpasswdAuthenticator</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HtpasswdAuthenticator-&gt;authenticate">
<sdesc>Authenticate a user</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>user</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>pass</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpConnection-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>HttpConnection</type>
<methodparam>
<type>mixed</type>
<parameter>url</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpConnection-&gt;get">
<sdesc>Perform a GET request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpConnection-&gt;getTimeout">
<sdesc>Get timeout</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="HttpConnection-&gt;head">
<sdesc>Perform a HEAD request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpConnection-&gt;post">
<sdesc>Perform a POST request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpConnection-&gt;put">
<sdesc>Perform a Put request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>string</type>
<parameter>arg</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpConnection-&gt;request">
<sdesc>Perform any request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>string</type>
<parameter>method</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpConnection-&gt;setTimeout">
<sdesc>Set timeout</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>timeout</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpConnection-&gt;_createRequest">
<sdesc>Create the request object</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.URL</type>
<parameter>&amp;url</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpRequest-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>HttpRequest</type>
<methodparam>
<type>&amp;peer.URL</type>
<parameter>&amp;url</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpRequest-&gt;addHeaders">
<sdesc>Add headers</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpRequest-&gt;getRequestString">
<sdesc>Get request string</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HttpRequest-&gt;send">
<sdesc>Send request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
</methodsynopsis>
<methodsynopsis function="HttpRequest-&gt;setHeader">
<sdesc>Set header</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>k</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>v</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpRequest-&gt;setMethod">
<sdesc>Set request method</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>method</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpRequest-&gt;setParameters">
<sdesc>Set request parameters</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>p</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpRequestFactory-&gt;factory">
<sdesc>Factory method</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>&amp;peer.URL</type>
<parameter>&amp;url</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpResponse-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>HttpResponse</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;stream</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpResponse-&gt;getHeader">
<sdesc>Get response header by name  Note: The lookup is performed case-insensitive</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HttpResponse-&gt;getHeaders">
<sdesc>Get response headers as an associative array</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="HttpResponse-&gt;getMessage">
<sdesc>Get HTTP message</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HttpResponse-&gt;getStatusCode">
<sdesc>Get HTTP statuscode</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="HttpResponse-&gt;readData">
<sdesc>Read data</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>size</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>binary</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpResponse-&gt;toString">
<sdesc>Return nice string representation</sdesc>
<desc>Example:     peer.http.HttpResponse (HTTP/1.1 300 Multiple Choices) {
     [Date                ] Sat, 01 Feb 2003 01:27:26 GMT
     [Server              ] Apache/1.3.27 (Unix)
     [Connection          ] close
     [Transfer-Encoding   ] chunked
     [Content-Type        ] text/html; charset=iso-8859-1
   }</desc>
<type>toString</type>
</methodsynopsis>
<methodsynopsis function="HttpResponse-&gt;_readhead">
<sdesc>Read head if necessary</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptlet-&gt;doCreateSession">
<sdesc>Creates a session. This method will only be called if  needsSession() return TRUE and no session  is available or the session is unvalid.</sdesc>
<desc>The member variable sessionURIFormat is used  to sprintf() the new URI:   Ord Fill            Example
 --- --------------- --------------------
   1 scheme          http
   2 host            host.foo.bar
   3 path            /foo/bar/index.html
   4 dirname(path)   /foo/bar/
   5 basename(path)  index.html
   6 query           a=b&amp;b=c
   7 session id      cb7978876218bb7
   8 fraction        #test</desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptlet-&gt;doGet">
<sdesc>Receives an HTTP GET request from the process() method  and handles it.</sdesc>
<desc>When overriding this method, request parameters are read and acted  upon and the response object is used to set headers and add  output. The request objects contains a session object if one was  requested via needsSession(). Return FALSE to indicate no  farther processing is needed - the response object's method  process will not be called.Example:  1        function (&amp;$request, &amp;$response) {2          if (NULL === ($name= $request-&gt;getParam('name'))) {3            // Display a form where name is entered4            // ...5            return;6          }7          $response-&gt;write('Hello '.$name);8        }</desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptlet-&gt;doHead">
<sdesc>Receives an HTTP HEAD request from the process() method  and handles it.</sdesc>
<desc>Remember:  The HEAD method is identical to GET except that the server MUST NOT  return a message-body in the response. The metainformation contained  in the HTTP headers in response to a HEAD request SHOULD be identical  to the information sent in response to a GET request. This method can  be used for obtaining metainformation about the entity implied by the  request without transferring the entity-body itself. This method is  often used for testing hypertext links for validity, accessibility,  and recent modification.</desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptlet-&gt;doPost">
<sdesc>Receives an HTTP POST request from the process() method  and handles it.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptlet-&gt;finalize">
<sdesc>Finalize the scriptlet. This method is called after all response  headers and data has been sent and allows you to handle things such  as cleaning up resources or closing database connections.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptlet-&gt;handleInvalidSession">
<sdesc>Handle the case when we find the given session invalid. By default,  we create a new session and therefore gracefully handle this case.</sdesc>
<desc>This function must return TRUE if the scriptlet is supposed to  continue processing the request.</desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptlet-&gt;handleMethod">
<sdesc>Handles the different HTTP methods. Supports GET, POST and  HEAD - other HTTP methods pose security risks if not handled  properly and are used very uncommly anyway.</sdesc>
<desc>If you want to support these methods, override this method -  make sure you call parent::_handleMethod($request)  so that the request object gets set up correctly before any  of your source is executed</desc>
<type>string</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptlet-&gt;handleSessionInitialization">
<sdesc>Initialize session</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptlet-&gt;handleSessionInitializationError">
<sdesc>Handle the case when session initialization fails. By default, we  just return an error for this, a derived class may choose to  gracefully handle this case.</sdesc>
<desc>This function must return TRUE if the scriptlet is supposed to  continue processing the request.</desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptlet-&gt;init">
<sdesc>Initialize the scriptlet. This method is called before any  method processing is done.</sdesc>
<desc>In this method, you can set up &quot;global&quot; requirements such as a  configuration manager.</desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptlet-&gt;needsSession">
<sdesc>Decide whether a session is needed. Returns FALSE in this  implementation.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptlet-&gt;process">
<sdesc>This method is called to process any request and dispatches  it to on of the do* -methods of the scriptlet. It will also  call the doCreateSession() method if necessary.</sdesc>
<desc></desc>
<type>&amp;scriptlet.HttpScriptletResponse</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptlet-&gt;_request">
<sdesc>Create a request object. Override this method to define  your own request object</sdesc>
<desc></desc>
<type>&amp;scriptlet.HttpScriptletRequest</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptlet-&gt;_response">
<sdesc>Create a response object. Override this method to define  your own response object</sdesc>
<desc></desc>
<type>&amp;scriptlet.HttpScriptletResponse</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptlet-&gt;_session">
<sdesc>Create a session object. Override this method to define  your own session object</sdesc>
<desc></desc>
<type>&amp;scriptlet.HttpSession</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletException-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>HttpScriptletException</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>statusCode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletException-&gt;getResponse">
<sdesc>Retrieve response</sdesc>
<desc></desc>
<type>scriptlet.HttpScriptletResponse</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletException-&gt;toString">
<sdesc>Return formatted output of stacktrace</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletException-&gt;_response">
<sdesc>Create the response object</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>statusCode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;getContentType">
<sdesc>Retrieve request content type</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;getCookie">
<sdesc>Retrieve cookie by it's name</sdesc>
<desc></desc>
<type>&amp;peer.http.Cookie</type>
<methodparam>
<type>mixed</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;getCookies">
<sdesc>Retrieve all cookies</sdesc>
<desc></desc>
<type>peer.http.Cookie[]</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;getData">
<sdesc>Returns request data - for GET requests, this is the equivalent to  the environment variable QUERY_STRING, for POST request it is  the equivalent to the raw post data.</sdesc>
<desc>This is especially useful for the SOAP implementation where the  entire request body resembles the SOAP message (no parameters).</desc>
<type>&amp;string</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;getEnvValue">
<sdesc>Returns environment value or the value of default if the  specified environment value cannot be found</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;getHeader">
<sdesc>Returns a request header by its name or NULL if there is no such header  Typical request headers are: Accept, Accept-Charset, Accept-Encoding,  Accept-Language, Connection, Host, Keep-Alive, Referer, User-Agent</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;getParam">
<sdesc>Returns a request variable by its name or NULL if there is no such  request variable</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;getParams">
<sdesc>Gets all request parameters</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;getQueryString">
<sdesc>Returns the query string from its environment variable  QUERY_STRING, decoding it if necessary.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;getSession">
<sdesc>Retrieves the session or NULL if none exists</sdesc>
<desc></desc>
<type>&amp;scriptlet.HttpSession</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;getSessionId">
<sdesc>Retrieves session id from request parameters</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;getURI">
<sdesc>Retrieves the requests absolute URI as an uri (which consists  of one or more of the following attributes: scheme, host, port,  user, pass, path, query and fragment).</sdesc>
<desc></desc>
<type>uri</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;hasCookie">
<sdesc>Check whether a cookie exists by a specified name</sdesc>
<desc>1        if ($request-&gt;('username')) {2           ($c= &amp;$request-&gt;('username')); {3            $response-&gt;write('Welcome back, '.$c-&gt;getValue());4          }5        }</desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;hasParam">
<sdesc>Returns whether the specified request variable is set</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;hasSession">
<sdesc>Returns whether a session exists</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;initialize">
<sdesc>Initialize this request object. Does nothing in this default  implementation, nevertheless, it is a good idea to call  parent::initialiaze() if you override this method.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;isMultiPart">
<sdesc>Returns whether this request contains multipart data (file uploads)</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;setData">
<sdesc>Sets request data.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;string</type>
<parameter>&amp;data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;setParam">
<sdesc>Sets a request parameter</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;setParams">
<sdesc>Sets request parameters</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;array</type>
<parameter>&amp;params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;setSession">
<sdesc>Sets session</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.HttpSession</type>
<parameter>&amp;s</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletRequest-&gt;setURI">
<sdesc>Sets request's URI</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>uri</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletResponse-&gt;getContent">
<sdesc>Returns content</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletResponse-&gt;headersSent">
<sdesc>Checks whether headers have already been sent  to the client. In that case, one cannot trigger sending  of any header again.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletResponse-&gt;process">
<sdesc>Tells the response to finish up whatever has to be finished up  (prepare for output) - in this base class, it does nothing. Have  a look at the XMLScriptletResponse to see what may be done here.</sdesc>
<desc>Of course, you can also override getContent() and  write your sourcecode there, but then, you won't be able to throw  any exceptions that can be caught by the main program when  calling the scriptlet's process method. So, if you have  critical stuff (such as XML/XSL-Transformations) which might fail,  it is probably a good idea to put them here.This function is *not* called in case any of the do*-functions  return FALSE, indicating output processing is not needed (e.g.,  for relocates).</desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletResponse-&gt;sendBasicAuthenticate">
<sdesc>Sends a WWW-Authenticate header and sets the HTTP status code 401  (unauthorized). Uses Basic Authentication.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>realm</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletResponse-&gt;sendContent">
<sdesc>Sends content to STDOUT (which, on a webserver, is equivalent  to &quot;send data to client&quot;).</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletResponse-&gt;sendHeaders">
<sdesc>Sends headers. The statuscode will be sent prior to any headers  and prefixed by HTTP/ and the version attribute.</sdesc>
<desc>Headers spanning multiple lines will be transformed to confirm</desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="HttpScriptletResponse-&gt;sendRedirect">
<sdesc>Redirects the client to the specified location. Most HTTP clients  (such as all browsers) ignore the body if one is sent, search engines  _may_ not, and of course, your favorite command line tool (such as  telnet, socket, netcat) won't either.</sdesc>
<desc>Therefore, it is generally a good idea to return FALSE from any of  the do* methods in your Scriptlet to indicate no farther processing  is needed and not send a body.</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>location</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletResponse-&gt;setContent">
<sdesc>Sets content</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>content</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletResponse-&gt;setContentLength">
<sdesc>Sets the length of the content body in the response.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>len</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletResponse-&gt;setContentType">
<sdesc>Sets the content type of the response being sent to the client,  if the response has not been committed yet. The given content  type may include a character encoding specification, for example,  text/html; charset=UTF-8.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletResponse-&gt;setCookie">
<sdesc>Set a cookie. May be called multiple times with different cookies  to set more than one cookie.</sdesc>
<desc>Example:  1        $response-&gt;(new ('lastvisit', ('Y-m-d')));</desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.Cookie</type>
<parameter>&amp;cookie</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletResponse-&gt;setHeader">
<sdesc>Adds a response header. If this header is already set, it will  be overwritten. Multiple headers *are* allowed but quite useless  for most applications.</sdesc>
<desc>Example:  1        $response-&gt;('X-Binford', '6100 (more power)');</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletResponse-&gt;setStatus">
<sdesc>Sets status code</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>sc</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpScriptletResponse-&gt;write">
<sdesc>Adds content to this response</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>s</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpSession-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>HttpSession</type>
</methodsynopsis>
<methodsynopsis function="HttpSession-&gt;getCreationTime">
<sdesc>Retrieves the time when this session was created, as Unix-  timestamp</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="HttpSession-&gt;getId">
<sdesc>Returns this session's Id</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="HttpSession-&gt;getValue">
<sdesc>Retrieves a value previously registered with the specified name  or NULL in case this name does not exist</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpSession-&gt;getValueNames">
<sdesc>Return an array of all names registered in this session</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="HttpSession-&gt;hasValue">
<sdesc>Checks whether a value by specified name exists</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpSession-&gt;initialize">
<sdesc>Initializes the session</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpSession-&gt;invalidate">
<sdesc>Invalidates a session and deletes all values</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="HttpSession-&gt;isNew">
<sdesc>Returns if this session is a new session</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="HttpSession-&gt;isValid">
<sdesc>Returns if this session is valid</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="HttpSession-&gt;putValue">
<sdesc>Registers a variable. If another variable is already registered  under the specified name, it is replaced</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>mixed&amp;</type>
<parameter>&amp;value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpSession-&gt;removeValue">
<sdesc>Removes a value from the session. If no value is found for  the specified name, nothing happens</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>name</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpSession-&gt;reset">
<sdesc>Resets the session and deletes all variables</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="HttpsRequest-&gt;send">
<sdesc>Send request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpsResponse</type>
</methodsynopsis>
<methodsynopsis function="HttpsResponse-&gt;readData">
<sdesc>Read data</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>size</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>binary</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpsResponse-&gt;_readhead">
<sdesc>Read head if necessary</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="HttpTest-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>HttpTest</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="HttpTest-&gt;setUp">
<sdesc>Setup function</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="HttpTest-&gt;testGet">
<sdesc>Test get method</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="HttpTest-&gt;testHead">
<sdesc>Test head method</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="HttpTest-&gt;testPost">
<sdesc>Test post method</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="HttpUtil-&gt;get">
<sdesc>Fetch an URL's content. Follows redirects up until the defined  constant REDIRECT_LIMIT times.</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>&amp;peer.http.HttpConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ID3Genre-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>ID3Genre</type>
<methodparam>
<type>int</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ID3Genre-&gt;toString">
<sdesc>Create a string representation - returns 'ID_GENRE_UNKNOWN' when  genre id is unknown</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ID3Tag-&gt;fromString">
<sdesc>Creates an ID3 Tag from a string</sdesc>
<desc></desc>
<type>&amp;util.mp3.ID3Tag</type>
<methodparam>
<type>&amp;string</type>
<parameter>&amp;buf</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ID3Tag-&gt;toString">
<sdesc>Create a string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="IFormat-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>IFormat</type>
<methodparam>
<type>string</type>
<parameter>f</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IFormat-&gt;apply">
<sdesc>Apply format to argument</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>fmt</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;argument</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IFormat-&gt;format">
<sdesc>Formats this message with the given arguments</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IFormat-&gt;getInstance">
<sdesc>Get an instance</sdesc>
<desc></desc>
<type>&amp;text.format.Format</type>
</methodsynopsis>
<methodsynopsis function="Image-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Image</type>
<methodparam>
<type>int</type>
<parameter>1</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>handle</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Image-&gt;allocate">
<sdesc>Allocate a color</sdesc>
<desc></desc>
<type>&amp;img.Color</type>
<methodparam>
<type>&amp;img.Color</type>
<parameter>&amp;color</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;colorAt">
<sdesc>Get color index by x, y</sdesc>
<desc></desc>
<type>&amp;img.Color</type>
<methodparam>
<type>int</type>
<parameter>x</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>y</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;copyFrom">
<sdesc>Copies an area from another image into this image</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;img.Image</type>
<parameter>&amp;img</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>dst_x</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>dst_y</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>src_x</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>src_y</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>src_w</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>src_h</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;correctGamma">
<sdesc>Apply gamma correction to this image</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>float</type>
<parameter>in</parameter>
</methodparam>
<methodparam>
<type>float</type>
<parameter>out</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;create">
<sdesc>Creates a new blank image in memory</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>w</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>h</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;draw">
<sdesc>Draws an object</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>img.DrawableObject</type>
<parameter>&amp;obj</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;fill">
<sdesc>Fills the image with a specified color at the coordinates  defined by x and y</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;col</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>x</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>y</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;getDimensions">
<sdesc>Returns dimensions of image</sdesc>
<desc></desc>
<type>int[2]</type>
</methodsynopsis>
<methodsynopsis function="Image-&gt;getHeight">
<sdesc>Returns height of image</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Image-&gt;getTransparency">
<sdesc>Retrieve the color which is defined as transparent</sdesc>
<desc></desc>
<type>&amp;img.Color</type>
</methodsynopsis>
<methodsynopsis function="Image-&gt;getWidth">
<sdesc>Returns width of image</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Image-&gt;hashCode">
<sdesc>Returns a hashcode for this connection</sdesc>
<desc>Example:     gd #38</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Image-&gt;loadFrom">
<sdesc>Loads an image from a reader</sdesc>
<desc></desc>
<type>&amp;img.Image</type>
<methodparam>
<type>&amp;img.io.ImageReader</type>
<parameter>&amp;reader</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;mergeFrom">
<sdesc>Copies an area from another image into this image  The two images will be merged according to pct which can range from 0 to 100. When pct = 0,  no action is taken, when 100 this function behaves identically to copy()</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;img.Image</type>
<parameter>&amp;img</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>pct</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>dst_x</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>dst_y</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>src_x</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>src_y</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>src_w</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>src_h</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;resampleFrom">
<sdesc>Copies an area from another image into this image, resizing if it necessary</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;img.Image</type>
<parameter>&amp;img</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>dst_x</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>dst_y</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>src_x</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>src_y</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>dst_w</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>dst_h</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>src_w</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>src_h</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;resizeFrom">
<sdesc>Copies an area from another image into this image, resizing if it necessary</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;img.Image</type>
<parameter>&amp;img</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>dst_x</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>dst_y</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>src_x</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>src_y</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>dst_w</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>dst_h</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>src_w</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>src_h</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;saveTo">
<sdesc>Saves an image to a reader</sdesc>
<desc></desc>
<type>&amp;img.Image</type>
<methodparam>
<type>&amp;img.io.ImageReader</type>
<parameter>&amp;writer</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;setBrush">
<sdesc>Sets a brush</sdesc>
<desc></desc>
<type>&amp;img.ImgBrush</type>
<methodparam>
<type>&amp;img.ImgBrush</type>
<parameter>&amp;brush</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;setInterlace">
<sdesc>Sets interlacing on or off.</sdesc>
<desc>If the interlace bit is set and the image is used as a JPEG image, the image  is created as a progressive JPEG.</desc>
<type>bool</type>
<methodparam>
<type>bool</type>
<parameter>on</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;setStyle">
<sdesc>Sets a style</sdesc>
<desc></desc>
<type>&amp;img.ImgStyle</type>
<methodparam>
<type>&amp;img.ImgStyle</type>
<parameter>&amp;style</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;setTransparency">
<sdesc>Define a color as transparent</sdesc>
<desc>The transparent color is a property of the image, transparency is not a  property of the color. Once you have a set a color to be the transparent  color, any regions of the image in that color that were drawn previously  will be transparent.</desc>
<type>void</type>
<methodparam>
<type>&amp;img.Color</type>
<parameter>&amp;col</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Image-&gt;toString">
<sdesc>Retrieve string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ImageInfo-&gt;fromFile">
<sdesc>Retrieve an ImageInfo object from a file</sdesc>
<desc></desc>
<type>&amp;img.util.ImageInfo</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ImageInfo-&gt;getBits">
<sdesc>Get Bits</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="ImageInfo-&gt;getChannels">
<sdesc>Get Channels</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="ImageInfo-&gt;getHeight">
<sdesc>Get Height</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="ImageInfo-&gt;getMime">
<sdesc>Get Mime</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ImageInfo-&gt;getType">
<sdesc>Get Type</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="ImageInfo-&gt;getWidth">
<sdesc>Get Width</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="ImageInfo-&gt;setBits">
<sdesc>Set Bits</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>bits</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ImageInfo-&gt;setChannels">
<sdesc>Set Channels</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>channels</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ImageInfo-&gt;setHeight">
<sdesc>Set Height</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>height</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ImageInfo-&gt;setMime">
<sdesc>Set Mime</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>mime</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ImageInfo-&gt;setType">
<sdesc>Set Type</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ImageInfo-&gt;setWidth">
<sdesc>Set Width</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>width</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ImageInfo-&gt;toString">
<sdesc>Creates a string representation of this object</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ImageLoader-&gt;load">
<sdesc>Load an image</sdesc>
<desc></desc>
<type>string[2]</type>
<methodparam>
<type>&amp;peer.URL</type>
<parameter>&amp;source</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ImageReader-&gt;getResource">
<sdesc>Retrieve an image resource</sdesc>
<desc></desc>
<type>resource</type>
</methodsynopsis>
<methodsynopsis function="ImageWriter-&gt;setResource">
<sdesc>Sets the image resource that is to be written</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>resource</type>
<parameter>handle</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ImapStore-&gt;_supports">
<sdesc>Protected method to check whether this DSN is supported</sdesc>
<desc>Supported notations:   - imap://localhost
 - imap://user:pass@localhost
 - imap://user@localhost:143
 - imaps://localhost:995/?novalidate-cert=1</desc>
<type>bool</type>
<methodparam>
<type>&amp;int</type>
<parameter>2</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>u</parameter>
</methodparam>
<methodparam>
<type>&amp;array</type>
<parameter>&amp;attr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ImgBrush-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>ImgBrush</type>
<methodparam>
<type>img.Image</type>
<parameter>&amp;i</parameter>
</methodparam>
<methodparam>
<type>img.ImgStyle</type>
<parameter>&amp;s</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ImgStyle-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>ImgStyle</type>
<methodparam>
<type>img.Color[]</type>
<parameter>&amp;colors</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ImgStyle-&gt;getPixels">
<sdesc>Retrieves the style array as used for the second argument  int imagesetstyle()</sdesc>
<desc></desc>
<type>int[]</type>
</methodsynopsis>
<methodsynopsis function="IntegerRangeChecker-&gt;__construct">
<sdesc>Construct</sdesc>
<desc></desc>
<type>IntegerRangeChecker</type>
<methodparam>
<type>int</type>
<parameter>min</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>max</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IntegerRangeChecker-&gt;check">
<sdesc>Check a given value</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="-&gt;">
<sdesc>Constructor. Ensures interfaces cannot be instantiated.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="InternetAddress-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>InternetAddress</type>
<methodparam>
<type>mixed</type>
<parameter>mail</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>personal</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="InternetAddress-&gt;fromString">
<sdesc>Create an InternetAddress object from a string</sdesc>
<desc>Recognizes:     Timm Friebe &lt;friebe@example.com&gt;
   friebe@example.com (Timm Friebe)
   &quot;Timm Friebe&quot; &lt;friebe@example.com&gt;
   friebe@example.com
   &lt;friebe@example.com&gt;
   =?iso-8859-1?Q?Timm_Friebe?= &lt;friebe@example.com&gt;</desc>
<type>&amp;peer.mail.InternetAddress</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="InternetAddress-&gt;hashCode">
<sdesc>Retrieve hashcode</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="InternetAddress-&gt;toString">
<sdesc>Create string representation</sdesc>
<desc>Return values:   - personal specified: =?iso-8859-1?Q?Timm_Friebe?= &lt;friebe@example.com&gt;
 - Empty personal:     &lt;friebe@example.com&gt;</desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>charset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="InteropScriptlet-&gt;_processor">
<sdesc>Set our own processor object</sdesc>
<desc></desc>
<type>&amp;.xml.XSLProcessor</type>
</methodsynopsis>
<methodsynopsis function="IPCMessage-&gt;getMessage">
<sdesc>Get Message</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="IPCMessage-&gt;getType">
<sdesc>Get Type</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="IPCMessage-&gt;setMessage">
<sdesc>Set Message</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IPCMessage-&gt;setType">
<sdesc>Set Type</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IPCQueue-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>IPCQueue</type>
<methodparam>
<type>int</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IPCQueue-&gt;getChangedTime">
<sdesc>Get ChangedTime</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="IPCQueue-&gt;getKey">
<sdesc>Get IPC message key</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="IPCQueue-&gt;getMessage">
<sdesc>Get a message from queue</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>desiredType</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>flags</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>maxSize</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>serialize</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IPCQueue-&gt;getOwnerGID">
<sdesc>Get OwnerGID</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="IPCQueue-&gt;getOwnerUID">
<sdesc>Get OwnerUID</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="IPCQueue-&gt;getPermissions">
<sdesc>Get Permissions</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="IPCQueue-&gt;getQuantity">
<sdesc>Get Quantity</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="IPCQueue-&gt;getReceivedPID">
<sdesc>Get ReceivedPID</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="IPCQueue-&gt;getReceivedTime">
<sdesc>Get ReceivedTime</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="IPCQueue-&gt;getSentPID">
<sdesc>Get SentPID</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="IPCQueue-&gt;getSentTime">
<sdesc>Get SentTime</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="IPCQueue-&gt;getSize">
<sdesc>Get Size</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="IPCQueue-&gt;putMessage">
<sdesc>Put a message into queue</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>io.sys.IPCMessage</type>
<parameter>msg</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>serialize</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>blocking</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IPCQueue-&gt;removeQueue">
<sdesc>Remove a message queue</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="IRCColor-&gt;forCode">
<sdesc>Retrieves color representation</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>code</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnection-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>IRCConnection</type>
<methodparam>
<type>&amp;peer.irc.IRCUser</type>
<parameter>&amp;user</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>server</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnection-&gt;addListener">
<sdesc>Adds a listener</sdesc>
<desc></desc>
<type>&amp;peer.irc.IRCConnectionListener</type>
<methodparam>
<type>&amp;peer.irc.IRCConnectionListener</type>
<parameter>&amp;listener</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnection-&gt;close">
<sdesc>Close the communication socket. Issues a QUIT before</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="IRCConnection-&gt;join">
<sdesc>Join a channel</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>channel</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>keyword</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnection-&gt;notify">
<sdesc>Notify all listeners</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>mixed*</type>
<parameter>1</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnection-&gt;open">
<sdesc>Opens connection to the IRC server. Also sets the socket to  blocking mode.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="IRCConnection-&gt;process">
<sdesc>Process a single line of read data</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>r</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnection-&gt;readln">
<sdesc>Directly read a line off the socket. The returned line has any  trailing CRLF trimmed off.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="IRCConnection-&gt;run">
<sdesc>The main loop in which the socket is polled for data, notifying  the attached listeners of events.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="IRCConnection-&gt;sendAction">
<sdesc>Wrapper around writeln() that sends a PRIVMSG with an ACTION</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>1</parameter>
</methodparam>
<methodparam>
<type>mixed*</type>
<parameter>2</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnection-&gt;sendMessage">
<sdesc>Wrapper around writeln() that sends a PRIVMSG</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>1</parameter>
</methodparam>
<methodparam>
<type>mixed*</type>
<parameter>2</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnection-&gt;setNick">
<sdesc>Set nickname and update this user's nickname.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnection-&gt;setTrace">
<sdesc>Set a logger category for debugging</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnection-&gt;writeln">
<sdesc>Directly write a string to the socket. A CRLF is added automatically  at the string's end.</sdesc>
<desc>Note: It seems as if 448 bytes is the maximum length of a single  string that can be written e.g. as a PRIVMSG (including the PRIVMSG  command and destination). This limit is not checked upon.</desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>mixed*</type>
<parameter>1</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onAction">
<sdesc>Callback for actions. Actions are when somebody writes /me ...</sdesc>
<desc>in their IRC window.Example (annoying:)):  1        $connection-&gt;sendAction($target, 'imitates %s and %s, too', $nick, $params);</desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>action</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onClientInfo">
<sdesc>Callback for CTCP CLIENTINFO</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onConnect">
<sdesc>Callback for when a connection to the IRC server has been  established. This method is called *after* a connecting was  successful.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>server</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onDisconnect">
<sdesc>Callback for when a connection to the IRC server has been  closed. This method is called *before* the connection is actually  dropped; thus making it possible to say goodbye. You cannot do  anything to prevent disconnection, though.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>server</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onEndOfMOTD">
<sdesc>Callback for server message REPLY_ENDOFMOTD (376)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>server</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onFinger">
<sdesc>Callback for CTCP FINGER</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onInvite">
<sdesc>Callback for invitations. Note: Due to the limitations of the INVITE  command, you won't be able to join password-protected channels unless  you know their password!</sdesc>
<desc>Example: Join if we're invited:  1        $connection-&gt;($channel);</desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>who</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>channel</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onJoins">
<sdesc>Callback for joins</sdesc>
<desc>Example (welcome users)  1        // Send it to the channel so everybody knows2        $connection-&gt;sendMessage($channel, 'Welcome %s', $nick);3     4        // Send it to the joinee privately5        $connection-&gt;sendMessage($nick, 'Welcome!');</desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>channel</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onKicks">
<sdesc>Callback for kicks</sdesc>
<desc>Example (identifying being kicked):  1        if (($who, $connection-&gt;user-&gt;getNick()) == 0) {2          // ... I was kicked ...3        }</desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>channel</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>who</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>reason</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onModeChanges">
<sdesc>Callback for mode changes</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>mode</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onMOTD">
<sdesc>Callback for server message MOTD (372)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>server</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onMOTDStart">
<sdesc>Callback for server message MOTDSTART (375)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>server</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onNickChanges">
<sdesc>Callback for nick changes</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>channel</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>new</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onNotice">
<sdesc>Callback for notices</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onParts">
<sdesc>Callback for parts</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>channel</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onPing">
<sdesc>Callback for CTCP PING</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onPings">
<sdesc>Callback for Pings. Note that the PING has already been answered  when this method is called, so you won't have to send a PONG  yourself.</sdesc>
<desc>You might want to use this method in IRC-bots to accomplish the  task of deliberately being able to perform an action without any  other action having taken place (e.g., maintenance, reload config,  ...)</desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onPrivateMessage">
<sdesc>Callback for private messages</sdesc>
<desc>Example (implementing &quot;commands&quot;):  1        if (($message, &quot;!%s %[^\r]&quot;, $command, $params)) {2          switch (($command)) {3            case 'status':4              // ...5          }6        }</desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onQuits">
<sdesc>Callback for quits</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>channel</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>reason</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onServerMessage">
<sdesc>Callback for all other server messages</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>server</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>code</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onTime">
<sdesc>Callback for CTCP TIME</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onTopic">
<sdesc>Callback for topic changes</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>channel</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>topic</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onUserInfo">
<sdesc>Callback for CTCP USERINFO</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConnectionListener-&gt;onVersion">
<sdesc>Callback for CTCP VERSION</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.irc.IRCConnection</type>
<parameter>&amp;connection</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCConstants-&gt;nameOf">
<sdesc>Get the name of a code</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>code</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCUser-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>IRCUser</type>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>realname</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>username</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>hostname</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCUser-&gt;getHostname">
<sdesc>Get Hostname</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="IRCUser-&gt;getNick">
<sdesc>Get Nick</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="IRCUser-&gt;getRealname">
<sdesc>Get Realname</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="IRCUser-&gt;getUsername">
<sdesc>Get Username</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="IRCUser-&gt;setHostname">
<sdesc>Set Hostname</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>hostname</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCUser-&gt;setNick">
<sdesc>Set Nick</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCUser-&gt;setRealname">
<sdesc>Set Realname</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>realname</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="IRCUser-&gt;setUsername">
<sdesc>Set Username</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>username</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Iterator-&gt;hasNext">
<sdesc>Returns true if the iteration has more elements. (In other words,  returns true if next would return an element rather than throwing  an exception.)</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Iterator-&gt;next">
<sdesc>Returns the next element in the iteration.</sdesc>
<desc></desc>
<type>&amp;mixed</type>
</methodsynopsis>
<methodsynopsis function="JnlpApplicationDesc-&gt;addArgument">
<sdesc>Add an arguments</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>argument</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpApplicationDesc-&gt;getArguments">
<sdesc>Get Arguments</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="JnlpApplicationDesc-&gt;getMain_class">
<sdesc>Get Main_class</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="JnlpApplicationDesc-&gt;setArguments">
<sdesc>Set Arguments</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string[]</type>
<parameter>arguments</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpApplicationDesc-&gt;setMain_class">
<sdesc>Set Main_class</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>main_class</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpDocument-&gt;__construct">
<sdesc>Create a new JNLP document</sdesc>
<desc></desc>
<type>JnlpDocument</type>
<methodparam>
<type>string</type>
<parameter>codebase</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>href</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>spec</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpDocument-&gt;addResource">
<sdesc>Add a resource</sdesc>
<desc></desc>
<type>&amp;com.sun.webstart.JnlpResource</type>
<methodparam>
<type>&amp;com.sun.webstart.JnlpResource</type>
<parameter>&amp;resource</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpDocument-&gt;extract">
<sdesc>Extract information from nodesets</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="JnlpDocument-&gt;findFirst">
<sdesc>Find first node within a given base (one-level search, no recursion)  whose (tag) name matches the specified name.</sdesc>
<desc></desc>
<type>&amp;xml.Node</type>
<methodparam>
<type>&amp;xml.Node</type>
<parameter>&amp;base</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpDocument-&gt;fromFile">
<sdesc>Create a new JNLP document from a file</sdesc>
<desc></desc>
<type>&amp;com.sun.webstart.JnlpDocument</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpDocument-&gt;fromString">
<sdesc>Create a new JNLP document from a string</sdesc>
<desc></desc>
<type>&amp;com.sun.webstart.JnlpDocument</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpDocument-&gt;getApplicationDesc">
<sdesc>Get application description</sdesc>
<desc></desc>
<type>&amp;com.sun.webstart.JnlpApplicationDesc</type>
</methodsynopsis>
<methodsynopsis function="JnlpDocument-&gt;getCodebase">
<sdesc>Returns the codebase</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="JnlpDocument-&gt;getHref">
<sdesc>Returns the href</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="JnlpDocument-&gt;getInformation">
<sdesc>Get information</sdesc>
<desc></desc>
<type>&amp;com.sun.webstart.JnlpInformation</type>
</methodsynopsis>
<methodsynopsis function="JnlpDocument-&gt;getResources">
<sdesc>Get all resources</sdesc>
<desc></desc>
<type>com.sun.webstart.JnlpResource[]</type>
</methodsynopsis>
<methodsynopsis function="JnlpDocument-&gt;getSpec">
<sdesc>Returns the spec</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="JnlpDocument-&gt;setCodebase">
<sdesc>Sets the codebase</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>codebase</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpDocument-&gt;setHref">
<sdesc>Sets the href</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>href</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpDocument-&gt;setInformation">
<sdesc>Set information</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;com.sun.webstart.JnlpInformation</type>
<parameter>&amp;i</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpDocument-&gt;setSpec">
<sdesc>Sets the spec</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>spec</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpInformation-&gt;getDescription">
<sdesc>Get default description</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpInformation-&gt;getHomepage">
<sdesc>Get Homepage</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="JnlpInformation-&gt;getIcon">
<sdesc>Get Icon</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="JnlpInformation-&gt;getTitle">
<sdesc>Get Title</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="JnlpInformation-&gt;getVendor">
<sdesc>Get Vendor</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="JnlpInformation-&gt;setDescription">
<sdesc>Set default description</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>description</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpInformation-&gt;setHomepage">
<sdesc>Set Homepage</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>homepage</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpInformation-&gt;setIcon">
<sdesc>Set Icon</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>icon</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpInformation-&gt;setTitle">
<sdesc>Set Title</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>title</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpInformation-&gt;setVendor">
<sdesc>Set Vendor</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>vendor</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpJ2seResource-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>JnlpJ2seResource</type>
<methodparam>
<type>string</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpJ2seResource-&gt;getTagAttributes">
<sdesc>Get attributes</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="JnlpJ2seResource-&gt;getTagName">
<sdesc>Get name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="JnlpJ2seResource-&gt;getVersion">
<sdesc>Get version</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="JnlpJ2seResource-&gt;setVersion">
<sdesc>Set version</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpJarResource-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>JnlpJarResource</type>
<methodparam>
<type>string</type>
<parameter>href</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpJarResource-&gt;getHref">
<sdesc>Get Href</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="JnlpJarResource-&gt;getTagAttributes">
<sdesc>Get attributes</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="JnlpJarResource-&gt;getTagName">
<sdesc>Get name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="JnlpJarResource-&gt;setHref">
<sdesc>Set Href</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>href</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpPropertyResource-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>JnlpPropertyResource</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpPropertyResource-&gt;getName">
<sdesc>Get Name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="JnlpPropertyResource-&gt;getTagAttributes">
<sdesc>Get attributes</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="JnlpPropertyResource-&gt;getTagName">
<sdesc>Get name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="JnlpPropertyResource-&gt;getValue">
<sdesc>Get Value</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="JnlpPropertyResource-&gt;setName">
<sdesc>Set Name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpPropertyResource-&gt;setValue">
<sdesc>Set Value</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JnlpResource-&gt;getTagAttributes">
<sdesc>Get attributes</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="JnlpResource-&gt;getTagName">
<sdesc>Get name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="JpegStreamReader-&gt;readFromStream">
<sdesc>Read an image</sdesc>
<desc></desc>
<type>resource</type>
</methodsynopsis>
<methodsynopsis function="JpegStreamWriter-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>JpegStreamWriter</type>
<methodparam>
<type>&amp;io.Stream</type>
<parameter>&amp;stream</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>quality</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="JpegStreamWriter-&gt;output">
<sdesc>Output an image</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>resource</type>
<parameter>handle</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="KeyPair-&gt;export">
<sdesc>Export this keypair</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>passphrase</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="KeyPair-&gt;generate">
<sdesc>Generates a new private and public key pair.</sdesc>
<desc>Supported algorithms   md2       MD2 Digest
 md5       MD5 Digest
 mdc2      MDC2 Digest
 rmd160    RMD-160 Digest
 sha       SHA Digest
 sha1      SHA-1 Digest</desc>
<type>&amp;security.KeyPair</type>
<methodparam>
<type>string</type>
<parameter>algorithm</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>type</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>bits</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="KeyServerStorage-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>KeyServerStorage</type>
<methodparam>
<type>string</type>
<parameter>host</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="KeyServerStorage-&gt;contains">
<sdesc>Returns whether this storage contains the given key</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="KeyServerStorage-&gt;free">
<sdesc>Remove all keys</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="KeyServerStorage-&gt;get">
<sdesc>Get a key by it's name</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="KeyServerStorage-&gt;initialize">
<sdesc>Initialize this storage</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="KeyServerStorage-&gt;keys">
<sdesc>Get all keys</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="KeyServerStorage-&gt;put">
<sdesc>Insert/update a key</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>permissions</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="KeyServerStorage-&gt;remove">
<sdesc>Remove a key</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="null-&gt;null">
<sdesc></sdesc>
<desc></desc>
<type>null</type>
</methodsynopsis>
<methodsynopsis function="null-&gt;__call">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="null-&gt;__get">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="null-&gt;__set">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="xp-&gt;error">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="xp-&gt;errorAt">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="xp-&gt;gc">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="xp-&gt;nameOf">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="xp-&gt;null">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="xp-&gt;reflect">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="xp-&gt;registry">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="xp-&gt;sapi">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="xp-&gt;stringOf">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="xp-&gt;typeOf">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="LdapAuthenticator-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>LdapAuthenticator</type>
<methodparam>
<type>&amp;peer.ldap.LDAPClient</type>
<parameter>&amp;lc</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LdapAuthenticator-&gt;authenticate">
<sdesc>Authenticate a user</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>user</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>pass</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPClient-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>LDAPClient</type>
<methodparam>
<type>string</type>
<parameter>host</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPClient-&gt;add">
<sdesc>Add an entry</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.ldap.LDAPEntry</type>
<parameter>&amp;entry</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPClient-&gt;bind">
<sdesc>Bind</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="LDAPClient-&gt;close">
<sdesc>Closes the connection</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="LDAPClient-&gt;connect">
<sdesc>Connect to the LDAP server</sdesc>
<desc></desc>
<type>resource</type>
</methodsynopsis>
<methodsynopsis function="LDAPClient-&gt;delete">
<sdesc>Delete an entry</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.ldap.LDAPEntry</type>
<parameter>&amp;entry</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPClient-&gt;exists">
<sdesc>Check if an entry exists</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.ldap.LDAPEntry</type>
<parameter>&amp;entry</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPClient-&gt;getOption">
<sdesc>Retrieve ldap option value</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>int</type>
<parameter>option</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPClient-&gt;isConnected">
<sdesc>Checks whether the connection is open</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="LDAPClient-&gt;modify">
<sdesc>Modify an entry.</sdesc>
<desc>Note: Will do a complete update of all fields and can be quite slow  TBD(?): Be more intelligent about what to update?</desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.ldap.LDAPEntry</type>
<parameter>&amp;entry</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPClient-&gt;read">
<sdesc>Read an entry</sdesc>
<desc></desc>
<type>&amp;peer.ldap.LDAPEntry</type>
<methodparam>
<type>&amp;peer.ldap.LDAPEntry</type>
<parameter>&amp;entry</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPClient-&gt;search">
<sdesc>Perform an LDAP search with scope LDAP_SCOPE_SUB</sdesc>
<desc></desc>
<type>peer.ldap.LDAPSearchResult</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>1</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>2</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>3</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>4</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>5</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>6</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPClient-&gt;searchScope">
<sdesc>Perform an LDAP search with a scope</sdesc>
<desc></desc>
<type>peer.ldap.LDAPSearchResult</type>
<methodparam>
<type>int</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>1</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>2</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>3</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>4</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>5</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>6</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>7</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPClient-&gt;setOption">
<sdesc>Sets an ldap option value</sdesc>
<desc></desc>
<type>boolean</type>
<methodparam>
<type>int</type>
<parameter>option</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPEntry-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>LDAPEntry</type>
<methodparam>
<type>string</type>
<parameter>dn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPEntry-&gt;fromData">
<sdesc>Creates an LDAP from the raw return data of PHP's ldap_* functions  Also performs decoding on the attributes.</sdesc>
<desc></desc>
<type>&amp;peer.ldap.LDAPEntry</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPEntry-&gt;getAttribute">
<sdesc>Retrieve an attribute - an offset may be supplied to define  the values offset within the attribute. If -1 (the default)  is supplied, an array of attribute values is returned.</sdesc>
<desc>Note: If the value does not exist, NULL is returned</desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>idx</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPEntry-&gt;getAttributes">
<sdesc>Retrieve all attributes</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="LDAPEntry-&gt;getDN">
<sdesc>Retrieve this entries' DN (distinct name)</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="LDAPEntry-&gt;setAttribute">
<sdesc>Set attribute</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPEntry-&gt;setDN">
<sdesc>Set this entrie's DN (distinct name)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>dn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPEntry-&gt;toString">
<sdesc>Retrieve a string representation of this object</sdesc>
<desc></desc>
<type>strig</type>
</methodsynopsis>
<methodsynopsis function="LDAPException-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>LDAPException</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>errorcode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPException-&gt;getErrorCode">
<sdesc>Get errorcode</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="LDAPException-&gt;toString">
<sdesc>Create string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="LDAPSearchResult-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>LDAPSearchResult</type>
<methodparam>
<type>array</type>
<parameter>&amp;hdl</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPSearchResult-&gt;getEntry">
<sdesc>Get a search entry by offset</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>int</type>
<parameter>offset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDAPSearchResult-&gt;getFirstEntry">
<sdesc>Gets first entry</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="LDAPSearchResult-&gt;getNextEntry">
<sdesc>Gets next entry - ideal for loops such as:</sdesc>
<desc>1        while ($entry= $l-&gt;()) {2          // doit3        }</desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="LDAPSearchResult-&gt;numEntries">
<sdesc>Returns number of found elements</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="LDAPTest-&gt;setUp">
<sdesc>Setup function</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="LDAPTest-&gt;tearDown">
<sdesc>Tear down this test case.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="LDAPTest-&gt;testSearch">
<sdesc>Test LDAP search</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="LDIFWriter-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>LDIFWriter</type>
<methodparam>
<type>&amp;io.Stream</type>
<parameter>&amp;stream</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDIFWriter-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="LDIFWriter-&gt;finish">
<sdesc>Finish off writing, close and destroy stream</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="LDIFWriter-&gt;initialize">
<sdesc>Initialize this writer</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>mode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LDIFWriter-&gt;write">
<sdesc>Write an entry</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.ldap.LDAPEntry</type>
<parameter>&amp;entry</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LengthChecker-&gt;__construct">
<sdesc>Construct</sdesc>
<desc></desc>
<type>LengthChecker</type>
<methodparam>
<type>int</type>
<parameter>min</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>max</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LengthChecker-&gt;check">
<sdesc>Check a given value</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Line-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Line</type>
<methodparam>
<type>&amp;img.Color</type>
<parameter>&amp;col</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>x1</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>y1</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>x2</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>y2</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Line-&gt;draw">
<sdesc>Draw function</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;resource</type>
<parameter>&amp;hdl</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Locale-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Locale</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>1</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>2</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Locale-&gt;getCountry">
<sdesc>Get Country</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Locale-&gt;getDefault">
<sdesc>Get default locale</sdesc>
<desc></desc>
<type>&amp;util.Locale</type>
</methodsynopsis>
<methodsynopsis function="Locale-&gt;getLanguage">
<sdesc>Get Language</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Locale-&gt;getVariant">
<sdesc>Get Variant</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Locale-&gt;hashCode">
<sdesc>Returns a hashcode for this object</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Locale-&gt;setDefault">
<sdesc>Set default locale for this script</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Locale</type>
<parameter>&amp;locale</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Locale-&gt;toString">
<sdesc>Create string representation</sdesc>
<desc>Examples:   de_DE
 en_US
 de_DE@euro
 de_DE.ISO8859-1</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="LocaleNegotiator-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>LocaleNegotiator</type>
<methodparam>
<type>string</type>
<parameter>languages</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>charsets</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LocaleNegotiator-&gt;getCharset">
<sdesc>Retrieve charset</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string[]</type>
<parameter>supported</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LocaleNegotiator-&gt;getLocale">
<sdesc>Retrieve locale</sdesc>
<desc></desc>
<type>&amp;util.Locale</type>
<methodparam>
<type>string[]</type>
<parameter>supported</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LogAppender-&gt;append">
<sdesc>Append data</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LogAppender-&gt;finalize">
<sdesc>Finalize this appender. This method is called when the logger  is shut down. Does nothing in this default implementation.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="LogAppender-&gt;varSource">
<sdesc>Retrieve a readable representation of a variable</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>var</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LogCategory-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>LogCategory</type>
<methodparam>
<type>string</type>
<parameter>identifier</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>format</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>dateformat</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>flags</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LogCategory-&gt;addAppender">
<sdesc>Adds an appender for the given log categories. Use logical OR to  combine the log types or use LOGGER_FLAG_ALL (default) to log all  types.</sdesc>
<desc></desc>
<type>&amp;util.log.LogAppender</type>
<methodparam>
<type>&amp;util.log.LogAppender</type>
<parameter>&amp;appender</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>flag</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LogCategory-&gt;debug">
<sdesc>Appends a log of type debug</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LogCategory-&gt;debugf">
<sdesc>Appends a log of type info in printf-style</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>mixed*</type>
<parameter>1</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LogCategory-&gt;error">
<sdesc>Appends a log of type error</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LogCategory-&gt;errorf">
<sdesc>Appends a log of type info in printf-style</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>mixed*</type>
<parameter>1</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LogCategory-&gt;finalize">
<sdesc>Finalize</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="LogCategory-&gt;getFlags">
<sdesc>Gets flags</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="LogCategory-&gt;hasAppenders">
<sdesc>Retrieves whether this log category has appenders</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="LogCategory-&gt;info">
<sdesc>Appends a log of type info. Accepts any number of arguments of  any type.</sdesc>
<desc>The common rule (though up to each appender on how to realize it)  for serialization of an argument is:For XP objects, the toString() method will be called
       to retrieve its representationStrings are printed directlyAny other type is serialized using var_export()Note: This also applies to warn(), error() and debug().</desc>
<type>void</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LogCategory-&gt;infof">
<sdesc>Appends a log of type info in sprintf-style. The first argument  to this method is the format string, containing sprintf-tokens,  the rest of the arguments are used as argument to sprintf.</sdesc>
<desc>Note: This also applies to warnf(), errorf() and debugf().</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>mixed*</type>
<parameter>1</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LogCategory-&gt;mark">
<sdesc>Appends a separator (a &quot;line&quot; consisting of 72 dashes)</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="LogCategory-&gt;removeAppender">
<sdesc>Remove the specified appender from the given log categories. For usage  of log category flags, see addAppender().</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogAppender</type>
<parameter>&amp;appender</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LogCategory-&gt;setFlags">
<sdesc>Sets the flags (what should be logged). Note that you also  need to add an appender for a category you want to log.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>flags</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LogCategory-&gt;warn">
<sdesc>Appends a log of type warn</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LogCategory-&gt;warnf">
<sdesc>Appends a log of type info in printf-style</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>mixed*</type>
<parameter>1</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Logger-&gt;__destruct">
<sdesc>Destructor. Makes sure Logger::finalize() is called.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Logger-&gt;configure">
<sdesc>Configure this logger</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Properties</type>
<parameter>&amp;prop</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Logger-&gt;finalize">
<sdesc>Tells all categories to finalize themselves</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Logger-&gt;getCategory">
<sdesc>Get a category</sdesc>
<desc></desc>
<type>&amp;util.log.LogCategory</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Logger-&gt;getInstance">
<sdesc>Returns an instance of this class</sdesc>
<desc></desc>
<type>&amp;util.log.Logger</type>
</methodsynopsis>
<methodsynopsis function="LogObserver-&gt;instanceFor">
<sdesc>Retrieve instance bound to log category.</sdesc>
<desc></desc>
<type>&amp;util.log.LogObserver</type>
<methodparam>
<type>string</type>
<parameter>arg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LogObserver-&gt;update">
<sdesc>Update method</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Observable</type>
<parameter>&amp;obs</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LookupState-&gt;process">
<sdesc>Process this state. Redirects to known targets or invokes the  search if the lookup fails.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LRUBuffer-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>LRUBuffer</type>
<methodparam>
<type>int</type>
<parameter>size</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LRUBuffer-&gt;add">
<sdesc>Add an element to the buffer and return the id of the element  which has been deleted in exchange. Returns NULL for the case  that no element has been deleted (which is the case when the  buffer's size has not yet been exceeded).</sdesc>
<desc>1        $deleted= $buf-&gt;($key);</desc>
<type>int</type>
<methodparam>
<type>string</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LRUBuffer-&gt;getSize">
<sdesc>Get Size</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="LRUBuffer-&gt;microtime">
<sdesc>Retrieve current microtime</sdesc>
<desc></desc>
<type>float</type>
</methodsynopsis>
<methodsynopsis function="LRUBuffer-&gt;setSize">
<sdesc>Set Size</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>size</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="LRUBuffer-&gt;update">
<sdesc>Update an element</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MaildirStore-&gt;__construct">
<sdesc>Constructs a MaildirStore object.</sdesc>
<desc></desc>
<type>MaildirStore</type>
</methodsynopsis>
<methodsynopsis function="MaildirStore-&gt;close">
<sdesc>Closes currently open mailstore.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="MaildirStore-&gt;closeFolder">
<sdesc>Closes an open folder.</sdesc>
<desc></desc>
<type>boolean</type>
<methodparam>
<type>&amp;peer.mail.MailFolder</type>
<parameter>&amp;f</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MaildirStore-&gt;getFolder">
<sdesc>Opens a subfolder of the current folder and returns  an object of that mailbox.</sdesc>
<desc></desc>
<type>&amp;peer.mail.MailFolder</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MaildirStore-&gt;getFolders">
<sdesc>Returns a list of all subfolders in current folder.</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="MaildirStore-&gt;getMessageCount">
<sdesc>Gets the count of messages with speciefied attribute  or all messages when no attribute was specified</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>&amp;peer.mail.Mailfolder</type>
<parameter>&amp;f</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>attr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MaildirStore-&gt;getMessages">
<sdesc>Returns an array of messages specified by the numbers in the  argument</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>mixed*</type>
<parameter>1</parameter>
</methodparam>
<methodparam>
<type>&amp;peer.mail.MailFolder</type>
<parameter>&amp;f</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MaildirStore-&gt;open">
<sdesc>Opens a Maildir store. If no parameter is given, this opens  the users default mailbox located in $HOME/Maildir/.</sdesc>
<desc></desc>
<type>boolean</type>
<methodparam>
<type>string</type>
<parameter>folder</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MaildirStore-&gt;openFolder">
<sdesc>Opens a folder.</sdesc>
<desc></desc>
<type>boolean</type>
<methodparam>
<type>&amp;peer.mail.MailFolder</type>
<parameter>&amp;f</parameter>
</methodparam>
<methodparam>
<type>boolean</type>
<parameter>readonly</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MailFolder-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>MailFolder</type>
<methodparam>
<type>&amp;peer.mail.store.MailStore</type>
<parameter>&amp;store</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MailFolder-&gt;close">
<sdesc>Close this folder</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="MailFolder-&gt;deleteMessage">
<sdesc>Delete a message</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.mail.Message</type>
<parameter>&amp;msg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MailFolder-&gt;getMessage">
<sdesc>Get next message (iterator)</sdesc>
<desc>Example:  1        $f-&gt;();2        while ($msg= &amp;$f-&gt;()) {3          echo $msg-&gt;();4        }5        $f-&gt;();</desc>
<type>&amp;peer.mail.Message</type>
</methodsynopsis>
<methodsynopsis function="MailFolder-&gt;getMessageCount">
<sdesc>Get number of messages in this folder</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="MailFolder-&gt;getMessagePart">
<sdesc>Get a message part</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>string</type>
<parameter>uid</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>part</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MailFolder-&gt;getMessages">
<sdesc>Get messages</sdesc>
<desc>1        // Get all messages2        $f-&gt;();3     4        // Get messages #1, #4 and #55        $f-&gt;(1, 4, 5);6     7        // Get messages #3, #7 and #10 through #148        $f-&gt;(3, 7, (10, 14));</desc>
<type>&amp;peer.mail.Message[]</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MailFolder-&gt;getMessageStruct">
<sdesc>Get a message part</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>string</type>
<parameter>1</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>uid</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MailFolder-&gt;getNewMessageCount">
<sdesc>Get number of new messages in this folder</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="MailFolder-&gt;getUnreadMessageCount">
<sdesc>Get number of unread messages in this folder</sdesc>
<desc></desc>
<type>intGet</type>
</methodsynopsis>
<methodsynopsis function="MailFolder-&gt;open">
<sdesc>Open this folder</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>bool</type>
<parameter>readonly</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MailFolder-&gt;rewind">
<sdesc>Rewind this folder (set the iterator offset for getMessage() to 0)</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="MailFolder-&gt;toString">
<sdesc>Create string representation, e.g.</sdesc>
<desc>peer.mail.MailFolder[INBOX]@{
   name  -&gt; peer.mail.store.ImapStore
   cache -&gt; peer.mail.store.StoreCache[5]@{
     [folder/INBOX            ] object [mailfolder]
     [list/message/INBOX1     ] object [message]
     [list/message/INBOX2     ] object [message]
     [list/message/INBOX3     ] object [message]
     [list/message/INBOX5     ] object [message]
   }
 }</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="MailFolder-&gt;undeleteMessage">
<sdesc>Undelete a message</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.mail.Message</type>
<parameter>&amp;msg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MailStore-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>MailStore</type>
<methodparam>
<type>peer.mail.store.StoreCache</type>
<parameter>cache</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MailStore-&gt;close">
<sdesc>Disconnect from store</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="MailStore-&gt;closeFolder">
<sdesc>Close a folder</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.mail.MailFolder</type>
<parameter>&amp;f</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MailStore-&gt;getFolder">
<sdesc>Get a folder</sdesc>
<desc></desc>
<type>&amp;peer.mail.MailFolder</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MailStore-&gt;getFolders">
<sdesc>Get all folders</sdesc>
<desc></desc>
<type>&amp;peer.mail.MailFolder[]</type>
</methodsynopsis>
<methodsynopsis function="MailStore-&gt;getMessageCount">
<sdesc>Get number of messages in this folder</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>&amp;peer.mail.MailFolder</type>
<parameter>&amp;f</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>attr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MailStore-&gt;getMessages">
<sdesc>Get messages in a folder</sdesc>
<desc></desc>
<type>&amp;peer.mail.Message[]</type>
<methodparam>
<type>mixed*</type>
<parameter>1</parameter>
</methodparam>
<methodparam>
<type>&amp;peer.mail.MailFolder</type>
<parameter>&amp;f</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MailStore-&gt;open">
<sdesc>Connect to store</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>dsn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MailStore-&gt;openFolder">
<sdesc>Open a folder</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.mail.MailFolder</type>
<parameter>&amp;f</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>readonly</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MailTransport-&gt;close">
<sdesc>Close connection</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="MailTransport-&gt;connect">
<sdesc>Connect to this transport</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>dsn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MailTransport-&gt;send">
<sdesc>Send a message</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.mail.Message</type>
<parameter>&amp;message</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MboxStore-&gt;getFolder">
<sdesc>Get a folder. Note: Results from this method are cached.</sdesc>
<desc></desc>
<type>&amp;peer.mail.MailFolder</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MboxStore-&gt;_supports">
<sdesc>Protected method to check whether this DSN is supported</sdesc>
<desc>Supported notations:   - mbox:///usr/home/foo/Mail</desc>
<type>bool</type>
<methodparam>
<type>&amp;int</type>
<parameter>2</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>u</parameter>
</methodparam>
<methodparam>
<type>&amp;array</type>
<parameter>&amp;attr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MD5-&gt;fromFile">
<sdesc>Create a new checksum from a file object</sdesc>
<desc></desc>
<type>&amp;security.checksum.MD5</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MD5-&gt;fromString">
<sdesc>Create a new checksum from a string</sdesc>
<desc></desc>
<type>&amp;security.checksum.MD5</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MemoryStorage-&gt;contains">
<sdesc>Returns whether this storage contains the given key</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MemoryStorage-&gt;free">
<sdesc>Remove all keys</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="MemoryStorage-&gt;get">
<sdesc>Get a key by it's name</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MemoryStorage-&gt;initialize">
<sdesc>Initialize this storage</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MemoryStorage-&gt;keys">
<sdesc>Get all keys</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="MemoryStorage-&gt;put">
<sdesc>Insert/update a key</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>permissions</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MemoryStorage-&gt;remove">
<sdesc>Remove a key</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Message</type>
<methodparam>
<type>int</type>
<parameter>uid</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;addRecipient">
<sdesc>Add recipient</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
<methodparam>
<type>&amp;peer.mail.InternetAddress</type>
<parameter>&amp;adr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;addRecipients">
<sdesc>Add recipients</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
<methodparam>
<type>&amp;peer.mail.InternetAddress[]</type>
<parameter>&amp;adr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;getBody">
<sdesc>Get message body. If this message is contained in a folder and the body  has'nt been fetched yet, it'll be retrieved from the storage underlying  the folder.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Message-&gt;getCharset">
<sdesc>Get message charset</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Message-&gt;getContenttype">
<sdesc>Get message contenttype</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Message-&gt;getDate">
<sdesc>Retrieve message date</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="Message-&gt;getEncoding">
<sdesc>Get message encoding</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Message-&gt;getFrom">
<sdesc>Get recipients</sdesc>
<desc></desc>
<type>&amp;peer.mail.InternetAddress[]</type>
</methodsynopsis>
<methodsynopsis function="Message-&gt;getHeader">
<sdesc>Get header. The search is performed case-insensitively, so  $mail-&gt;getHeader('Content-type') and $mail-&gt;getHeader('Content-Type')  will yield the same result.</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>header</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;getHeaderString">
<sdesc>Return headers as string</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Message-&gt;getMimeVersion">
<sdesc>Get Mime version</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Message-&gt;getRecipient">
<sdesc>Get recipient (use iteratively):</sdesc>
<desc>1        while ($r= &amp;$m-&gt;()) {2          ($r);3        }</desc>
<type>&amp;peer.mail.InternetAddress[]</type>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;getRecipients">
<sdesc>Get recipients</sdesc>
<desc></desc>
<type>&amp;peer.mail.InternetAddress[]</type>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;getSubject">
<sdesc>Get message subject</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Message-&gt;setBody">
<sdesc>Set message body</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>body</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;setCharset">
<sdesc>Set message charset</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>charset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;setContenttype">
<sdesc>Set message contenttype</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>contenttype</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;setDate">
<sdesc>Sets message date</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>&amp;arg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;setEncoding">
<sdesc>Set message encoding</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>encoding</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;setFrom">
<sdesc>Set from</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.mail.InternetAddress[]</type>
<parameter>&amp;adr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;setHeader">
<sdesc>Set additional headers. Note: This function cannot be used  to set From, To, Cc or Bcc!</sdesc>
<desc>Example:  1        $mail-&gt;('X-Binford', '6100 (more power)');</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>header</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;setHeaderString">
<sdesc>Set headers from string</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;setMimeVersion">
<sdesc>Set Mime version</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>mimeversion</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;setSubject">
<sdesc>Set message subject</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>subject</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;toString">
<sdesc>Create string representation. Note: This is not suitable for sending mails,  use the getHeaderString() and getBody() methods!</sdesc>
<desc>Example output:   peer.mail.Message[10332605]@{
   [headers     ] array (
     'Received' =&gt; 'from moutvdom01.kundenserver.de by mx08.web.de with smtp
         (freemail 4.2.2.3 #20) id m15snxT-008AX0A; Sun, 14 Oct 2001 18:17 +0200
   from [195.20.224.209] (helo=mrvdom02.schlund.de)
         by moutvdom01.kundenserver.de with esmtp (Exim 2.12 #2)
         id 15snxT-0004WT-00
         for timm.friebe@bar.foo; Sun, 14 Oct 2001 18:17:47 +0200
   from p3e9e72f0.dip0.t-ipconnect.de ([62.158.114.240] helo=banane)
         by mrvdom02.schlund.de with smtp (Exim 2.12 #2)
         id 15snxK-0005Xj-00; Sun, 14 Oct 2001 18:17:38 +0200',
     'Message-ID' =&gt; '&lt;013901c154cb$c03222d0$917cfea9@banane&gt;',
     'MIME-Version' =&gt; '1.0',
     'X-MSMail-Priority' =&gt; 'Normal',
     'X-Mailer' =&gt; 'Microsoft Outlook Express 6.00.2505.0000',
     'X-MimeOLE' =&gt; 'Produced By Microsoft MimeOLE V6.00.2505.0000',
   )
   [body        ] ''
   [to          ] array (
     0 =&gt;
     array (
       'personal' =&gt; '',
       'localpart' =&gt; 'timm.friebe',
       'domain' =&gt; 'bar.foo',
     ),
   )
   [from        ] =?iso-8859-1?Q?&quot;Timm_Friebe&quot;?= &lt;thekid@example.foo&gt;
   [cc          ] array (
     0 =&gt;
     array (
       'personal' =&gt; '',
       'localpart' =&gt; 'thekid',
       'domain' =&gt; 'bar.baz',
     ),
   )
   [bcc         ] array (
   )
   [subject     ] 'Test mit HTML'
   [priority    ] 3
   [contenttype ] 'multipart/mixed; boundary=&quot;DORIS009DA9BD&quot;'
   [encoding    ] '8bit'
   [folder      ] peer.mail.MailFolder[INBOX]@{
   name  -&gt; peer.mail.store.ImapStore
   cache -&gt; peer.mail.store.StoreCache[5]@{
     [folder/INBOX            ] object [mailfolder]
     [list/message/INBOX1     ] object [message]
     [list/message/INBOX2     ] object [message]
     [list/message/INBOX3     ] object [message]
     [list/message/INBOX5     ] object [message]
   }
 }
   [uid         ] 10332605
   [flags       ] 32
   [size        ] 27124
   [date        ] Sun, 14 Oct 2001 18:17:38 +0200
 }</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Message-&gt;_astr">
<sdesc>Build representation of address list</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>t</parameter>
</methodparam>
<methodparam>
<type>&amp;peer.mail.InternetAddress[]</type>
<parameter>&amp;addrs</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Message-&gt;_qstr">
<sdesc>Check if a string needs to be encoded and encode it if necessary</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MessageBox-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>MessageBox</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>caption</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>style</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>buttons</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MessageBox-&gt;display">
<sdesc>Public static method</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>caption</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>style</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>buttons</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MessageBox-&gt;init">
<sdesc>Initialize</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="MessageBox-&gt;onButtonClicked">
<sdesc>Callback for buttons</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;php.GtkWidget</type>
<parameter>&amp;widget</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MessageBox-&gt;run">
<sdesc>Run this</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="MessageBox-&gt;show">
<sdesc>Show this messagebpx</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="MessageFormat-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>MessageFormat</type>
<methodparam>
<type>string</type>
<parameter>f</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MessageFormat-&gt;apply">
<sdesc>Apply format to argument</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>fmt</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;argument</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MessageFormat-&gt;getInstance">
<sdesc>Get an instance</sdesc>
<desc></desc>
<type>&amp;text.format.MessageFormat</type>
</methodsynopsis>
<methodsynopsis function="MessageFormat-&gt;hasFormatter">
<sdesc>Check whether a given formatter exists</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>alias</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MessageFormat-&gt;setFormatter">
<sdesc>Set a format handler for a special type</sdesc>
<desc></desc>
<type>&amp;text.format.PrintfFormat</type>
<methodparam>
<type>string</type>
<parameter>alias</parameter>
</methodparam>
<methodparam>
<type>&amp;text.format.PrintfFormat</type>
<parameter>&amp;formatter</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MessagingException-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>MessagingException</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>detail</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MessagingException-&gt;toString">
<sdesc>Get string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Method-&gt;invoke">
<sdesc>Invokes the underlying method represented by this Method object,  on the specified object with the specified parameters.</sdesc>
<desc>Example:  1        $class= &amp;::('lang.Object');2        $method= &amp;$class-&gt;getMethod('toString');3     4        ($method-&gt;(new ()));Example (passing arguments)  1        $class= &amp;::('text.String');2        $method= &amp;$class-&gt;getMethod('matches');3     4        ($method-&gt;(new ('Hello'), array('/^H/')));Example (static invokation):  1        $class= &amp;::('util.log.Logger');2        $method= &amp;$class-&gt;getMethod('getInstance');3     4        ($method-&gt;($obj= NULL));</desc>
<type>&amp;mixed</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;obj</parameter>
</methodparam>
<methodparam>
<type>mixed[]</type>
<parameter>args</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MethodNotImplementedException-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>MethodNotImplementedException</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>method</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MethodNotImplementedException-&gt;toString">
<sdesc>Get string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="MimeMessage-&gt;__construct">
<sdesc>Constructor. Also generates a boundary of the form</sdesc>
<desc>----=_Part_10424693873e22d20b43b490.00112051</desc>
<type>MimeMessage</type>
</methodsynopsis>
<methodsynopsis function="MimeMessage-&gt;addPart">
<sdesc>Add a Mime Part</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.mail.MimePart</type>
<parameter>1</parameter>
</methodparam>
<methodparam>
<type>&amp;peer.mail.MimePart</type>
<parameter>&amp;part</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MimeMessage-&gt;getBody">
<sdesc>Get message body.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="MimeMessage-&gt;getBoundary">
<sdesc>Get boundary</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="MimeMessage-&gt;getHeaderString">
<sdesc>Return headers as string</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="MimeMessage-&gt;getPart">
<sdesc>Get a part</sdesc>
<desc></desc>
<type>&amp;peer.mail.MimePart</type>
<methodparam>
<type>int</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MimeMessage-&gt;setBoundary">
<sdesc>Set boundary and updates Content-Type header. Note: A boundary is generated  upon instanciation, so this is usually not needed!</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>b</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>MimePart</type>
<methodparam>
<type>string</type>
<parameter>body</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>contenttype</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>encoding</parameter>
</methodparam>
<methodparam>
<type>name</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;generateContentId">
<sdesc>Generate a unique id for this mimepart.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;getBody">
<sdesc>Get part body.</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>decode</type>
<parameter>d</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;getContentId">
<sdesc>Retrieves the mimeparts content-id. If this mimepart  does not yet have a content-id, generateContentId() will  be used to create one.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;getContenttype">
<sdesc>Get part contenttype</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;getDisposition">
<sdesc>Get part disposition</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;getEncoding">
<sdesc>Get part encoding</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;getFilename">
<sdesc>Get part filename</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;getHeaderString">
<sdesc>Return headers as string</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;getName">
<sdesc>Get part name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;isAttachment">
<sdesc>Returns whether this part is an attachment</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;isInline">
<sdesc>Returns whether this part is an inline</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;setBody">
<sdesc>Set part body</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>1</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>body</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;setContentId">
<sdesc>Sets the content-id for this mimepart. The content-id  is used to reference this part within other mime-parts  and thus must be unique.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;setContenttype">
<sdesc>Set part contenttype</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>contenttype</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;setDisposition">
<sdesc>Set part disposition</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>disposition</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;setEncoding">
<sdesc>Set part encoding</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>encoding</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;setFilename">
<sdesc>Set part filename</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;setHeaderString">
<sdesc>Set headers from string</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MimePart-&gt;setName">
<sdesc>Set part name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MimeType-&gt;getByFilename">
<sdesc>Get mime type by filename (guess)</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MoneyFormat-&gt;apply">
<sdesc>Apply format to argument</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>fmt</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;argument</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MoneyFormat-&gt;getInstance">
<sdesc>Get an instance</sdesc>
<desc></desc>
<type>&amp;text.format.MoneyFormat</type>
</methodsynopsis>
<methodsynopsis function="MP3File-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>MP3File</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MP3File-&gt;getID3Tag">
<sdesc>Extract ID3 Tags</sdesc>
<desc></desc>
<type>&amp;util.mp3.ID3Tag</type>
<methodparam>
<type>int</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MultiPart-&gt;__construct">
<sdesc>Constructor. Also generates a boundary of the form</sdesc>
<desc>----=_Alternative_10424693873e22d20b43b490.00112051</desc>
<type>MultiPart</type>
<methodparam>
<type>&amp;peer.mail.MimePart*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MultiPart-&gt;addPart">
<sdesc>Add a Mime Part</sdesc>
<desc></desc>
<type>&amp;peer.mail.MimePart</type>
<methodparam>
<type>&amp;peer.mail.MimePart</type>
<parameter>&amp;part</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MultiPart-&gt;getBody">
<sdesc>Get message body.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="MultiPart-&gt;getBoundary">
<sdesc>Get Boundary</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="MultiPart-&gt;getPart">
<sdesc>Get a part</sdesc>
<desc></desc>
<type>&amp;peer.mail.MimePart</type>
<methodparam>
<type>int</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MultiPart-&gt;setBoundary">
<sdesc>Set boundary and updates Content-Type header. Note: A boundary is generated  upon instanciation, so this is usually not needed!</sdesc>
<desc>Also sets the charset to an empty string.</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>b</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MultiPart-&gt;setContenttype">
<sdesc>Sets content-type and updates the header. The boundary will be appended  to the content-type header.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>c</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLConnection-&gt;begin">
<sdesc>Begin a transaction</sdesc>
<desc></desc>
<type>&amp;rdbms.Transaction</type>
<methodparam>
<type>&amp;rdbms.Transaction</type>
<parameter>&amp;transaction</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLConnection-&gt;close">
<sdesc>Disconnect</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="MySQLConnection-&gt;commit">
<sdesc>Commit a transaction</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLConnection-&gt;connect">
<sdesc>Connect</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>bool</type>
<parameter>reconnect</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLConnection-&gt;delete">
<sdesc>Execute an update statement</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLConnection-&gt;identity">
<sdesc>Retrieve identity</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="MySQLConnection-&gt;insert">
<sdesc>Execute an insert statement</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>mixed</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLConnection-&gt;prepare">
<sdesc>Prepare an SQL statement</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLConnection-&gt;query">
<sdesc>Execute any statement</sdesc>
<desc></desc>
<type>&amp;rdbms.mysql.MySQLResultSet</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLConnection-&gt;rollback">
<sdesc>Rollback a transaction</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLConnection-&gt;select">
<sdesc>Execute a select statement and return all rows as an array</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLConnection-&gt;selectdb">
<sdesc>Select database</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>db</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLConnection-&gt;update">
<sdesc>Execute an update statement</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLConnection-&gt;_prepare">
<sdesc>Protected helper methid</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>array</type>
<parameter>args</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLDBAdapter-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>MySQLDBAdapter</type>
<methodparam>
<type>&amp;Object</type>
<parameter>&amp;conn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLDBAdapter-&gt;getDatabases">
<sdesc>Get databases</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="MySQLDBAdapter-&gt;getTable">
<sdesc>Get table by name</sdesc>
<desc></desc>
<type>rdbms.DBTable</type>
<methodparam>
<type>string</type>
<parameter>table</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLDBAdapter-&gt;getTables">
<sdesc>Get tables by database</sdesc>
<desc></desc>
<type>rdbms.DBTable[]</type>
<methodparam>
<type>string</type>
<parameter>database</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLResultSet-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>MySQLResultSet</type>
<methodparam>
<type>resource</type>
<parameter>result</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLResultSet-&gt;close">
<sdesc>Close resultset and free result memory</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="MySQLResultSet-&gt;next">
<sdesc>Iterator function. Returns a rowset if called without parameter,  the fields contents if a field is specified or FALSE to indicate  no more rows are available.</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>field</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="MySQLResultSet-&gt;seek">
<sdesc>Seek</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>offset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Newsgroup-&gt;getFirst">
<sdesc>Get First</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Newsgroup-&gt;getFlags">
<sdesc>Get Flags</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Newsgroup-&gt;getLast">
<sdesc>Get Last</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Newsgroup-&gt;getName">
<sdesc>Get Name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Newsgroup-&gt;setFirst">
<sdesc>Set First</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>first</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Newsgroup-&gt;setFlags">
<sdesc>Set Flags</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>flags</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Newsgroup-&gt;setLast">
<sdesc>Set Last</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>last</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Newsgroup-&gt;setName">
<sdesc>Set Name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NewsState-&gt;process">
<sdesc>Process this state.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;authenticate">
<sdesc>Authenticate</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;close">
<sdesc>Disconnect</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;connect">
<sdesc>Connect</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>float</type>
<parameter>auth</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;getArticle">
<sdesc>Get Article</sdesc>
<desc></desc>
<type>&amp;peer.news.Article</type>
<methodparam>
<type>mixed</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;getArticleList">
<sdesc>Get a list of all articles in a newsgroup</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;getBody">
<sdesc>Retrieve body of an article</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;getGroups">
<sdesc>Get groups</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;getHeaders">
<sdesc>Retrieve header of an article</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>mixed</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;getLastArticle">
<sdesc>Retrieve last article</sdesc>
<desc></desc>
<type>&amp;peer.news.Article</type>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;getNextArticle">
<sdesc>Retrieve next article</sdesc>
<desc></desc>
<type>&amp;peer.news.Article</type>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;getOverview">
<sdesc>Get a list of articles in a given range</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>string</type>
<parameter>range</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;getOverviewFormat">
<sdesc>Get format of xover command</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;getResponse">
<sdesc>Return current response</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;getStatus">
<sdesc>Return current statuscode</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;newGroups">
<sdesc>Get all groups which are newer  than the given date</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;newNews">
<sdesc>Get all articles which are newer  than the given date</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>&amp;utilDate</type>
<parameter>&amp;date</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>newsgroup</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;setGroup">
<sdesc>Select a group</sdesc>
<desc></desc>
<type>success</type>
<methodparam>
<type>string</type>
<parameter>group</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;setTrace">
<sdesc>Set a trace for debugging</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NntpConnection-&gt;_sendcmd">
<sdesc>Wrapper that sends a command to the remote host.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>mixed*</type>
<parameter>1</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NntpReply-&gt;isInformational">
<sdesc>Check if a status code is informational.</sdesc>
<desc>All codes beginning with 1 are  informational responses</desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>status</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NntpReply-&gt;isNegativePermanent">
<sdesc>Check if a status code is a negative  permanent.All codes beginning with 5 are  negative permanent responses</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>status</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NntpReply-&gt;isNegativeTransient">
<sdesc>Check if a status code is a negative  transient.All codes beginning with 4 are  negative transient responses</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>status</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NntpReply-&gt;isPositiveCompletion">
<sdesc>Check if a status code is a positive  completion.All codes beginning with 2 are  positive completion responses</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>status</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NntpReply-&gt;isPositiveIntermediate">
<sdesc>Check if a status code is a positive  intermediate.All codes beginning with 3 are  positive intermediate responses</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>status</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Node-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc>1        $n= &amp;new ('document');2        $n= &amp;new ('text', 'Hello World');3        $n= &amp;new ('article', '', array('id' =&gt; 42));</desc>
<type>Node</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>content</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>attribute</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Node-&gt;addChild">
<sdesc>Add a child node</sdesc>
<desc></desc>
<type>&amp;xml.Node</type>
<methodparam>
<type>&amp;xml.Node</type>
<parameter>&amp;child</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Node-&gt;fromArray">
<sdesc>Create a node from an array</sdesc>
<desc>Usage example:  1        $n= &amp;::($array, 'elements');</desc>
<type>&amp;xml.Node</type>
<methodparam>
<type>array</type>
<parameter>arr</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Node-&gt;fromObject">
<sdesc>Create a node from an object. Will use class name as node name  if the optional argument name is omitted.</sdesc>
<desc>Usage example:  1        $n= &amp;::($object);</desc>
<type>&amp;xml.Node</type>
<methodparam>
<type>object obj</type>
<parameter>obj</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Node-&gt;getAttribute">
<sdesc>Retrieve an attribute by its name</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Node-&gt;getContent">
<sdesc>Get content (all CDATA)</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Node-&gt;getName">
<sdesc>Get Name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Node-&gt;getSource">
<sdesc>Retrieve XML representation</sdesc>
<desc>Setting indent to 0 (INDENT_DEFAULT) yields this result:     &lt;item&gt;
     &lt;title&gt;Website created&lt;/title&gt;
     &lt;link/&gt;
     &lt;description&gt;The first version of the XP web site is online&lt;/description&gt;
     &lt;dc:date&gt;2002-12-27T13:10:00&lt;/dc:date&gt;
   &lt;/item&gt;Setting indent to 1 (INDENT_WRAPPED) yields this result:     &lt;item&gt;
     &lt;title&gt;
       Website created
     &lt;/title&gt;
     &lt;link/&gt;
     &lt;description&gt;
       The first version of the XP web site is online
     &lt;/description&gt;
     &lt;dc:date&gt;
       2002-12-27T13:10:00
     &lt;/dc:date&gt;
   &lt;/item&gt;Setting indent to 2 (INDENT_NONE) yields this result (wrapped for readability,  returned XML is on one line):     &lt;item&gt;&lt;title&gt;Website created&lt;/title&gt;&lt;link&gt;&lt;/link&gt;&lt;description&gt;The
   first version of the XP web site is online&lt;/description&gt;&lt;dc:date&gt;
   2002-12-27T13:10:00&lt;/dc:date&gt;&lt;/item&gt;</desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>indent</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>inset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Node-&gt;hasAttribute">
<sdesc>Checks whether a specific attribute is existant</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Node-&gt;setAttribute">
<sdesc>Set an attribute</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Node-&gt;setContent">
<sdesc>Set content</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>content</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Node-&gt;setName">
<sdesc>Set Name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Node-&gt;_recurse">
<sdesc>Recurse an array</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;xml.Node</type>
<parameter>&amp;e</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>a</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NscaClient-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>NscaClient</type>
<methodparam>
<type>string</type>
<parameter>host</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>version</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>cryptmethod</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NscaClient-&gt;close">
<sdesc>Closes the communication socket to the NSCA server</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="NscaClient-&gt;connect">
<sdesc>Connects to the NSCA server</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="NscaClient-&gt;encrypt">
<sdesc>Helper method which encrypts data</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NscaClient-&gt;getCryptmethod">
<sdesc>Get Cryptmethod</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="NscaClient-&gt;getVersion">
<sdesc>Get Version</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="NscaClient-&gt;send">
<sdesc>Send a NSCA message to the server</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;org.nagios.nsca.NscaMessage</type>
<parameter>&amp;message</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NscaClient-&gt;setCryptmethod">
<sdesc>Set Cryptmethod</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>cryptmethod</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NscaClient-&gt;setVersion">
<sdesc>Set Version</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NscaClient-&gt;toString">
<sdesc>Returns a string representation of this object</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="NscaMessage-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>NscaMessage</type>
<methodparam>
<type>string</type>
<parameter>host</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>service</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>status</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>information</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NscaMessage-&gt;getHost">
<sdesc>Get Host</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="NscaMessage-&gt;getInformation">
<sdesc>Get Information</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="NscaMessage-&gt;getService">
<sdesc>Get Service</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="NscaMessage-&gt;getStatus">
<sdesc>Get Status</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="NscaMessage-&gt;nameOfStatus">
<sdesc>Retrieve a status' name</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>status</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NscaMessage-&gt;setHost">
<sdesc>Set Host</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>host</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NscaMessage-&gt;setInformation">
<sdesc>Set Information</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>information</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NscaMessage-&gt;setService">
<sdesc>Set Service</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>service</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NscaMessage-&gt;setStatus">
<sdesc>Set Status</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>status</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NullStoreCache-&gt;get">
<sdesc>Get a value from cache by key</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NullStoreCache-&gt;has">
<sdesc>Check whether cache has a value by key</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NullStoreCache-&gt;put">
<sdesc>Insert into / update in cache</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;val</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NullStoreCache-&gt;remove">
<sdesc>Remove a key from cache</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NumberFormat-&gt;apply">
<sdesc>Apply format to argument</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>fmt</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;argument</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="NumberFormat-&gt;getInstance">
<sdesc>Get an instance</sdesc>
<desc></desc>
<type>&amp;text.format.NumberFormat</type>
</methodsynopsis>
<methodsynopsis function="NumericChecker-&gt;check">
<sdesc>Check a given value</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Object-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Object-&gt;equals">
<sdesc>Indicates whether some other object is &quot;equal to&quot; this one.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;cmp</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Object-&gt;getClass">
<sdesc>Returns the runtime class of an object.</sdesc>
<desc></desc>
<type>&amp;lang.XPClass</type>
</methodsynopsis>
<methodsynopsis function="Object-&gt;getClassName">
<sdesc>Returns the fully qualified class name for this class  (e.g. &quot;io.File&quot;)</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Object-&gt;hashCode">
<sdesc>Returns a hashcode for this object</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Object-&gt;toString">
<sdesc>Creates a string representation of this object. In general, the toString  method returns a string that &quot;textually represents&quot; this object. The result  should be a concise but informative representation that is easy for a  person to read. It is recommended that all subclasses override this method.</sdesc>
<desc>Per default, this method returns:  &lt;xmp&gt;    [fully-qualified-class-name]@[serialized-object]  &lt;/xmp&gt;Example:  &lt;xmp&gt;  lang.Object@class object {    var $__id = '0.06823200 1062749651';  }  &lt;/xmp&gt;</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Observable-&gt;addObserver">
<sdesc>Add an observer</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Observer</type>
<parameter>&amp;observer</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Observable-&gt;clearChanged">
<sdesc>Clears changed flag</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Observable-&gt;hasChanged">
<sdesc>Checks whether changed flag is set</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Observable-&gt;notifyObservers">
<sdesc>Notify observers</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Observable-&gt;setChanged">
<sdesc>Sets changed flag</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Observer-&gt;update">
<sdesc>Update method</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Observable</type>
<parameter>&amp;obs</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="OpaqueLockTocken-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>OpaqueLockTocken</type>
<methodparam>
<type>&amp;org.ietf.UUID</type>
<parameter>&amp;uuid</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="OpaqueLockTocken-&gt;fromString">
<sdesc>Create a LockTocken from a string</sdesc>
<desc></desc>
<type>&amp;util.webdav.LockTocken</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="OpaqueLockTocken-&gt;toString">
<sdesc>Create string representation</sdesc>
<desc>Examples:   opaquelocktoken:f54e9600-9600-154e-b88a-066e7c6b1eb3
 opaquelocktoken:faabe080-e080-1aab-a85d-066e72288282</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="OpenSslUtil-&gt;getConfiguration">
<sdesc>Get OpenSSL configuration file environment value</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="OpenSslUtil-&gt;getErrors">
<sdesc>Retrieve errors</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="OptionChecker-&gt;__construct">
<sdesc>Construct</sdesc>
<desc></desc>
<type>OptionChecker</type>
<methodparam>
<type>array</type>
<parameter>validOptions</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="OptionChecker-&gt;check">
<sdesc>Check a given value</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Outlook-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Outlook</type>
</methodsynopsis>
<methodsynopsis function="OutputDocument-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>OutputDocument</type>
</methodsynopsis>
<methodsynopsis function="OverviewState-&gt;process">
<sdesc>Process this state</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="P3PHeader-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>P3PHeader</type>
<methodparam>
<type>string</type>
<parameter>policyref</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="P3PHeader-&gt;getPolicyref">
<sdesc>Get Policyref</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="P3PHeader-&gt;getValueRepresentation">
<sdesc>Get header value representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="P3PHeader-&gt;setCompactAccess">
<sdesc>Set compact access. Information in the ACCESS element is  represented in compact policies using tokens composed  by a three letter code.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>access</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="P3PHeader-&gt;setCompactCategories">
<sdesc>Set compact categories. Categories are represented in compact  policies by a three letter code.</sdesc>
<desc>Note: If NULL is passed as value for categories, the CATEGORIES  element will be removed</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>categories</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="P3PHeader-&gt;setCompactDisputes">
<sdesc>Set compact disputes. If a full P3P policy contains a</sdesc>
<desc>DISPUTES-GROUP element that contains one or more DISPUTES  elements, then the server should signal the user agent by  providing a single &quot;DSP&quot; token in the P3P-compact policy  field.</desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>disputes</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="P3PHeader-&gt;setCompactNonIdentifiable">
<sdesc>Set compact non-identifiable. The presence of the NON-IDENTIFIABLE</sdesc>
<desc>element in every statement of the policy is signaled by the NID  token (note that the NID token MUST NOT be used unless the  NON-IDENTIFIABLE element is present in every statement within the  policy)</desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>non_identifiable</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="P3PHeader-&gt;setCompactPurpose">
<sdesc>Set compact purpose. Purposes are expressed in P3P compact policy</sdesc>
<desc>format using tokens composed by a three letter code plus an  optional one letter attribute. Such an optional attribute encodes  the value of the &quot;required&quot; attribute in full P3P policies:  its value can be &quot;a&quot;, &quot;i&quot; and &quot;o&quot;, which mean that the &quot;required&quot;  attribute in the corresponding P3P policy must be set to &quot;always&quot;,  &quot;opt-in&quot; and &quot;opt-out&quot; respectively.If a P3P compact policy needs to specify one or more other-purposes  in its full P3P policy, a single OTP flag is used to signal the user  agent that other-purposes exist in the full P3P policy.Note: If NULL is passed as value for purpose, the PURPOSE  element will be removed</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>purpose</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>creq</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="P3PHeader-&gt;setCompactRecipient">
<sdesc>Set compact recipient. Recipients are expressed in P3P compact</sdesc>
<desc>policy format using a three letter code plus an optional one  letter attribute. Such an optional attribute encodes the value  of the &quot;required&quot; attribute in full P3P policies: its value can  be &quot;a&quot;, &quot;i&quot; and &quot;o&quot;, which mean that the &quot;required&quot; attribute  in the corresponding P3P policy must be set to &quot;always&quot;,  &quot;opt-in&quot; and &quot;opt-out&quot; respectively.Note: If NULL is passed as value for recipient, the RECIPIENT  element will be removed</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>recipient</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>creq</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="P3PHeader-&gt;setCompactRemedies">
<sdesc>Set compact remedies. Information in the REMEDIES element is  represented in compact policies using tokens composed  by a three letter code.</sdesc>
<desc>Note: If NULL is passed as value for remedies, the REMEDIES  element will be removed</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>remedies</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="P3PHeader-&gt;setCompactRetention">
<sdesc>Set compact retention. Information in the RETENTION element  is represented in compact policies composed  by a three letter code.</sdesc>
<desc>Note: If NULL is passed as value for retention, the RETENTION  element will be removed</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>retention</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="P3PHeader-&gt;setCompactTest">
<sdesc>Set compact test. The presence of the TEST element is signaled  by the TST token.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>test</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="P3PHeader-&gt;setPolicyref">
<sdesc>Set Policyref</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>policyref</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PackageDocumentationState-&gt;process">
<sdesc>Process this state.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ParamCaster-&gt;castValue">
<sdesc>Cast a given value</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ParamChecker-&gt;check">
<sdesc>Check a given value</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Parameter-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Parameter</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Parameter-&gt;toString">
<sdesc>Creates a string representation of this image object</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ParamString-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>ParamString</type>
<methodparam>
<type>array</type>
<parameter>list</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ParamString-&gt;exists">
<sdesc>Checks whether a parameter is set</sdesc>
<desc></desc>
<type>boolean</type>
<methodparam>
<type>string</type>
<parameter>long</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>short</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ParamString-&gt;setParams">
<sdesc>Set the parameter string</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>array</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ParamString-&gt;value">
<sdesc>Retrieve the value of a given parameter</sdesc>
<desc>Examples:  1        $p= &amp;new ();2        if ($p-&gt;('help', '?')) {3          (&quot;Usage: %s %s --force-check [--pattern=&lt;pattern&gt;]\n&quot;, $p-&gt;(-1), $p-&gt;(0));4          exit(-2);5        }6     7        $force= $p-&gt;('force-check', 'f');8        $pattern= $p-&gt;('pattern', 'p', '.*');9     10</desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>long</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>short</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ParamStringTest-&gt;testLongFlag">
<sdesc>Test long option without value (&quot;flag&quot;)</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="ParamStringTest-&gt;testLongValue">
<sdesc>Test Long option with value</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="ParamStringTest-&gt;testShortFlag">
<sdesc>Test short option without value (&quot;flag&quot;)</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="ParamStringTest-&gt;testShortValue">
<sdesc>Test short option with value</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="ParserCallback-&gt;onCData">
<sdesc>Callback function for XMLParser</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>resource</type>
<parameter>parser</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>cdata</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ParserCallback-&gt;onDefault">
<sdesc>Callback function for XMLParser</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>resource</type>
<parameter>parser</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ParserCallback-&gt;onEndElement">
<sdesc>Callback function for XMLParser</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>resource</type>
<parameter>parser</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ParserCallback-&gt;onStartElement">
<sdesc>Callback function for XMLParser</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>resource</type>
<parameter>parser</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>attrs</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PCData-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>PCData</type>
<methodparam>
<type>string</type>
<parameter>pcdata</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Peer</type>
<methodparam>
<type>string</type>
<parameter>identifier</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;doDelete">
<sdesc>Delete this object from the database by specified criteria</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>&amp;rdbms.Criteria</type>
<parameter>&amp;criteria</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;doInsert">
<sdesc>Inserts this object into the database</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>array</type>
<parameter>values</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;doJoin">
<sdesc>Retrieve a number of objects from the database</sdesc>
<desc></desc>
<type>rdbms.DataSet[]</type>
<methodparam>
<type>&amp;rdbms.Peer</type>
<parameter>&amp;peer</parameter>
</methodparam>
<methodparam>
<type>&amp;rdbms.Criteria</type>
<parameter>&amp;join</parameter>
</methodparam>
<methodparam>
<type>&amp;rdbms.Criteria</type>
<parameter>&amp;criteria</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>max</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;doSelect">
<sdesc>Retrieve a number of objects from the database</sdesc>
<desc></desc>
<type>rdbms.DataSet[]</type>
<methodparam>
<type>&amp;rdbms.Criteria</type>
<parameter>&amp;criteria</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>max</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;doUpdate">
<sdesc>Update this object in the database by specified criteria</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>array</type>
<parameter>values</parameter>
</methodparam>
<methodparam>
<type>&amp;rdbms.Criteria</type>
<parameter>&amp;criteria</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;forInstance">
<sdesc>Retrieve an instance by a given instance</sdesc>
<desc></desc>
<type>&amp;rdbms.Peer</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;instance</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;forName">
<sdesc>Retrieve an instance by a given XP class name</sdesc>
<desc></desc>
<type>&amp;rdbms.Peer</type>
<methodparam>
<type>string</type>
<parameter>classname</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;getInstance">
<sdesc>Retrieve an instance by a given identifier</sdesc>
<desc></desc>
<type>&amp;rdbms.Peer</type>
<methodparam>
<type>string</type>
<parameter>identifier</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;iteratorFor">
<sdesc>Returns an iterator for a select statement</sdesc>
<desc></desc>
<type>&amp;rdbms.ResultIterator</type>
<methodparam>
<type>&amp;rdbms.Criteria</type>
<parameter>&amp;criteria</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;setConnection">
<sdesc>Set Connection</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>connection</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;setIdentifier">
<sdesc>Set Identifier</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>identifier</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;setIdentity">
<sdesc>Set Identity</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>identity</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;setPrimary">
<sdesc>Set Primary</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed[]</type>
<parameter>primary</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;setSequence">
<sdesc>Set Sequence</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>sequence</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;setTable">
<sdesc>Set Table</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>table</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;setTypes">
<sdesc>Set Types</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed[]</type>
<parameter>types</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Peer-&gt;toString">
<sdesc>Creates a string representation of this object</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Permission-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Permission</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Permission-&gt;getActions">
<sdesc>Get this permission's actions</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="Permission-&gt;getName">
<sdesc>Get this permission's name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Permission-&gt;toString">
<sdesc>Create a string representation</sdesc>
<desc>Examples:   permission io.FilePermission &quot;/foo/bar&quot;, &quot;read&quot;;
 permission io.FilePermission &quot;/baz/example&quot;, &quot;read,write&quot;;</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="PHPParser-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>PHPParser</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PHPParser-&gt;parse">
<sdesc>Parses the file.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="PHPParser-&gt;setTrace">
<sdesc>Sets a trace for debugging</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;log</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PHPSyntaxHighlighter-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>PHPSyntaxHighlighter</type>
<methodparam>
<type>mixed</type>
<parameter>input</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PHPSyntaxHighlighter-&gt;getHighlight">
<sdesc>Retrieve highlighted code. Will be XML-conform since &amp;nbsp;  is replaced by &amp;#160;. The deprecated -Tag is replaced  by</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="PHPSyntaxHighlighter-&gt;setCommentStyle">
<sdesc>Sets style for comments</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>style</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PHPSyntaxHighlighter-&gt;setDefaultStyle">
<sdesc>Sets default Style</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>style</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PHPSyntaxHighlighter-&gt;setFile">
<sdesc>Sets file to highlight</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PHPSyntaxHighlighter-&gt;setHtmlStyle">
<sdesc>Sets style for HTML</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>style</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PHPSyntaxHighlighter-&gt;setKeywordStyle">
<sdesc>Sets style for keywords</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>style</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PHPSyntaxHighlighter-&gt;setSource">
<sdesc>Sets sourcecode string to higlight. Will require the leading   at the end.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>source</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PHPSyntaxHighlighter-&gt;setStringStyle">
<sdesc>Sets style for strings</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>style</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PHPSyntaxHighlighter-&gt;setStyle">
<sdesc>Sets style for keywords  Keywords are: string, comment, keyword, default, html, variable</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>what</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>style</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PHPTokenizer-&gt;addRule">
<sdesc>Adds a rule which can be applied with applyRules()</sdesc>
<desc>When a list of matches has succeeded in applying, the defined callback  function is called with according parameters. Parameters may be any of  PHPs known datatypes in their notation or the special $X syntax:Consider the following parameters:  1        $name=     'function_with_comment';2        $match=    array('T_COMMENT', 'T_WHITESPACE', 'T_FUNCTION', 'T_WHITESPACE', 'T_STRING');3        $callback= 'setFunctionComment';4        $params=   array('$5', '$1', FALSE);In this example, setFunctionComment() is called with the functions name (the  5th token, counting from 1) as its first parameter, the comment as its second  and boolean FALSE as its third parameter</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>match</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>callback</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PHPTokenizer-&gt;applyRules">
<sdesc>Apply rules on all tokens</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>util.log.LogCategory</type>
<parameter>CAT</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PHPTokenizer-&gt;getFirstToken">
<sdesc>Get first token</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="PHPTokenizer-&gt;getNextToken">
<sdesc>Get next token</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="PHPTokenizer-&gt;getToken">
<sdesc>Return a token by position</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>int</type>
<parameter>i</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PHPTokenizer-&gt;getTokenName">
<sdesc>Gets a token's name</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>tok</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PHPTokenizer-&gt;setTokens">
<sdesc>Set tokens</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>array</type>
<parameter>tokens</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PHPTokenizer-&gt;setTokenString">
<sdesc>Set tokens</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PieChart-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>PieChart</type>
<methodparam>
<type>int</type>
<parameter>4</parameter>
</methodparam>
<methodparam>
<type>&amp;img.Color[]</type>
<parameter>data</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>perspective</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>shadow</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>fill</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PieChart-&gt;addSlice">
<sdesc>Add a pie slice to the data</sdesc>
<desc></desc>
<type>&amp;img.graph.PieSlice</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>&amp;img.graph.PieSlice</type>
<parameter>&amp;s</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PieChart-&gt;draw">
<sdesc>Draw function</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;resource</type>
<parameter>&amp;hdl</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>gw</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>gh</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PieSlice-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>PieSlice</type>
<methodparam>
<type>float</type>
<parameter>val</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;colors</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PngStreamReader-&gt;readFromStream">
<sdesc>Read an image</sdesc>
<desc></desc>
<type>resource</type>
</methodsynopsis>
<methodsynopsis function="PngStreamWriter-&gt;output">
<sdesc>Output an image</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>resource</type>
<parameter>handle</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Policy-&gt;addPermission">
<sdesc>Add a permission</sdesc>
<desc></desc>
<type>security.Permission</type>
<methodparam>
<type>&amp;security.Permission</type>
<parameter>&amp;p</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Policy-&gt;fromFile">
<sdesc>Create a policy from a file</sdesc>
<desc>1        ('security.Policy', 'io.File');2     3        try(); {4          $policy= &amp;::(new ('my.policy'));5        } if (catch('PolicyException', $e)) {6          $e-&gt;printStackTrace();7          exit();8        }9     10       echo $policy-&gt;();</desc>
<type>&amp;security.Policy</type>
<methodparam>
<type>&amp;io.Stream</type>
<parameter>&amp;stream</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Polygon-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Polygon</type>
<methodparam>
<type>&amp;img.Color</type>
<parameter>&amp;col</parameter>
</methodparam>
<methodparam>
<type>int[]</type>
<parameter>points</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>fill</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Polygon-&gt;draw">
<sdesc>Draw function</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;resource</type>
<parameter>&amp;hdl</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Pop3Store-&gt;_supports">
<sdesc>Protected method to check whether this DSN is supported</sdesc>
<desc>Supported notations:   - pop3://localhost
 - pop3://user:pass@localhost
 - pop3://user@localhost:111</desc>
<type>bool</type>
<methodparam>
<type>&amp;int</type>
<parameter>2</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>u</parameter>
</methodparam>
<methodparam>
<type>&amp;array</type>
<parameter>&amp;attr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PostgreSQLConnection-&gt;begin">
<sdesc>Begin a transaction</sdesc>
<desc></desc>
<type>&amp;rdbms.Transaction</type>
<methodparam>
<type>&amp;rdbms.Transaction</type>
<parameter>&amp;transaction</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PostgreSQLConnection-&gt;close">
<sdesc>Disconnect</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="PostgreSQLConnection-&gt;commit">
<sdesc>Commit a transaction</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PostgreSQLConnection-&gt;connect">
<sdesc>Connect</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>bool</type>
<parameter>reconnect</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PostgreSQLConnection-&gt;delete">
<sdesc>Execute an update statement</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PostgreSQLConnection-&gt;identity">
<sdesc>Retrieve identity</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="PostgreSQLConnection-&gt;insert">
<sdesc>Execute an insert statement</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>mixed</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PostgreSQLConnection-&gt;prepare">
<sdesc>Prepare an SQL statement</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PostgreSQLConnection-&gt;query">
<sdesc>Execute any statement</sdesc>
<desc></desc>
<type>&amp;rdbms.pgsql.PostgreSQLResultSet</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PostgreSQLConnection-&gt;rollback">
<sdesc>Rollback a transaction</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PostgreSQLConnection-&gt;select">
<sdesc>Execute a select statement and return all rows as an array</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PostgreSQLConnection-&gt;selectdb">
<sdesc>Select database</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>db</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PostgreSQLConnection-&gt;transtate">
<sdesc>Retrieve transaction state</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PostgreSQLConnection-&gt;update">
<sdesc>Execute an update statement</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PostgreSQLConnection-&gt;_prepare">
<sdesc>Protected helper methid</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>array</type>
<parameter>args</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PostgreSQLResultSet-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>PostgreSQLResultSet</type>
<methodparam>
<type>resource</type>
<parameter>result</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PostgreSQLResultSet-&gt;close">
<sdesc>Close resultset and free result memory</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="PostgreSQLResultSet-&gt;next">
<sdesc>Iterator function. Returns a rowset if called without parameter,  the fields contents if a field is specified or FALSE to indicate  no more rows are available.</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>field</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PostgreSQLResultSet-&gt;seek">
<sdesc>Seek</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>offset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PreforkingServer-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>PreforkingServer</type>
<methodparam>
<type>string</type>
<parameter>addr</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>count</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>maxrequests</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PreforkingServer-&gt;handleSignal">
<sdesc>Signal handler</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>sig</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PreforkingServer-&gt;service">
<sdesc>Service</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="PreforkingServer-&gt;setTrace">
<sdesc>Set a trace for debugging</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PrerequisitesNotMetError-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>PrerequisitesNotMetError</type>
<methodparam>
<type>string</type>
<parameter>3</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>&amp;lang.Exception</type>
<parameter>&amp;cause</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>prerequisites</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PrerequisitesNotMetError-&gt;getStackTrace">
<sdesc>Get Trace</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Principal-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Principal</type>
<methodparam>
<type>array</type>
<parameter>dn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Principal-&gt;getCommonName">
<sdesc>Get common name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Principal-&gt;getCountryName">
<sdesc>Get country name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Principal-&gt;getEmailAddress">
<sdesc>Get email address</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Principal-&gt;getLocalityName">
<sdesc>Get locality name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Principal-&gt;getName">
<sdesc>Get name</sdesc>
<desc>Example:   /C=DE/ST=Germany/L=Karlsruhe/O=Foo/OU=Bar/CN=Foo, Baz Bar/EMAIL=mail@example.com</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Principal-&gt;getOrganizationalUnitName">
<sdesc>Get organizational unit name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Principal-&gt;getOrganizationName">
<sdesc>Get organization name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Principal-&gt;getStateOrProvinceName">
<sdesc>Get state or province name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="PrintfFormat-&gt;apply">
<sdesc>Apply format to argument</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>fmt</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;argument</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PrintfFormat-&gt;getInstance">
<sdesc>Get an instance</sdesc>
<desc></desc>
<type>&amp;text.format.PrintfFormat</type>
</methodsynopsis>
<methodsynopsis function="Process-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Process</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>mixed*</type>
<parameter>1</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Process-&gt;close">
<sdesc>Close this process</sdesc>
<desc></desc>
<type>exit</type>
</methodsynopsis>
<methodsynopsis function="Process-&gt;exitValue">
<sdesc>Returns the exit value for the process</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Process-&gt;getErrorStream">
<sdesc>Get error stream</sdesc>
<desc></desc>
<type>&amp;io.File</type>
</methodsynopsis>
<methodsynopsis function="Process-&gt;getInputStream">
<sdesc>Get input stream</sdesc>
<desc></desc>
<type>&amp;io.File</type>
</methodsynopsis>
<methodsynopsis function="Process-&gt;getOutputStream">
<sdesc>Get output stream</sdesc>
<desc></desc>
<type>&amp;io.File</type>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Properties</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;create">
<sdesc>Create the property file</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;exists">
<sdesc>Returns whether the property file exists</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;fromFile">
<sdesc>Create a property file from an io.File object</sdesc>
<desc></desc>
<type>&amp;util.Properties</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;fromString">
<sdesc>Create a property file from a string</sdesc>
<desc></desc>
<type>&amp;util.Properties</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;getFilename">
<sdesc>Retrieves the file name containing the properties</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;getFirstSection">
<sdesc>Get the first configuration section</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;getNextSection">
<sdesc>Get the next configuration section</sdesc>
<desc>Example:  1        if ($section= $prop-&gt;()) do {2          ($section, $prop-&gt;($section));3        } while ($section= $prop-&gt;());</desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;hasSection">
<sdesc>Returns whether a section exists</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;readArray">
<sdesc>Read a value as array</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>string</type>
<parameter>section</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>default</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;readBool">
<sdesc>Read a value as boolean</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>section</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;readFloat">
<sdesc>Read a value as float</sdesc>
<desc></desc>
<type>float</type>
<methodparam>
<type>string</type>
<parameter>section</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>float</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;readHash">
<sdesc>Read a value as hash</sdesc>
<desc></desc>
<type>&amp;util.Hashmap</type>
<methodparam>
<type>string</type>
<parameter>section</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>default</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;readInteger">
<sdesc>Read a value as integer</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>string</type>
<parameter>section</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>default</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;readRange">
<sdesc>Read a value as range</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>string</type>
<parameter>section</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>default</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;readSection">
<sdesc>Read an entire section into an array</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>default</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;readString">
<sdesc>Read a value as string</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>section</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>default</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;reset">
<sdesc>Reload all data from the file</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;save">
<sdesc>Save properties to the file</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;writeArray">
<sdesc>Add an array string (and the section, if necessary)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>section</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;writeBool">
<sdesc>Add a boolean (and the section, if necessary)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>section</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;writeComment">
<sdesc>Add a comment (and the section, if necessary)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>2</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>section</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>comment</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;writeFloat">
<sdesc>Add a float (and the section, if necessary)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>section</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>float</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;writeHash">
<sdesc>Add a hashmap (and the section, if necessary)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>section</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;writeInteger">
<sdesc>Add a string (and the section, if necessary)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>section</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;writeSection">
<sdesc>Add a section</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>overwrite</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Properties-&gt;writeString">
<sdesc>Add a string (and the section, if necessary)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>section</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PropertyManager-&gt;configure">
<sdesc>Configure this property manager</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>path</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PropertyManager-&gt;getInstance">
<sdesc>Retrieve this property manager's instance</sdesc>
<desc></desc>
<type>&amp;util.PropertyManager</type>
</methodsynopsis>
<methodsynopsis function="PropertyManager-&gt;getProperties">
<sdesc>Return properties by name</sdesc>
<desc></desc>
<type>&amp;util.Properties</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PropertyStorageProvider-&gt;getLock">
<sdesc>Retrieve lock for specific URI</sdesc>
<desc></desc>
<type>&amp;org.webdav.WebdavLock</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PropertyStorageProvider-&gt;getProperties">
<sdesc>Read all properties for specific uri</sdesc>
<desc></desc>
<type>org.webdav.WebdavProperty[]</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PropertyStorageProvider-&gt;getProperty">
<sdesc>Retrieve property for specific URI</sdesc>
<desc></desc>
<type>&amp;org.webdav.WebdavProperty</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PropertyStorageProvider-&gt;hasProperty">
<sdesc>Check if property is available</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PropertyStorageProvider-&gt;removeLock">
<sdesc>Removes a lock for specific URI</sdesc>
<desc></desc>
<type>&amp;org.webdav.WebdavLock</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PropertyStorageProvider-&gt;setLock">
<sdesc>Sets a lock for a specific URI</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.WebdavLock</type>
<parameter>&amp;property</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PropertyStorageProvider-&gt;setProperties">
<sdesc>Set all properties for specific uri</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
<methodparam>
<type>org.webdav.WebdavProperty[]</type>
<parameter>properties</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PropertyStorageProvider-&gt;setProperty">
<sdesc>Sets a property for a specific URI</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.WebdavProperty</type>
<parameter>&amp;property</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PServerClient-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>PServerClient</type>
<methodparam>
<type>string</type>
<parameter>host</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PServerClient-&gt;close">
<sdesc>Close connection</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="PServerClient-&gt;connect">
<sdesc>Connect to CVS pserver</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="PServerClient-&gt;login">
<sdesc>Authenticate ourselves</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>cvsroot</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>user</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>pass</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PServerClient-&gt;negotiate">
<sdesc>Negotiate</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="PServerClient-&gt;setTrace">
<sdesc>Set a trace for debugging</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PServerClient-&gt;version">
<sdesc>Return the version of CVS running as server.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="PServerClient-&gt;_readline">
<sdesc>Wrapper that reads a line and checks for expected output</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>expect</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PServerClient-&gt;_sendcmd">
<sdesc>Wrapper that sends a command to the remote host.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>mixed*</type>
<parameter>1</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PunyCode-&gt;decode">
<sdesc>Decode Punycode string and return TRUE on success.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>input</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>&amp;result</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>&amp;flags</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PunyCode-&gt;decodeString">
<sdesc>Decode Punycode string and return TRUE on success.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PunyCode-&gt;encode">
<sdesc>Encode ASCII string to Punycode string and return TRUE on success.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>input</parameter>
</methodparam>
<methodparam>
<type>stirng</type>
<parameter>&amp;result</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>flags</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PunyCode-&gt;encodeString">
<sdesc>Encode ASCII string to Punycode string and return TRUE on success.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PunyCode-&gt;_decode_digit">
<sdesc>Original comment from author:  decode_digit(cp) returns the numeric value of a basic code  point (for use in representing integers) in the range 0 to  base-1, or base if cp is does not represent a value.</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>cp</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PunyCode-&gt;_encode_basic">
<sdesc>Encoding digits.</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>bcp</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>flag</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="PunyCode-&gt;_encode_digit">
<sdesc>Does the following character mapping:     0..25 map to ASCII a..z or A..Z    26..35 map to ASCII 0..9</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>d</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>flag</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="QName-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>QName</type>
<methodparam>
<type>string</type>
<parameter>namespace</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>localpart</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="QName-&gt;toString">
<sdesc>Returns a string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Queue-&gt;elementAt">
<sdesc>Retrieves an element by its index.</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>int</type>
<parameter>index</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Queue-&gt;get">
<sdesc>Gets an item from the front of the queue.</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
</methodsynopsis>
<methodsynopsis function="Queue-&gt;isEmpty">
<sdesc>Returns true if the queue is empty. This is effectively the same  as testing size() for 0.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Queue-&gt;peek">
<sdesc>Peeks at the front of the queue (retrieves the first element  without removing it).</sdesc>
<desc>Returns NULL in case the queue is empty.</desc>
<type>&amp;lang.Object</type>
</methodsynopsis>
<methodsynopsis function="Queue-&gt;put">
<sdesc>Puts an item into the queue. Returns the element that was added.</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;object</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Queue-&gt;remove">
<sdesc>Remove an object from the queue. Returns TRUE in case the element  was deleted, FALSE otherwise.</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
</methodsynopsis>
<methodsynopsis function="Queue-&gt;search">
<sdesc>Sees if an object is in the queue and returns its position.</sdesc>
<desc>Returns -1 if the object is not found.</desc>
<type>int</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;object</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Queue-&gt;size">
<sdesc>Returns the size of the queue.</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="QuotedPrintable-&gt;decode">
<sdesc>Decode QuotedPrintable encoded data</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="QuotedPrintable-&gt;encode">
<sdesc>Encode string</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>charset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="QuotedPrintable-&gt;getCharsToEncode">
<sdesc>Get ASCII values of characters that need to be encoded</sdesc>
<desc>Note: According to RFC 2045, the &quot;@&quot; need not be escaped  Exim has its problems though if an &quot;@&quot; sign appears in an  name (even if it's encoded), such as:=?iso-8859-1?Q?Timm@Home?= &lt;timm@example.com&gt;This is why &quot;64&quot; is added to the first array in this function.</desc>
<type>int[]</type>
</methodsynopsis>
<methodsynopsis function="RandomCodeGenerator-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>RandomCodeGenerator</type>
<methodparam>
<type>int</type>
<parameter>length</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RandomCodeGenerator-&gt;generate">
<sdesc>Generate</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="RDFNewsFeed-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>RDFNewsFeed</type>
</methodsynopsis>
<methodsynopsis function="RDFNewsFeed-&gt;addItem">
<sdesc>Adds an item</sdesc>
<desc></desc>
<type>object the</type>
<methodparam>
<type>string</type>
<parameter>title</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>link</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>description</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RDFNewsFeed-&gt;fromFile">
<sdesc>Create a RDF from a file</sdesc>
<desc></desc>
<type>&amp;xml.rdf.RDFNewsfeed</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RDFNewsFeed-&gt;fromString">
<sdesc>Create a RDF from a string</sdesc>
<desc></desc>
<type>&amp;xml.rdf.RDFNewsfeed</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RDFNewsFeed-&gt;onEndElement">
<sdesc>Callback for XML parser</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="RDFNewsFeed-&gt;onStartElement">
<sdesc>Callback for XML parser</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="RDFNewsFeed-&gt;setChannel">
<sdesc>Sets the channel element</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>title</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>link</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>description</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>date</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>language</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>creator</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>publisher</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>rights</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RDFNewsFeed-&gt;setImage">
<sdesc>Set the channel image</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>title</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>url</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>link</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ReadLine-&gt;addHistory">
<sdesc>Add an item to the history</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>l</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ReadLine-&gt;clearHistory">
<sdesc>Clear the history</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="ReadLine-&gt;getHistory">
<sdesc>Retrieve the history</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="ReadLine-&gt;getVar">
<sdesc>Get an internal readline variable</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>const</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ReadLine-&gt;readHistoryFile">
<sdesc>Load readline history from a file</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ReadLine-&gt;readLn">
<sdesc>Read a line</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>prompt</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>add</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ReadLine-&gt;setCompleter">
<sdesc>Defines a completer</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;org.gnu.readline.ReadLineCompleter</type>
<parameter>&amp;completer</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ReadLine-&gt;writeHistoryFile">
<sdesc>Save readline history to a file</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Rectangle-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Rectangle</type>
<methodparam>
<type>&amp;img.Color</type>
<parameter>&amp;col</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>x1</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>y1</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>x2</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>y2</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>fill</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Rectangle-&gt;draw">
<sdesc>Draw function</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;resource</type>
<parameter>&amp;hdl</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Reference-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Reference</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Reference-&gt;fromString">
<sdesc>Parses a reference from a string</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Reference-&gt;getValidSchemes">
<sdesc>Retrieve valid schemes</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="Reference-&gt;registerScheme">
<sdesc>Register scheme</sdesc>
<desc></desc>
<type>string[]</type>
<methodparam>
<type>string</type>
<parameter>scheme</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RegexpChecker-&gt;__construct">
<sdesc>Construct</sdesc>
<desc></desc>
<type>RegexpChecker</type>
<methodparam>
<type>string</type>
<parameter>pattern</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RegexpChecker-&gt;check">
<sdesc>Check a given value</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Registry-&gt;contains">
<sdesc>Return whether a given key exists</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Registry-&gt;get">
<sdesc>Retrieve a value by a given key</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Registry-&gt;getInstance">
<sdesc>Get registry instance by name. The name corresponds to the name that  was used for the setup() method.</sdesc>
<desc></desc>
<type>&amp;util.registry.Registry</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Registry-&gt;keys">
<sdesc>Return all registered keys</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="Registry-&gt;put">
<sdesc>Insert or update a key/value-pair</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>permissions</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Registry-&gt;remove">
<sdesc>Remove a value by a given key</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Registry-&gt;setup">
<sdesc>Setup this registry. You may call this method more than once to add  different storages.</sdesc>
<desc>For example, you may have a temporary storage that will simply go  to shared memory, whereas (for assured persistance) you want to  write another storage to the filesystem (or even a database). To  put this in code:1        ::('temp', new ());2        ::('persistent', new ());</desc>
<type>&amp;util.registry.Registry</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>&amp;util.registry.RegistryStorageProvider</type>
<parameter>&amp;storage</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RegistryKey-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>RegistryKey</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RegistryKey-&gt;delete">
<sdesc>Deletes this key</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="RegistryKey-&gt;exists">
<sdesc>Checks whether this key exists</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="RegistryKey-&gt;getName">
<sdesc>Get this key's name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="RegistryKey-&gt;getValue">
<sdesc>Read this key's value</sdesc>
<desc></desc>
<type>&amp;mixed</type>
</methodsynopsis>
<methodsynopsis function="RegistryKey-&gt;setValue">
<sdesc>Set this key's value. Creates the key if necessary.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>val</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RegistryStorageProvider-&gt;contains">
<sdesc>Returns whether this storage contains the given key</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RegistryStorageProvider-&gt;free">
<sdesc>Remove all keys</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="RegistryStorageProvider-&gt;get">
<sdesc>Get a key by it's name</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RegistryStorageProvider-&gt;initialize">
<sdesc>Initialize this storage</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RegistryStorageProvider-&gt;keys">
<sdesc>Get all keys</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="RegistryStorageProvider-&gt;put">
<sdesc>Insert/update a key</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>permissions</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RegistryStorageProvider-&gt;remove">
<sdesc>Remove a key</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RequestData-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>RequestData</type>
<methodparam>
<type>string</type>
<parameter>buf</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RequestData-&gt;getData">
<sdesc>Retrieve data</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ResourcesState-&gt;process">
<sdesc>Process this state.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;getCachedSize">
<sdesc>Retrieves cachedSize</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;getDirectoryCategory">
<sdesc>Retrieves directoryCategory</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;getDirectoryTitle">
<sdesc>Retrieves directoryTitle</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;getHostName">
<sdesc>Retrieves hostName</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;getRelatedInformationPresent">
<sdesc>Retrieves relatedInformationPresent</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;getSnippet">
<sdesc>Retrieves snippet</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;getSummary">
<sdesc>Retrieves summary</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;getTitle">
<sdesc>Retrieves title</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;getURL">
<sdesc>Retrieves URL</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;setCachedSize">
<sdesc>Sets cachedSize</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>cachedSize</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;setDirectoryCategory">
<sdesc>Sets directoryCategory</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>directoryCategory</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;setDirectoryTitle">
<sdesc>Sets directoryTitle</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>directoryTitle</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;setHostName">
<sdesc>Sets hostName</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>hostName</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;setRelatedInformationPresent">
<sdesc>Sets relatedInformationPresent</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>relatedInformationPresent</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;setSnippet">
<sdesc>Sets snippet</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>snippet</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;setSummary">
<sdesc>Sets summary</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>summary</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;setTitle">
<sdesc>Sets title</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>title</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ResultElement-&gt;setURL">
<sdesc>Sets URL</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>URL</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ResultIterator-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>ResultIterator</type>
<methodparam>
<type>&amp;rdbms.ResultSet</type>
<parameter>&amp;rs</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>identifier</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ResultIterator-&gt;hasNext">
<sdesc>Returns true if the iteration has more elements. (In other words,  returns true if next would return an element rather than throwing  an exception.)</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="ResultIterator-&gt;next">
<sdesc>Returns the next element in the iteration.</sdesc>
<desc></desc>
<type>&amp;rdbms.DataSet</type>
</methodsynopsis>
<methodsynopsis function="ResultSet-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>ResultSet</type>
<methodparam>
<type>resource</type>
<parameter>handle</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>fields</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ResultSet-&gt;close">
<sdesc>Close resultset and free result memory</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="ResultSet-&gt;next">
<sdesc>Iterator function. Returns a rowset if called without parameter,  the fields contents if a field is specified or FALSE to indicate  no more rows are available.</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>field</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ResultSet-&gt;seek">
<sdesc>Seek to a specified position within the resultset</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>offset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIConnectionListener-&gt;connected">
<sdesc>Method to be triggered when a client connects</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIConnectionListener-&gt;data">
<sdesc>Method to be triggered when a client has sent data</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIConnectionListener-&gt;disconnected">
<sdesc>Method to be triggered when a client disconnects</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIConnectionListener-&gt;error">
<sdesc>Method to be triggered when a communication error occurs</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIConnectionListener-&gt;setTrace">
<sdesc>Set a logcategory for tracing</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIConnector-&gt;getValue">
<sdesc>Get a value by its name</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>&amp;rmi.RMIObject</type>
<parameter>&amp;object</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIConnector-&gt;invokeMethod">
<sdesc>Invoke a method</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>&amp;rmi.RMIObject</type>
<parameter>&amp;object</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>&amp;array</type>
<parameter>&amp;args</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIConnector-&gt;setValue">
<sdesc>Set a value by its name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;rmi.RMIObject</type>
<parameter>&amp;object</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIObject-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>RMIObject</type>
<methodparam>
<type>&amp;rmi.RMIConnector</type>
<parameter>&amp;connector</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIObject-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="RMIObject-&gt;__call">
<sdesc>Method call interceptor</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>&amp;array</type>
<parameter>&amp;args</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;return</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIObject-&gt;__get">
<sdesc>Member variable getter interceptor</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIObject-&gt;__set">
<sdesc>Member variable setter interceptor</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIRegistry-&gt;finalize">
<sdesc>Finalize this registry (clear up all memory)</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="RMIRegistry-&gt;get">
<sdesc>Get an RMI server object by its name</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIRegistry-&gt;getInstance">
<sdesc>Get registry instance</sdesc>
<desc></desc>
<type>&amp;rmi.RMIRegistry</type>
</methodsynopsis>
<methodsynopsis function="RMIRegistry-&gt;register">
<sdesc>Register an RMI server object</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;object</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIRegistry-&gt;setup">
<sdesc>Set up storage</sdesc>
<desc></desc>
<type>&amp;rmi.RMIRegistry</type>
<methodparam>
<type>&amp;util.registry.storage.RegistryStorage</type>
<parameter>&amp;storage</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIRegistry-&gt;update">
<sdesc>Update the RMI server object</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;object</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIServer-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>RMIServer</type>
<methodparam>
<type>string</type>
<parameter>host</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIServer-&gt;setTrace">
<sdesc>Set a logcategory for tracing</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="RMIServerException-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>RMIServerException</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>&amp;lang.Exception</type>
<parameter>&amp;cause</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Round2BaseClient-&gt;echoBase64">
<sdesc>echoBase64</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="Round2BaseClient-&gt;echoBoolean">
<sdesc>echoBoolean</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="Round2BaseClient-&gt;echoDate">
<sdesc>echoDate</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="Round2BaseClient-&gt;echoDecimal">
<sdesc>echoDecimal</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="Round2BaseClient-&gt;echoFloat">
<sdesc>echoFloat</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="Round2BaseClient-&gt;echoFloatArray">
<sdesc>echoFloatArray</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="Round2BaseClient-&gt;echoHexBinary">
<sdesc>echoHexBinary</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="Round2BaseClient-&gt;echoInteger">
<sdesc>echoInteger</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="Round2BaseClient-&gt;echoIntegerArray">
<sdesc>echoIntegerArray</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="Round2BaseClient-&gt;echoString">
<sdesc>echoString</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="Round2BaseClient-&gt;echoStringArray">
<sdesc>echoStringArray</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="Round2BaseClient-&gt;echoStruct">
<sdesc>echoStruct</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="Round2BaseClient-&gt;echoStructArray">
<sdesc>echoStructArray</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="Round2BaseClient-&gt;echoVoid">
<sdesc>echoVoid</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="Round2BaseClient-&gt;identity">
<sdesc>Invoke given method with given argument and  check whether the result matches the argument.</sdesc>
<desc></desc>
<type>boolean</type>
<methodparam>
<type>string</type>
<parameter>method</parameter>
</methodparam>
<methodparam>
<type>&amp;xml.soap.Parameter</type>
<parameter>&amp;argument</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Round2BaseClient-&gt;setInputOutputTrace">
<sdesc>Sets the trace category for input/output trace.</sdesc>
<desc>This trace can be used to track what arguments  a function has been called and what the deserialized  result was.</desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Round2Handler-&gt;echoBase64">
<sdesc>Echoes a base64 string</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>inputBase64</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Round2Handler-&gt;echoBoolean">
<sdesc>Echoes a boolean</sdesc>
<desc></desc>
<type>boolean</type>
<methodparam>
<type>boolean</type>
<parameter>inputBoolean</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Round2Handler-&gt;echoDate">
<sdesc>Echoes a date.</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>inputDate</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Round2Handler-&gt;echoDecimal">
<sdesc>Echoes a decimal.</sdesc>
<desc></desc>
<type>float</type>
<methodparam>
<type>float</type>
<parameter>inputDecimal</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Round2Handler-&gt;echoFloat">
<sdesc>Echoes a float</sdesc>
<desc></desc>
<type>float</type>
<methodparam>
<type>float</type>
<parameter>inputFloat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Round2Handler-&gt;echoFloatArray">
<sdesc>Echoes an array of floats</sdesc>
<desc></desc>
<type>float[]</type>
<methodparam>
<type>float[]</type>
<parameter>inputFloatArray</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Round2Handler-&gt;echoHexBinary">
<sdesc>Echoes a hexbinary.</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>inputHexBinary</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Round2Handler-&gt;echoInteger">
<sdesc>Echoes an integer</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>inputInteger</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Round2Handler-&gt;echoIntegerArray">
<sdesc>Echoes an array of integers</sdesc>
<desc></desc>
<type>int[]</type>
<methodparam>
<type>int[]</type>
<parameter>inputIntegerArray</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Round2Handler-&gt;echoString">
<sdesc>Echoes a given string.</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>inputString</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Round2Handler-&gt;echoStringArray">
<sdesc>Echoes a given string array.</sdesc>
<desc></desc>
<type>string[]</type>
<methodparam>
<type>string[]</type>
<parameter>inputStringArray</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Round2Handler-&gt;echoStruct">
<sdesc>Echoes a struct.</sdesc>
<desc></desc>
<type>mixed[]</type>
<methodparam>
<type>mixed[]</type>
<parameter>inputStruct</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Round2Handler-&gt;echoStructArray">
<sdesc>Echoes an array of structs</sdesc>
<desc></desc>
<type>mixed[]</type>
<methodparam>
<type>mixed[]</type>
<parameter>inputStructArray</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Round2Handler-&gt;echoVoid">
<sdesc>Echoes a void.</sdesc>
<desc></desc>
<type>NULL</type>
</methodsynopsis>
<methodsynopsis function="Routine-&gt;getArguments">
<sdesc>Retrieve this method's arguments</sdesc>
<desc></desc>
<type>lang.reflect.Argument[]</type>
</methodsynopsis>
<methodsynopsis function="Routine-&gt;getComment">
<sdesc>Retrieves the api doc comment for this method. Returns NULL if  no documentation is present.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Routine-&gt;getDeclaringClass">
<sdesc>Returns the XPClass object representing the class or interface  that declares the method represented by this Method object.</sdesc>
<desc></desc>
<type>&amp;lang.XPClass</type>
</methodsynopsis>
<methodsynopsis function="Routine-&gt;getExceptionNames">
<sdesc>Retrieve exception names</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="Routine-&gt;getExceptionTypes">
<sdesc>Retrieve exception types</sdesc>
<desc></desc>
<type>lang.XPClass[]</type>
</methodsynopsis>
<methodsynopsis function="Routine-&gt;getModifierNames">
<sdesc>Retrieve this method's modifiers as an array of strings</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="Routine-&gt;getModifiers">
<sdesc>Retrieve this method's modifiers</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Routine-&gt;getName">
<sdesc>Get Name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Routine-&gt;getReturnType">
<sdesc>Retrieve return type</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Routine-&gt;toString">
<sdesc>Retrieve string representation. Examples:</sdesc>
<desc>public &amp;lang.XPClass getclass()
   public static &amp;util.Date now()
   public open(string $mode) throws io.FileNotFoundException, io.IOException</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Routine-&gt;_apidoc">
<sdesc>Retrieve API docs for a specified class. Note: Results from this  method are cached!</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>string</type>
<parameter>class</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="scriptlet·runner-&gt;run">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="SapiParser-&gt;parse">
<sdesc>Parse</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>util.log.LogCategory</type>
<parameter>cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SapiParser-&gt;setClassComment">
<sdesc>Callback function for the &quot;class comment&quot; (this is the comment  right above the class declaration)</sdesc>
<desc>Example:     // {{{ final class sapi·cli</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>class</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>extends</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>definition</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SapiParser-&gt;setDefine">
<sdesc>Callback function for defines</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>const</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>val</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SapiParser-&gt;setFileComment">
<sdesc>Callback function for the &quot;file comment&quot; (this is the comment at  the top of the file)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SapiParser-&gt;setFunctionComment">
<sdesc>Callback function for &quot;function comments&quot; (these are the comments  above a function declaration)</sdesc>
<desc>Example:     // {{{ internal string output(string buf)
   //     Output handlerThe first line contains the function definition, the second line  the documentation.</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>function</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>definition</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>description</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>returnsReference</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SearchableStream-&gt;findNext">
<sdesc>Returns the offset of the searched string within the stream  or FALSE if the string was not found.</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>string</type>
<parameter>substring</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SearchableStream-&gt;getNextComplexToken">
<sdesc>Tokenizes a string by a complex delimiter (multiple characters).</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SearchableStream-&gt;getNextToken">
<sdesc>Tokenizes the stream and moves the offset behind  the given token. The delimiter itself is returned  as part of the token</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>lim</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Semaphore-&gt;acquire">
<sdesc>Acquire a semaphore - blocks (if necessary) until the semaphore can be acquired.</sdesc>
<desc>A process attempting to acquire a semaphore which it has already acquired will  block forever if acquiring the semaphore would cause its max_acquire value to  be exceeded.</desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Semaphore-&gt;get">
<sdesc>Get a semaphore</sdesc>
<desc>Note: A second call to this function with the same key will actually return  the same semaphore</desc>
<type>&amp;io.sys.Semaphore</type>
<methodparam>
<type>int</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>maxAquire</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>permissions</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Semaphore-&gt;release">
<sdesc>Release a semaphore  After releasing the semaphore, acquire() may be called to re-acquire it.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Semaphore-&gt;remove">
<sdesc>Remove a semaphore  After removing the semaphore, it is no more accessible.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Server-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Server</type>
<methodparam>
<type>string</type>
<parameter>addr</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Server-&gt;addListener">
<sdesc>Add a connection listener</sdesc>
<desc></desc>
<type>&amp;peer.server.ConnectionListener</type>
<methodparam>
<type>&amp;peer.server.ConnectionListener</type>
<parameter>&amp;listener</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Server-&gt;init">
<sdesc>Initialize the server</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Server-&gt;notify">
<sdesc>Notify listeners</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.server.ConnectionEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Server-&gt;service">
<sdesc>Service</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Server-&gt;shutdown">
<sdesc>Shutdown the server</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="ServerSocket-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>ServerSocket</type>
<methodparam>
<type>string</type>
<parameter>host</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>domain</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>type</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>protocol</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ServerSocket-&gt;accept">
<sdesc>Accept connection</sdesc>
<desc>&lt;quote&gt;  This function will accept incoming connections on that socket. Once a  successful connection is made, a new socket object is returned, which  may be used for communication. If there are multiple connections queued  on the socket, the first will be used. If there are no pending connections,  socket_accept() will block until a connection becomes present.  &lt;/quote&gt;Note: If this socket has been made non-blocking, FALSE will be returned.</desc>
<type>&amp;mixed</type>
</methodsynopsis>
<methodsynopsis function="ServerSocket-&gt;bind">
<sdesc>Bind</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="ServerSocket-&gt;connect">
<sdesc>Connect</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="ServerSocket-&gt;create">
<sdesc>Create</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="ServerSocket-&gt;listen">
<sdesc>Listen on this socket</sdesc>
<desc>&lt;quote&gt;  A maximum of backlog incoming connections will be queued for processing.  If a connection request arrives with the queue full the client may receive an  error with an indication of ECONNREFUSED, or, if the underlying protocol  supports retransmission, the request may be ignored so that retries may  succeed.  &lt;/quote&gt;</desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>backlog</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="sapi·soap·service-&gt;fault">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="sapi·soap·service-&gt;output">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getAccept_passive_checks">
<sdesc>Retrieves accept_passive_checks</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getByHostService">
<sdesc>Gets an instance of this object by hostname and service</sdesc>
<desc></desc>
<type>&amp;Servicestatus[]</type>
<methodparam>
<type>string</type>
<parameter>host_name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>service</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getByHost_name">
<sdesc>Gets an instance of this object by hostname</sdesc>
<desc></desc>
<type>&amp;Servicestatus[]</type>
<methodparam>
<type>string</type>
<parameter>host_name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getByNotOk">
<sdesc>Gets an instance of this object with service status of not OK</sdesc>
<desc></desc>
<type>&amp;Servicestatus[]</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getByService_status">
<sdesc>Gets an instance of this object by service status</sdesc>
<desc></desc>
<type>&amp;Servicestatus[]</type>
<methodparam>
<type>string</type>
<parameter>service_status</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getChecks_enabled">
<sdesc>Retrieves checks_enabled</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getCheck_type">
<sdesc>Retrieves check_type</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getCurrent_attempt">
<sdesc>Retrieves current_attempt</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getCurrent_notification">
<sdesc>Retrieves current_notification</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getEvent_handler_enabled">
<sdesc>Retrieves event_handler_enabled</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getExecution_time">
<sdesc>Retrieves execution_time</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getFailure_prediction_enabled">
<sdesc>Retrieves failure_prediction_enabled</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getFlap_detection_enabled">
<sdesc>Retrieves flap_detection_enabled</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getHost_name">
<sdesc>Retrieves host_name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getIs_flapping">
<sdesc>Retrieves is_flapping</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getLast_check">
<sdesc>Retrieves last_check</sdesc>
<desc></desc>
<type>util.Date</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getLast_hard_state">
<sdesc>Retrieves last_hard_state</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getLast_notification">
<sdesc>Retrieves last_notification</sdesc>
<desc></desc>
<type>util.Date</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getLast_state_change">
<sdesc>Retrieves last_state_change</sdesc>
<desc></desc>
<type>util.Date</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getLast_update">
<sdesc>Retrieves last_update</sdesc>
<desc></desc>
<type>util.Date</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getLatency">
<sdesc>Retrieves latency</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getMax_attempts">
<sdesc>Retrieves max_attempts</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getNext_check">
<sdesc>Retrieves next_check</sdesc>
<desc></desc>
<type>util.Date</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getNotifications_enabled">
<sdesc>Retrieves notifications_enabled</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getObsess_over_service">
<sdesc>Retrieves obsess_over_service</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getPercent_state_change">
<sdesc>Retrieves percent_state_change</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getPlugin_output">
<sdesc>Retrieves plugin_output</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getProblem_acknowledged">
<sdesc>Retrieves problem_acknowledged</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getProcess_performance_data">
<sdesc>Retrieves process_performance_data</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getScheduled_downtime_depth">
<sdesc>Retrieves scheduled_downtime_depth</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getService_description">
<sdesc>Retrieves service_description</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getService_status">
<sdesc>Retrieves service_status</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getShould_be_scheduled">
<sdesc>Retrieves should_be_scheduled</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getState_type">
<sdesc>Retrieves state_type</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getTime_critical">
<sdesc>Retrieves time_critical</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getTime_ok">
<sdesc>Retrieves time_ok</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getTime_unknown">
<sdesc>Retrieves time_unknown</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;getTime_warning">
<sdesc>Retrieves time_warning</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;insert">
<sdesc>Write this object to the database</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setAccept_passive_checks">
<sdesc>Sets accept_passive_checks</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>accept_passive_checks</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setChecks_enabled">
<sdesc>Sets checks_enabled</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>checks_enabled</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setCheck_type">
<sdesc>Sets check_type</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>check_type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setCurrent_attempt">
<sdesc>Sets current_attempt</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>current_attempt</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setCurrent_notification">
<sdesc>Sets current_notification</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>current_notification</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setEvent_handler_enabled">
<sdesc>Sets event_handler_enabled</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>event_handler_enabled</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setExecution_time">
<sdesc>Sets execution_time</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>execution_time</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setFailure_prediction_enabled">
<sdesc>Sets failure_prediction_enabled</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>failure_prediction_enabled</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setFlap_detection_enabled">
<sdesc>Sets flap_detection_enabled</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>flap_detection_enabled</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setHost_name">
<sdesc>Sets host_name</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>host_name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setIs_flapping">
<sdesc>Sets is_flapping</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>is_flapping</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setLast_check">
<sdesc>Sets last_check</sdesc>
<desc></desc>
<type>util.Date</type>
<methodparam>
<type>util.Date</type>
<parameter>last_check</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setLast_hard_state">
<sdesc>Sets last_hard_state</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>last_hard_state</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setLast_notification">
<sdesc>Sets last_notification</sdesc>
<desc></desc>
<type>util.Date</type>
<methodparam>
<type>util.Date</type>
<parameter>last_notification</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setLast_state_change">
<sdesc>Sets last_state_change</sdesc>
<desc></desc>
<type>util.Date</type>
<methodparam>
<type>util.Date</type>
<parameter>last_state_change</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setLast_update">
<sdesc>Sets last_update</sdesc>
<desc></desc>
<type>util.Date</type>
<methodparam>
<type>util.Date</type>
<parameter>last_update</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setLatency">
<sdesc>Sets latency</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>latency</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setMax_attempts">
<sdesc>Sets max_attempts</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>max_attempts</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setNext_check">
<sdesc>Sets next_check</sdesc>
<desc></desc>
<type>util.Date</type>
<methodparam>
<type>util.Date</type>
<parameter>next_check</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setNotifications_enabled">
<sdesc>Sets notifications_enabled</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>notifications_enabled</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setObsess_over_service">
<sdesc>Sets obsess_over_service</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>obsess_over_service</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setPercent_state_change">
<sdesc>Sets percent_state_change</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>percent_state_change</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setPlugin_output">
<sdesc>Sets plugin_output</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>plugin_output</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setProblem_acknowledged">
<sdesc>Sets problem_acknowledged</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>problem_acknowledged</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setProcess_performance_data">
<sdesc>Sets process_performance_data</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>process_performance_data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setScheduled_downtime_depth">
<sdesc>Sets scheduled_downtime_depth</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>scheduled_downtime_depth</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setService_description">
<sdesc>Sets service_description</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>service_description</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setService_status">
<sdesc>Sets service_status</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>service_status</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setShould_be_scheduled">
<sdesc>Sets should_be_scheduled</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>should_be_scheduled</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setState_type">
<sdesc>Sets state_type</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>state_type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setTime_critical">
<sdesc>Sets time_critical</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>time_critical</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setTime_ok">
<sdesc>Sets time_ok</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>time_ok</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setTime_unknown">
<sdesc>Sets time_unknown</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>time_unknown</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;setTime_warning">
<sdesc>Sets time_warning</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>time_warning</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Servicestatus-&gt;update">
<sdesc>Update this object in the database</sdesc>
<desc></desc>
<type>boolean</type>
</methodsynopsis>
<methodsynopsis function="SessionSemaphore-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SessionSemaphore</type>
<methodparam>
<type>&amp;scriptlet.HttpSession</type>
<parameter>&amp;storage</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SessionSemaphore-&gt;getCreatedAt">
<sdesc>Retrieve the creation time of the semaphore  as UNIX-timestamp</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="SessionSemaphore-&gt;lock">
<sdesc>Set the semaphore to lock.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="SessionSemaphore-&gt;unlock">
<sdesc>Remove the semaphore to unlock.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="SHA1-&gt;fromFile">
<sdesc>Create a new checksum from a file object</sdesc>
<desc></desc>
<type>&amp;security.checksum.SHA1</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SHA1-&gt;fromString">
<sdesc>Create a new checksum from a string</sdesc>
<desc></desc>
<type>&amp;security.checksum.SHA1</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SharedMemoryStorage-&gt;contains">
<sdesc>Returns whether this storage contains the given key</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SharedMemoryStorage-&gt;free">
<sdesc>Remove all keys</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="SharedMemoryStorage-&gt;get">
<sdesc>Get a key by it's name</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SharedMemoryStorage-&gt;initialize">
<sdesc>Initialize this storage</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SharedMemoryStorage-&gt;keys">
<sdesc>Get all keys</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="SharedMemoryStorage-&gt;put">
<sdesc>Insert/update a key</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>permissions</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SharedMemoryStorage-&gt;remove">
<sdesc>Remove a key</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ShmSegment-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>ShmSegment</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ShmSegment-&gt;get">
<sdesc>Get this segment's contents</sdesc>
<desc></desc>
<type>&amp;mixed</type>
</methodsynopsis>
<methodsynopsis function="ShmSegment-&gt;isEmpty">
<sdesc>Returns whether this segment is empty (i.e., has not been written or was  previously removed)</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="ShmSegment-&gt;put">
<sdesc>Put this segment's contents</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;val</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>permissions</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ShmSegment-&gt;remove">
<sdesc>Remove this segment's contents</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SieveClient</type>
<methodparam>
<type>string</type>
<parameter>host</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;activateScript">
<sdesc>Set a specific script as the active one on the server</sdesc>
<desc>A user may have multiple Sieve scripts on the server, yet only one  script may be used for filtering of incoming messages. This is the  active script. Users may have zero or one active scripts and MUST  use the SETACTIVE command described below for changing the active  script or disabling Sieve processing. For example, a user may have  an everyday script they normally use and a special script they use  when they go on vacation. Users can change which script is being  used without having to download and upload a script stored somewhere  else.If the script name is the empty string (i.e. &quot;&quot;) then any active  script is disabled.</desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;authenticate">
<sdesc>Authenticate</sdesc>
<desc>Supported methods:  PLAINLOGINDIGEST-MD5CRAM-MD5</desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>method</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>user</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>pass</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>auth</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;close">
<sdesc>Close connection</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;connect">
<sdesc>Connect to sieve server</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;deleteScript">
<sdesc>Delete a script from the server</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;getAuthenticationMethods">
<sdesc>Retrieve possible authentication methods. Return value is an  array of supported methods reported by the server consisting  of the SIEVE_SASL_* constants.</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;getImplementation">
<sdesc>Return server implementation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;getScript">
<sdesc>Retrieve a script by its name</sdesc>
<desc></desc>
<type>&amp;peer.sieve.SieveScript</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;getScriptNames">
<sdesc>Retrieve a list of scripts names.</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;getScripts">
<sdesc>Retrieve a list of scripts stored on the server</sdesc>
<desc></desc>
<type>peer.sieve.SieveScript[]</type>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;getSupportedModules">
<sdesc>Retrieve supported modules. Return value is an array of modules  reported by the server consisting of the SIEVE_MOD_* constants.</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;hasAuthenticationMethod">
<sdesc>Checks whether a specied authentication is available.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>method</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;hasSpaceFor">
<sdesc>Check whether there is enough space for a script to be uploaded</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.sieve.SieveScript</type>
<parameter>&amp;script</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;putScript">
<sdesc>Upload a script to the server</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.sieve.SieveScript</type>
<parameter>&amp;script</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;setTrace">
<sdesc>Set a trace for debugging</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;supportsModule">
<sdesc>Check whether a specified module is supported</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>module</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;_response">
<sdesc>Wrapper that reads the response from the remote host, returning  it into an array if not specified otherwise.</sdesc>
<desc>Stops reading at one of the terminals &quot;OK&quot;, &quot;NO&quot; or &quot;BYE&quot;.</desc>
<type>string[]</type>
<methodparam>
<type>bool</type>
<parameter>discard</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SieveClient-&gt;_sendcmd">
<sdesc>Wrapper that sends a command to the remote host.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>mixed*</type>
<parameter>1</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SieveScript-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SieveScript</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>code</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SieveScript-&gt;getCode">
<sdesc>Get Code</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SieveScript-&gt;getLength">
<sdesc>Get length of code</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="SieveScript-&gt;getName">
<sdesc>Get Name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SieveScript-&gt;isActive">
<sdesc>Get Active</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="SieveScript-&gt;setActive">
<sdesc>Set Active</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>active</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SieveScript-&gt;setCode">
<sdesc>Set Code</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>code</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SieveScript-&gt;setName">
<sdesc>Set Name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SingleProcess-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SingleProcess</type>
<methodparam>
<type>string</type>
<parameter>lockFileName</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SingleProcess-&gt;lock">
<sdesc>Lock this application</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="SingleProcess-&gt;unlock">
<sdesc>Unlock the application</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="SmtpAppender-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SmtpAppender</type>
<methodparam>
<type>string</type>
<parameter>email</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>prefix</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>sync</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SmtpAppender-&gt;append">
<sdesc>Sends log data to the specified email address</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SmtpAppender-&gt;finalize">
<sdesc>Finalize this appender - is called when the logger shuts down  at the end of the request.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="SmtpTransport-&gt;close">
<sdesc>Close connection</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="SmtpTransport-&gt;connect">
<sdesc>Connect to this transport</sdesc>
<desc>DSN parameter examples:     smtp://localhost
   smtp://localhost:2525
   esmtp://user:pass@smtp.example.com:25/?auth=plain
   esmtp://user:pass@smtp.example.com:25/?auth=login</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>dsn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SmtpTransport-&gt;send">
<sdesc>Send a message</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;peer.mail.Message</type>
<parameter>&amp;message</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SmtpTransport-&gt;_hello">
<sdesc>Say hello (HELO or EHLO, dependant on SMTP variant)</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="SmtpTransport-&gt;_login">
<sdesc>Log in using AUTH PLAIN or AUTH LOGIN</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="SOAPBase64Binary-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SOAPBase64Binary</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>encoded</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPBase64Binary-&gt;equals">
<sdesc>Indicates whether the compared binary equals this one.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;xml.soap.types.SOAPBase64Binary</type>
<parameter>&amp;cmp</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPBase64Binary-&gt;getType">
<sdesc>Returns this type's name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPBase64Binary-&gt;toString">
<sdesc>Return a string representation for use in SOAP</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPClient-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SOAPClient</type>
<methodparam>
<type>&amp;xml.soap.transport.SOAPTransport</type>
<parameter>&amp;transport</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>action</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>targetNamespace</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPClient-&gt;invoke">
<sdesc>Invoke method call</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>1</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPClient-&gt;registerMapping">
<sdesc>Register mapping for a qname to a class object</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;xml.QName</type>
<parameter>&amp;qname</parameter>
</methodparam>
<methodparam>
<type>&amp;lang.XPClass</type>
<parameter>&amp;class</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPClient-&gt;setTargetNamespace">
<sdesc>Set TargetNamespace</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>targetNamespace</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPClient-&gt;setTrace">
<sdesc>Set trace for debugging</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPDateTime-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SOAPDateTime</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPDateTime-&gt;getType">
<sdesc>Returns this type's name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPDateTime-&gt;toString">
<sdesc>Return a string representation for use in SOAP</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPFault-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SOAPFault</type>
<methodparam>
<type>string</type>
<parameter>faultcode</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>faultstring</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>faultactor</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>detail</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPFault-&gt;getDetail">
<sdesc>Get Detail</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="SOAPFault-&gt;getFaultactor">
<sdesc>Get Faultactor</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPFault-&gt;getFaultcode">
<sdesc>Get Faultcode</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPFault-&gt;getFaultstring">
<sdesc>Get Faultstring</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPFault-&gt;setDetail">
<sdesc>Set Detail</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>detail</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPFault-&gt;setFaultactor">
<sdesc>Set Faultactor</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>faultactor</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPFault-&gt;setFaultcode">
<sdesc>Set Faultcode</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>faultcode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPFault-&gt;setFaultstring">
<sdesc>Set Faultstring</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>faultstring</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPFaultException-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SOAPFaultException</type>
<methodparam>
<type>&amp;xml.soap.SOAPFault</type>
<parameter>&amp;fault</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPFaultException-&gt;getFault">
<sdesc>Get Fault</sdesc>
<desc></desc>
<type>&amp;xml.soap.SOAPFault</type>
</methodsynopsis>
<methodsynopsis function="SOAPFaultException-&gt;toString">
<sdesc>Return a string representation of this exception</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPHashMap-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SOAPHashMap</type>
<methodparam>
<type>array</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPHashMap-&gt;getType">
<sdesc>Returns this type's name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPHashMap-&gt;toString">
<sdesc>Return a string representation for use in SOAP</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="SOAPHexBinary-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SOAPHexBinary</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>encoded</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPHexBinary-&gt;equals">
<sdesc>Indicates whether the compared binary equals this one.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;xml.soap.types.SOAPHexBinary</type>
<parameter>&amp;cmp</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPHexBinary-&gt;getType">
<sdesc>Returns this type's name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPHexBinary-&gt;toString">
<sdesc>Return a string representation for use in SOAP</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPHTTPTransport-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SOAPHTTPTransport</type>
<methodparam>
<type>string</type>
<parameter>url</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>actiontype</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPHTTPTransport-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="SOAPHTTPTransport-&gt;getTimeout">
<sdesc>Retrieve the current timeout setting.</sdesc>
<desc>Note: this is the read-timeout.</desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="SOAPHTTPTransport-&gt;retrieve">
<sdesc>Retrieve the answer</sdesc>
<desc></desc>
<type>&amp;xml.soap.SOAPMessage</type>
</methodsynopsis>
<methodsynopsis function="SOAPHTTPTransport-&gt;send">
<sdesc>Send the message</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;xml.soap.SOAPMessage</type>
<parameter>&amp;message</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPHTTPTransport-&gt;setTimeout">
<sdesc>Set the timeout for the request.</sdesc>
<desc>Note: this is the read-timeout.</desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>timeout</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPHTTPTransport-&gt;toString">
<sdesc>Create a string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPLong-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SOAPLong</type>
<methodparam>
<type>int</type>
<parameter>long</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPLong-&gt;getType">
<sdesc>Returns this type's name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPLong-&gt;toString">
<sdesc>Return a string representation for use in SOAP</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPMessage-&gt;create">
<sdesc>Create a message</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>action</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>method</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>targetNamespace</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPMessage-&gt;fromFile">
<sdesc>Construct a SOAP message from a file</sdesc>
<desc>1        $msg= &amp;::(new ('foo.soap.xml');</desc>
<type>&amp;xml.Tree</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPMessage-&gt;fromString">
<sdesc>Construct a SOAP message from a string</sdesc>
<desc>1        $msg= &amp;::('&lt;SOAP-ENV:Envelope&gt;...&lt;/SOAP-ENV:Envelope&gt;');</desc>
<type>&amp;xml.Tree</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPMessage-&gt;getData">
<sdesc>Get data</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>string</type>
<parameter>context</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>mapping</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPMessage-&gt;getFault">
<sdesc>Get fault</sdesc>
<desc></desc>
<type>&amp;xml.soap.SOAPFault</type>
</methodsynopsis>
<methodsynopsis function="SOAPMessage-&gt;setData">
<sdesc>Set data</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>array</type>
<parameter>arr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPMessage-&gt;setFault">
<sdesc>Set fault</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>faultcode</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>faultstring</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>faultactor</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>detail</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPMessage-&gt;_bodyElement">
<sdesc>Retrieve body element</sdesc>
<desc></desc>
<type>&amp;xml.SOAPNode</type>
</methodsynopsis>
<methodsynopsis function="SOAPNamedItem-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SOAPNamedItem</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>val</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPNamedItem-&gt;getItemName">
<sdesc>Returns this type's name or FALSE if there's no  special name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPNamedItem-&gt;getType">
<sdesc>Returns this type's name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPNamedItem-&gt;toString">
<sdesc>Return a string representation for use in SOAP</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="SOAPNode-&gt;fromArray">
<sdesc>Create a node from an array</sdesc>
<desc>Usage example:  1        $n= &amp;::($array, 'elements');</desc>
<type>&amp;xml.Node</type>
<methodparam>
<type>array</type>
<parameter>arr</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPNode-&gt;fromObject">
<sdesc>Create a node from an object. Will use class name as node name  if the optional argument name is omitted.</sdesc>
<desc>Usage example:  1        $n= &amp;::($object);</desc>
<type>&amp;xml.Node</type>
<methodparam>
<type>object obj</type>
<parameter>obj</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPNode-&gt;getContent">
<sdesc>Get content in iso-8859-1 encoding (the default).</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>string</type>
<parameter>encoding</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;namespaces</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPNode-&gt;_recurse">
<sdesc>Recurse an array</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;xml.Node</type>
<parameter>&amp;e</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>a</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SoapRpcRequest-&gt;getMessage">
<sdesc>Retrieve SOAP message from request</sdesc>
<desc></desc>
<type>&amp;xml.soap.SOAPMessage</type>
</methodsynopsis>
<methodsynopsis function="SoapRpcResponse-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SoapRpcResponse</type>
</methodsynopsis>
<methodsynopsis function="SoapRpcResponse-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="SoapRpcResponse-&gt;process">
<sdesc>Make sure a fault is passed as &quot;500 Internal Server Error&quot;</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="SoapRpcResponse-&gt;setMessage">
<sdesc>Sets SOAP message</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;xml.soap.SOAPMessage</type>
<parameter>&amp;msg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SoapRpcRouter-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SoapRpcRouter</type>
<methodparam>
<type>string</type>
<parameter>&amp;classloader</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SoapRpcRouter-&gt;callReflectHandler">
<sdesc>Calls the handler that the action reflects to</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>&amp;xml.soap.SOAPMessage</type>
<parameter>&amp;msg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SoapRpcRouter-&gt;doGet">
<sdesc>Handle GET requests. Since SOAP over HTTP is defined via  HTTP POST, throw an exception. We could also provide a usage  example, but this may be going too far.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;xml.soap.rpc.SoapRpcRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;xml.soap.rpc.SoapRpcResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SoapRpcRouter-&gt;doPost">
<sdesc>Handle POST requests. The complete POST data consits</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;xml.soap.rpc.SoapRpcRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;xml.soap.rpc.SoapRpcResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SoapRpcRouter-&gt;_request">
<sdesc>Create a request object.</sdesc>
<desc></desc>
<type>&amp;xml.soap.rpc.SoapRpcRequest</type>
</methodsynopsis>
<methodsynopsis function="SoapRpcRouter-&gt;_response">
<sdesc>Create a response object. Override this method to define  your own response object</sdesc>
<desc></desc>
<type>&amp;xml.soap.rpc.SoapRpcResponse</type>
</methodsynopsis>
<methodsynopsis function="SoapTest-&gt;testSerialization">
<sdesc>Test serializatio</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="SOAPTransport-&gt;retrieve">
<sdesc>Retrieve the answer</sdesc>
<desc></desc>
<type>&amp;xml.soap.SOAPMessage</type>
</methodsynopsis>
<methodsynopsis function="SOAPTransport-&gt;send">
<sdesc>Send the message</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;xml.soap.SOAPMessage</type>
<parameter>&amp;message</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPTransport-&gt;setTrace">
<sdesc>Set trace for debugging</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SoapType-&gt;getItemName">
<sdesc>Returns this type's name or FALSE if there's no  special name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SoapType-&gt;getType">
<sdesc>Returns this type's name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SoapType-&gt;toString">
<sdesc>Return a string representation for use in SOAP</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPVector-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SOAPVector</type>
<methodparam>
<type>array</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SOAPVector-&gt;getType">
<sdesc>Returns this type's name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SOAPVector-&gt;toString">
<sdesc>Return a string representation for use in SOAP</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="Socket-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc>Note: When specifying a numerical IPv6 address (e.g. fe80::1)  as value for the parameter &quot;host&quot;, you must enclose the IP in  square brackets.</desc>
<type>Socket</type>
<methodparam>
<type>string</type>
<parameter>host</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
<methodparam>
<type>resource</type>
<parameter>socket</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Socket-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Socket-&gt;canRead">
<sdesc>Returns whether there is data that can be read</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>float</type>
<parameter>timeout</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Socket-&gt;close">
<sdesc>Close socket</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Socket-&gt;connect">
<sdesc>Connect</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>float</type>
<parameter>timeout</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Socket-&gt;eof">
<sdesc>Checks if EOF was reached</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Socket-&gt;getLastError">
<sdesc>Get last error. A very inaccurate way of going about error messages since  any PHP error/warning is returned - but since there's no function like  flasterror() we must rely on this</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Socket-&gt;getTimeout">
<sdesc>Get timeout</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="Socket-&gt;isConnected">
<sdesc>Returns whether a connection has been established</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Socket-&gt;read">
<sdesc>Read data from a socket</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>maxLen</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Socket-&gt;readBinary">
<sdesc>Read data from a socket (binary-safe)</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>maxLen</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Socket-&gt;readLine">
<sdesc>Read line from a socket</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>maxLen</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Socket-&gt;setBlocking">
<sdesc>Set socket blocking</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>bool</type>
<parameter>blockMode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Socket-&gt;setTimeout">
<sdesc>Set timeout</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>timeout</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Socket-&gt;write">
<sdesc>Write a string to the socket</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SocketRMIConnector-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SocketRMIConnector</type>
<methodparam>
<type>&amp;peer.Socket</type>
<parameter>&amp;socket</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SocketRMIConnector-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="SocketRMIConnector-&gt;comm">
<sdesc>Communication helper method</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>string</type>
<parameter>identifier</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SocketRMIConnector-&gt;getValue">
<sdesc>Get a value by its name</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>&amp;rmi.RMIObject</type>
<parameter>&amp;object</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SocketRMIConnector-&gt;invokeMethod">
<sdesc>Invoke a method</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>&amp;rmi.RMIObject</type>
<parameter>&amp;object</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>&amp;array</type>
<parameter>&amp;args</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SocketRMIConnector-&gt;setValue">
<sdesc>Set a value by its name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;rmi.RMIObject</type>
<parameter>&amp;object</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SpoolDirectory-&gt;__construct">
<sdesc>Creates a spooldirectory object</sdesc>
<desc></desc>
<type>SpoolDirectory</type>
<methodparam>
<type>string</type>
<parameter>root</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SpoolDirectory-&gt;createSpoolEntry">
<sdesc>Creates a new spool entry. The abstract is used to name the  file in a way that associates it with its content (e.g. a  unique id). If the abstract is omitted, a id  generator will be used.</sdesc>
<desc></desc>
<type>io.File</type>
<methodparam>
<type>string</type>
<parameter>abstract</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SpoolDirectory-&gt;enqueueSpoolEntry">
<sdesc>Enqueues the spoolentry into the todo-queue.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>io.File</type>
<parameter>&amp;f</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SpoolDirectory-&gt;failSpoolEntry">
<sdesc>Mark the given spool entry as failed.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>io.File</type>
<parameter>&amp;f</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SpoolDirectory-&gt;finishSpoolEntry">
<sdesc>Mark the given spool entry as done.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>io.File</type>
<parameter>&amp;f</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SpoolDirectory-&gt;getNextSpoolEntry">
<sdesc>Retrieves the next spool entry.</sdesc>
<desc></desc>
<type>io.File</type>
</methodsynopsis>
<methodsynopsis function="SpoolDirectory-&gt;open">
<sdesc>Opens all neccessary directorys and creates them if nonexistant</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="SQLConnectException-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SQLConnectException</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>&amp;rdbms.DSN</type>
<parameter>&amp;dsn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLConnectException-&gt;getDsn">
<sdesc>Get DSN used for connect</sdesc>
<desc></desc>
<type>&amp;rdbms.DSN</type>
</methodsynopsis>
<methodsynopsis function="SQLConnectException-&gt;toString">
<sdesc>Retrieve string representation of the stack trace</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SQLiteConnection-&gt;begin">
<sdesc>Begin a transaction</sdesc>
<desc></desc>
<type>&amp;rdbms.Transaction</type>
<methodparam>
<type>&amp;rdbms.Transaction</type>
<parameter>transaction</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLiteConnection-&gt;close">
<sdesc>Disconnect</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="SQLiteConnection-&gt;commit">
<sdesc>Commit a transaction</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLiteConnection-&gt;connect">
<sdesc>Connect</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>bool</type>
<parameter>reconnect</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLiteConnection-&gt;delete">
<sdesc>Execute an update statement</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLiteConnection-&gt;identity">
<sdesc>Retrieve identity</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="SQLiteConnection-&gt;insert">
<sdesc>Execute an insert statement</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>mixed</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLiteConnection-&gt;prepare">
<sdesc>Prepare an SQL statement</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLiteConnection-&gt;query">
<sdesc>Execute any statement</sdesc>
<desc></desc>
<type>&amp;rdbms.mysql.MySQLResultSet</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLiteConnection-&gt;rollback">
<sdesc>Rollback a transaction</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLiteConnection-&gt;select">
<sdesc>Execute a select statement and return all rows as an array</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLiteConnection-&gt;selectdb">
<sdesc>Select database</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>db</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLiteConnection-&gt;transtate">
<sdesc>Retrieve transaction state</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLiteConnection-&gt;update">
<sdesc>Execute an update statement</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLiteConnection-&gt;_cast">
<sdesc>Callback function to cast data</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>mixed</type>
<parameter>s</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLiteConnection-&gt;_prepare">
<sdesc>Protected helper methid</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>array</type>
<parameter>args</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLiteResultSet-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SQLiteResultSet</type>
<methodparam>
<type>resource</type>
<parameter>result</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLiteResultSet-&gt;close">
<sdesc>Close resultset and free result memory</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="SQLiteResultSet-&gt;next">
<sdesc>Iterator function. Returns a rowset if called without parameter,  the fields contents if a field is specified or FALSE to indicate  no more rows are available.</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>field</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLiteResultSet-&gt;seek">
<sdesc>Seek</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>offset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLStatementFailedException-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SQLStatementFailedException</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>sql</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>errorcode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SQLStatementFailedException-&gt;getErrorcode">
<sdesc>Get errorcode</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="SQLStatementFailedException-&gt;getSql">
<sdesc>Get SQL</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SQLStatementFailedException-&gt;toString">
<sdesc>Retrieve string representation of the stack trace</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SSLSocket-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SSLSocket</type>
<methodparam>
<type>string</type>
<parameter>host</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
<methodparam>
<type>resource</type>
<parameter>socket</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Stack-&gt;elementAt">
<sdesc>Retrieves an element by its index.</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>int</type>
<parameter>index</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Stack-&gt;isEmpty">
<sdesc>Returns true if the stack is empty. This is effectively the same  as testing size() for 0.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Stack-&gt;peek">
<sdesc>Peeks at the front of the stack (retrieves the first element  without removing it).</sdesc>
<desc>Returns NULL in case the stack is empty.</desc>
<type>&amp;lang.Object</type>
</methodsynopsis>
<methodsynopsis function="Stack-&gt;pop">
<sdesc>Gets an item from the top of the stack</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
</methodsynopsis>
<methodsynopsis function="Stack-&gt;push">
<sdesc>Pushes an item onto the top of the stack. Returns the element that  was added.</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;object</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Stack-&gt;search">
<sdesc>Sees if an object is in the stack and returns its position.</sdesc>
<desc>Returns -1 if the object is not found.</desc>
<type>int</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;object</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Stack-&gt;size">
<sdesc>Returns the size of the stack.</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="StackTraceElement-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>StackTraceElement</type>
<methodparam>
<type>string</type>
<parameter>file</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>class</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>method</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>line</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>args</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>messages</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StackTraceElement-&gt;toString">
<sdesc>Create string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="StdStream-&gt;get">
<sdesc>Retrieve a file object</sdesc>
<desc>1        $stdout= &amp;::();2        $stdout-&gt;write('Hello');</desc>
<type>&amp;io.File</type>
<methodparam>
<type>resource</type>
<parameter>handle</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StliConnection-&gt;__construct">
<sdesc>Constructor.</sdesc>
<desc>Takes a peer.Socket object as argument, use as follows:  1        // [...]2        $c= &amp;new StliClient(new ($stliServer, $stliPort));3</desc>
<type>StliConnection</type>
<methodparam>
<type>&amp;peer.Socket</type>
<parameter>&amp;sock</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StliConnection-&gt;close">
<sdesc>Close connection and end the communication</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="StliConnection-&gt;connect">
<sdesc>Connect and initiate the communication</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="StliConnection-&gt;createCall">
<sdesc>Create a call</sdesc>
<desc></desc>
<type>&amp;util.telephony.TelephonyCall</type>
<methodparam>
<type>&amp;util.telephony.TelephonyTerminal</type>
<parameter>&amp;terminal</parameter>
</methodparam>
<methodparam>
<type>&amp;util.telephony.TelephonyAddress</type>
<parameter>&amp;destination</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StliConnection-&gt;getTerminal">
<sdesc>Get terminal</sdesc>
<desc></desc>
<type>&amp;util.telephony.TelephonyTerminal</type>
<methodparam>
<type>&amp;util.telephony.TelephonyAddress</type>
<parameter>&amp;address</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StliConnection-&gt;observeTerminal">
<sdesc>Observe a terminal</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;util.telephony.TelephonyTerminal</type>
<parameter>&amp;terminal</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>status</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StliConnection-&gt;releaseTerminal">
<sdesc>Release terminal</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;util.telephony.TelephonyTerminal</type>
<parameter>&amp;terminal</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StliConnection-&gt;setVersion">
<sdesc>Set the protocol version. This can only be done *prior* to connecting to  the server!</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Storage-&gt;create">
<sdesc>Creates a new StorageEntry and return it</sdesc>
<desc></desc>
<type>&amp;peer.ftp.server.storage.StorageEntry</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Storage-&gt;getBase">
<sdesc>Retrieves base</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Storage-&gt;lookup">
<sdesc>Looks up a element. Returns a StorageCollection, a StorageElement  or NULL in case it nothing is found.</sdesc>
<desc></desc>
<type>&amp;peer.ftp.server.storage.StorageEntry</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Storage-&gt;setBase">
<sdesc>Sets base</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StorageCollection-&gt;elements">
<sdesc>Retrieves a list of elements</sdesc>
<desc></desc>
<type>&amp;peer.ftp.server.storage.StorageEntry[]</type>
</methodsynopsis>
<methodsynopsis function="StorageElement-&gt;close">
<sdesc>Close this element</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="StorageElement-&gt;open">
<sdesc>Open this element with a specified mode</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>mode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StorageElement-&gt;read">
<sdesc>Read a chunk of data from this element</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="StorageElement-&gt;write">
<sdesc>Write a chunk of data to this element</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>buf</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StorageEntry-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>StorageEntry</type>
</methodsynopsis>
<methodsynopsis function="StorageEntry-&gt;delete">
<sdesc>Deletes an entry</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="StorageEntry-&gt;getGroup">
<sdesc>Retrieves the owner's group name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="StorageEntry-&gt;getModifiedStamp">
<sdesc>Retrieves the modified timestamp of this storage entry</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="StorageEntry-&gt;getName">
<sdesc>Retrieves the (short) name of a storage entry</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="StorageEntry-&gt;getOwner">
<sdesc>Retrieves the owner's username</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="StorageEntry-&gt;getPermissions">
<sdesc>Retrieves the permissions of this storage entry expressed in a  unix-permission style integer</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="StorageEntry-&gt;getSize">
<sdesc>Retrieves the size of this storage entry</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="StorageEntry-&gt;numLinks">
<sdesc>Retrieves the number of links</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="StorageEntry-&gt;rename">
<sdesc>Renames an entry</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>target</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StorageEntry-&gt;setPermissions">
<sdesc>Sets the permissions of this storage entry expressed in a  unix-permission style integer</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>permissions</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StoreCache-&gt;expunge">
<sdesc>Expunge cache</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="StoreCache-&gt;get">
<sdesc>Get a value from cache by key</sdesc>
<desc></desc>
<type>&amp;mixed</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StoreCache-&gt;has">
<sdesc>Check whether cache has a value by key</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StoreCache-&gt;put">
<sdesc>Insert into / update in cache</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;val</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StoreCache-&gt;remove">
<sdesc>Remove a key from cache</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StoreCache-&gt;toString">
<sdesc>Create string representation, e.g.</sdesc>
<desc>peer.mail.store.StoreCache[5]@{
   [folder/INBOX            ] object [mailfolder]
   [list/message/INBOX1     ] object [message]
   [list/message/INBOX2     ] object [message]
   [list/message/INBOX3     ] object [message]
   [list/message/INBOX5     ] object [message]
 }</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Stream-&gt;close">
<sdesc>Close this stream</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Stream-&gt;eof">
<sdesc>Returns whether the stream pointer is at the end of the stream</sdesc>
<desc>Hint:  Use isOpen() to check if the stream is open</desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Stream-&gt;gets">
<sdesc>Read a line</sdesc>
<desc>This function is identical to readLine except that trailing CR and LF characters  will be included in its return value</desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>bytes</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Stream-&gt;isOpen">
<sdesc>Returns whether this stream is open</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Stream-&gt;open">
<sdesc>Open the stream</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>mode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Stream-&gt;read">
<sdesc>Read (binary-safe)</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>bytes</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Stream-&gt;readChar">
<sdesc>Read one char</sdesc>
<desc></desc>
<type>char</type>
</methodsynopsis>
<methodsynopsis function="Stream-&gt;readLine">
<sdesc>Read one line and chop off trailing CR and LF characters</sdesc>
<desc>Returns a string of up to length - 1 bytes read from the stream.  Reading ends when length - 1 bytes have been read, on a newline (which is  included in the return value), or on EOF (whichever comes first).</desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>bytes</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Stream-&gt;rewind">
<sdesc>Sets the stream position indicator for fp to the beginning of the  stream stream.</sdesc>
<desc>This function is identical to a call of $f-&gt;seek(0, SEEK_SET)</desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Stream-&gt;seek">
<sdesc>Move stream pointer to a new position</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>position</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>mode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Stream-&gt;size">
<sdesc>Retrieve the stream's size in bytes</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Stream-&gt;tell">
<sdesc>Retrieve stream pointer position</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Stream-&gt;truncate">
<sdesc>Truncate the stream to the specified length</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>size</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Stream-&gt;write">
<sdesc>Write</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Stream-&gt;writeLine">
<sdesc>Write a line and append a LF (\n) character</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StreamReader-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>StreamReader</type>
<methodparam>
<type>&amp;io.Stream</type>
<parameter>&amp;stream</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StreamReader-&gt;getResource">
<sdesc>Retrieve an image resource</sdesc>
<desc></desc>
<type>resource</type>
</methodsynopsis>
<methodsynopsis function="StreamReader-&gt;readFromStream">
<sdesc>Read an image.</sdesc>
<desc></desc>
<type>resource</type>
</methodsynopsis>
<methodsynopsis function="StreamWriter-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>StreamWriter</type>
<methodparam>
<type>&amp;io.Stream</type>
<parameter>&amp;stream</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StreamWriter-&gt;output">
<sdesc>Output an image. Abstract method, overwrite in child  classes!</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>resource</type>
<parameter>handle</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StreamWriter-&gt;setResource">
<sdesc>Sets the image resource that is to be written</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>resource</type>
<parameter>handle</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>String</type>
<methodparam>
<type>string</type>
<parameter>initial</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;append">
<sdesc>Concatenates the specified string to the end of this string,  changing this string.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;text.String</type>
<parameter>&amp;string</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;charAt">
<sdesc>Returns the character at the specified index. Index counting starts  at 0 and ends at length() - 1. Use -1 as value for the pos argument  to retrieve the last character in this string.</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>pos</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;compareTo">
<sdesc>Compares two strings lexicographically.</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>&amp;text.String</type>
<parameter>&amp;string</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>cs</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;compareToNat">
<sdesc>Compares two strings lexicographically using a &quot;natural order&quot;  algorithm</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>&amp;text.String</type>
<parameter>&amp;string</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>cs</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;concat">
<sdesc>Concatenates the specified string to the end of this string  and returns a new string containing the result.</sdesc>
<desc></desc>
<type>&amp;text.String</type>
<methodparam>
<type>&amp;text.String</type>
<parameter>&amp;string</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;contains">
<sdesc>Returns whether the specified substring is contained in this string</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>substr</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>cs</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;delete">
<sdesc>Delete a specified amount of characters from this string as  of a specified position.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>pos</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>len</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;endsWith">
<sdesc>Tests if this string ends with the specified suffix.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>suffix</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;equals">
<sdesc>Returns true if the specified string matches this string.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;explode">
<sdesc>Split this string into portions delimited by separator</sdesc>
<desc></desc>
<type>&amp;text.String[]</type>
<methodparam>
<type>string</type>
<parameter>separator</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>limit</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;fromArray">
<sdesc>Creates a new string from an array, imploding it using the  specified delimiter.</sdesc>
<desc>Examples:  1        $s= &amp;::(array('a', 'b', 'c'));  // &quot;abc&quot;2        $s= &amp;::(array(1, 2, 3), ',');</desc>
<type>&amp;text.String</type>
<methodparam>
<type>string</type>
<parameter>arr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;getBuffer">
<sdesc>Get Buffer</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="String-&gt;indexOf">
<sdesc>Returns the index within this string of the first occurrence of the  specified substring</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>string</type>
<parameter>substr</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>offset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;insert">
<sdesc>Insert a substring into this string at a specified position.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>înt</type>
<parameter>pos</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>substring</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;lastIndexOf">
<sdesc>Returns the index within this string of the last occurrence of the  specified substring</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>string</type>
<parameter>substr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;length">
<sdesc>Retrieve string's length</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="String-&gt;ltrim">
<sdesc>Strip whitespace from the beginning of this string.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>charlist</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;matches">
<sdesc>Tells whether or not this string matches the given regular expression.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>regex</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;pad">
<sdesc>Pad this string to a certain length with another string</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>length</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;replace">
<sdesc>Replaces search value(s) with replacement value(s) in this string</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>search</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>replace</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;replacePairs">
<sdesc>Replaces pairs in this this string</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>array</type>
<parameter>pairs</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;rtrim">
<sdesc>Strip whitespace from the end of this string.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>charlist</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;scan">
<sdesc>Parses input from this string according to a format</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>string</type>
<parameter>format</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;setBuffer">
<sdesc>Set Buffer</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>buffer</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;split">
<sdesc>Split this string into portions delimited by separator regex</sdesc>
<desc></desc>
<type>&amp;text.String[]</type>
<methodparam>
<type>string</type>
<parameter>separator</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>limit</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;startsWith">
<sdesc>Tests if this string starts with the specified prefix beginning  a specified index.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>prefix</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>offset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;substr">
<sdesc>Returns a new string that is a substring of this string.</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>begin</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>end</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;substrAfter">
<sdesc>Find first occurrence of a string.  Returns part of haystack string  from the first occurrence of needle to the end of haystack.</sdesc>
<desc>Example:  1        $s= &amp;new ('xp@php3.de');2        if ($portion= $s-&gt;('@')) {3          echo $portion;   // php3.de4        }</desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>substr</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>cs</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;substring">
<sdesc>Returns a new string that is a substring of this string.</sdesc>
<desc></desc>
<type>&amp;text.String</type>
<methodparam>
<type>int</type>
<parameter>begin</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>end</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;substringAfter">
<sdesc>Find first occurrence of a string.  Returns part of haystack string  from the first occurrence of needle to the end of haystack.</sdesc>
<desc></desc>
<type>&amp;text.String</type>
<methodparam>
<type>string</type>
<parameter>substr</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>cs</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;toArray">
<sdesc>Returns an array of strings</sdesc>
<desc>Examples:  1        $s= &amp;new ('Hello');2        $a= $s-&gt;();         // array('H', 'e', 'l', 'l', 'o')3     4        $s= &amp;new ('Friebe,Timm');5        $a= $s-&gt;(',');</desc>
<type>string[]</type>
<methodparam>
<type>string</type>
<parameter>delim</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;toLowerCase">
<sdesc>Converts all of the characters in this string to lower case using  the rules of the current locale.</sdesc>
<desc></desc>
<type>&amp;text.String</type>
</methodsynopsis>
<methodsynopsis function="String-&gt;toUpperCase">
<sdesc>Converts all of the characters in this string to upper case using  the rules of the current locale.</sdesc>
<desc></desc>
<type>&amp;text.String</type>
</methodsynopsis>
<methodsynopsis function="String-&gt;trim">
<sdesc>Strip whitespace from the beginning and end of this string.</sdesc>
<desc>If the parameter charlist is omitted, these characters will  be stripped:  &quot; &quot; (ASCII 32 (0x20)), an ordinary space.&quot;\t&quot; (ASCII 9 (0x09)), a tab.&quot;\n&quot; (ASCII 10 (0x0A)), a new line (line feed).&quot;\r&quot; (ASCII 13 (0x0D)), a carriage return.&quot;\0&quot; (ASCII 0 (0x00)), the NUL-byte.&quot;\x0B&quot; (ASCII 11 (0x0B)), a vertical tab.</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>charlist</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="String-&gt;valueOf">
<sdesc>Returns the string representation of the given argument. Calls the  toString() method on objects and implode() on arrays.</sdesc>
<desc></desc>
<type>&amp;text.String</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StringTokenizer-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>StringTokenizer</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>delimiters</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>returnDelims</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StringTokenizer-&gt;hasMoreTokens">
<sdesc>Tests if there are more tokens available</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="StringTokenizer-&gt;nextToken">
<sdesc>Returns the next token from this tokenizer's string</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="StringUtil-&gt;blocksplit">
<sdesc>Split a string into an array of blocks of equal length. Throws an  exception in a situation in which a length of less than or equal zero  was supplied.</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>length</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StringUtil-&gt;delete">
<sdesc>Delete a specified amount of characters from a string as  of a specified position. The resulting string is copied to the  parameter &quot;string&quot; and also returned as result.</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>&amp;string</type>
<parameter>&amp;string</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>pos</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>len</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="StringUtil-&gt;insert">
<sdesc>Insert a character into a string at a specified position. The  resulting string is copied to the parameter &quot;string&quot; and also  returned as result.</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>&amp;string</type>
<parameter>&amp;string</parameter>
</methodparam>
<methodparam>
<type>înt</type>
<parameter>pos</parameter>
</methodparam>
<methodparam>
<type>char</type>
<parameter>char</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Swabian-&gt;translate">
<sdesc>Translates the given sentence to schwobian.</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseConnection-&gt;begin">
<sdesc>Begin a transaction</sdesc>
<desc></desc>
<type>&amp;rdbms.Transaction</type>
<methodparam>
<type>&amp;rdbms.Transaction</type>
<parameter>&amp;transaction</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseConnection-&gt;close">
<sdesc>Disconnect</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="SybaseConnection-&gt;commit">
<sdesc>Commit a transaction</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseConnection-&gt;connect">
<sdesc>Connect</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>bool</type>
<parameter>reconnect</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseConnection-&gt;delete">
<sdesc>Execute an update statement</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseConnection-&gt;identity">
<sdesc>Retrieve identity</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="SybaseConnection-&gt;insert">
<sdesc>Execute an insert statement</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>mixed</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseConnection-&gt;prepare">
<sdesc>Prepare an SQL statement</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseConnection-&gt;query">
<sdesc>Execute any statement</sdesc>
<desc></desc>
<type>&amp;rdbms.sybase.SybaseResultSet</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseConnection-&gt;rollback">
<sdesc>Rollback a transaction</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseConnection-&gt;select">
<sdesc>Execute a select statement and return all rows as an array</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseConnection-&gt;selectdb">
<sdesc>Select database</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>db</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseConnection-&gt;setTimeout">
<sdesc>Set Timeout</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>timeout</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseConnection-&gt;transtate">
<sdesc>Retrieve transaction state</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseConnection-&gt;update">
<sdesc>Execute an update statement</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseConnection-&gt;_prepare">
<sdesc>Protected helper methid</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>array</type>
<parameter>args</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseDBAdapter-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SybaseDBAdapter</type>
<methodparam>
<type>&amp;Object</type>
<parameter>&amp;conn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseDBAdapter-&gt;getDatabases">
<sdesc>Get databases</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="SybaseDBAdapter-&gt;getTable">
<sdesc>Get table by name</sdesc>
<desc></desc>
<type>rdbms.DBTable</type>
<methodparam>
<type>string</type>
<parameter>table</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseDBAdapter-&gt;getTables">
<sdesc>Get tables by database</sdesc>
<desc></desc>
<type>rdbms.DBTable[]</type>
<methodparam>
<type>string</type>
<parameter>database</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseIOObserver-&gt;__construct">
<sdesc>Constrcutor.</sdesc>
<desc></desc>
<type>SybaseIOObserver</type>
<methodparam>
<type>string</type>
<parameter>arg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseIOObserver-&gt;instanceFor">
<sdesc>Retrieves an instance.</sdesc>
<desc></desc>
<type>&amp;rdbms.sybase.SybaseIOObserver</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseIOObserver-&gt;onConnect">
<sdesc>Process connect events.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;obs</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;arg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseIOObserver-&gt;onQuery">
<sdesc>Process query event.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;obs</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;arg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseIOObserver-&gt;onQueryEnd">
<sdesc>Process end of query event.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;obs</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;arg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseIOObserver-&gt;update">
<sdesc>Update the observer. Process new message.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;obs</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>arg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseIOObserver-&gt;_msghandler">
<sdesc>Sybase message callback.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>msgnumber</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>severity</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>state</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>line</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>text</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseResultSet-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SybaseResultSet</type>
<methodparam>
<type>resource</type>
<parameter>result</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseResultSet-&gt;close">
<sdesc>Close resultset and free result memory</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="SybaseResultSet-&gt;next">
<sdesc>Iterator function. Returns a rowset if called without parameter,  the fields contents if a field is specified or FALSE to indicate  no more rows are available.</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>field</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SybaseResultSet-&gt;seek">
<sdesc>Seek</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>offset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SyslogAppender-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SyslogAppender</type>
<methodparam>
<type>string</type>
<parameter>identifier</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>facility</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SyslogAppender-&gt;append">
<sdesc>Appends log data to the syslog</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="SyslogAppender-&gt;finalize">
<sdesc>Finalize this appender - is called when the logger shuts down  at the end of the request.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="System-&gt;exec">
<sdesc>Execute an external program</sdesc>
<desc>Copied from man bash, some information on the exit code   EXIT STATUS
 For  the  shell's  purposes,  a command which exits with a
 zero exit status has succeeded.  An exit  status  of  zero
 indicates success.  A non-zero exit status indicates fail­
 ure.  When a command terminates on a fatal signal N,  bash
 uses the value of 128+N as the exit status.

 If  a  command  is not found, the child process created to
 execute it returns a status of 127.  If a command is found
 but is not executable, the return status is 126.

 If a command fails because of an error during expansion or
 redirection, the exit status is greater than zero.

 Shell builtin commands return a status of 0 (true) if suc­
 cessful,  and  non-zero  (false)  if an error occurs while
 they execute.  All builtins return an exit status of 2  to
 indicate incorrect usage.

 Bash  itself  returns  the exit status of the last command
 executed, unless a syntax error occurs, in which  case  it
 exits  with  a  non-zero value.  See also the exit builtin
 command below.</desc>
<type>array</type>
<methodparam>
<type>string</type>
<parameter>cmdLine</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>redirect</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>background</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="System-&gt;getEnv">
<sdesc>Returns the contents of an environment variable, or in case it does  not exist, FALSE.</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="System-&gt;getProperty">
<sdesc>Retrieve system property. Note: Results of this method are  cached!</sdesc>
<desc>Known property names:   php.version       PHP version
 php.api           PHP api
 os.name           Operating system name
 os.tempdir        System-wide temporary directory
 host.name         Host name
 host.arch         Host architecture
 user.home         Current user's home directory
 user.name         Current user's name
 file.separator    File separator (&quot;/&quot; on UNIX)
 path.separator    Path separator (&quot;:&quot; on UNIX)</desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="System-&gt;putEnv">
<sdesc>Sets an environment variable</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>var</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="System-&gt;tempDir">
<sdesc>Retrieve location of temporary directory. This method looks at the  environment variables TEMP and TMP, and, if these cannot be found,  uses '/tmp' as location on Un*x systems, c:\ on Windows.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="SystemException-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>SystemException</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>code</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TarArchive-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>TarArchive</type>
<methodparam>
<type>io.File</type>
<parameter>file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TarArchive-&gt;close">
<sdesc>Schließen</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="TarArchive-&gt;getEntry">
<sdesc>Holt sich den nächsten Eintrag aus dem Archiv</sdesc>
<desc></desc>
<type>io.TarArchiveEntry</type>
</methodsynopsis>
<methodsynopsis function="TarArchive-&gt;getEntryData">
<sdesc>Inhalt einer Datei zurückgeben</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>io.TarArchiveEntry</type>
<parameter>e</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TarArchive-&gt;open">
<sdesc>Öffnen</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TarArchiveEntry-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>TarArchiveEntry</type>
<methodparam>
<type>array</type>
<parameter>data</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>offset</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TarArchiveEntry-&gt;getFileTypeString">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TarArchiveEntry-&gt;getGroupPermissions">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TarArchiveEntry-&gt;getPermissionString">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TarArchiveEntry-&gt;getUserPermissions">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TarArchiveEntry-&gt;getWorldPermissions">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TarArchiveEntry-&gt;_rwx">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TelephonyAddress-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>TelephonyAddress</type>
<methodparam>
<type>string</type>
<parameter>number</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TelephonyAddress-&gt;getNumber">
<sdesc>Get Number</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="TelephonyAddress-&gt;setNumber">
<sdesc>Set Number</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>number</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TelephonyAddressParser-&gt;__construct">
<sdesc>Creates a PhoneNumber object</sdesc>
<desc></desc>
<type>TelephonyAddressParser</type>
<methodparam>
<type>array</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TelephonyAddressParser-&gt;parseNumber">
<sdesc>Parses a phone number. This relies on the following facts:</sdesc>
<desc>Addresses must have a certain minimal length, otherwise they  are interpreted as extensions only. If they have sufficient length  they are parsed from left to right, first searched for international  country codes which are diffed agains an internal list. Then  the national prefix is searched - it *must* be divided by a  non-decimal from the subscriber number. As this class cannot have  a list of allowed national area codes the division is absolutely  neccessary.</desc>
<type>&amp;TelephonyAddress</type>
<methodparam>
<type>string</type>
<parameter>number</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TelephonyCall-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>TelephonyCall</type>
<methodparam>
<type>&amp;util.telephony.TelephonyAddress</type>
<parameter>&amp;origin</parameter>
</methodparam>
<methodparam>
<type>&amp;util.telephony.TelephonyAddress</type>
<parameter>&amp;destination</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TelephonyCall-&gt;getDestinationNumber">
<sdesc>Retrieve the destination's phone number</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="TelephonyCall-&gt;getOriginNumber">
<sdesc>Retrieve the origin's phone number</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="TelephonyProvider-&gt;close">
<sdesc>Close connection and end the communication</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TelephonyProvider-&gt;connect">
<sdesc>Connect and initiate the communication</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TelephonyProvider-&gt;createCall">
<sdesc>Create a call</sdesc>
<desc></desc>
<type>&amp;util.telephony.TelephonyCall</type>
<methodparam>
<type>&amp;util.telephony.TelephonyTerminal</type>
<parameter>&amp;terminal</parameter>
</methodparam>
<methodparam>
<type>&amp;util.telephony.TelephonyAddress</type>
<parameter>&amp;destination</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TelephonyProvider-&gt;getAddress">
<sdesc>Retrieve an address</sdesc>
<desc></desc>
<type>&amp;util.telephony.TelephonyAddress</type>
<methodparam>
<type>string</type>
<parameter>number</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TelephonyProvider-&gt;getTerminal">
<sdesc>Get terminal</sdesc>
<desc></desc>
<type>&amp;util.telephony.TelephonyTerminal</type>
<methodparam>
<type>&amp;util.telephony.TelephonyAddress</type>
<parameter>&amp;address</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TelephonyProvider-&gt;releaseTerminal">
<sdesc>Release terminal</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;util.telephony.TelephonyTerminal</type>
<parameter>&amp;terminal</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TelephonyProvider-&gt;setTrace">
<sdesc>Set a LogCategory for tracing communication</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TelephonyProvider-&gt;trace">
<sdesc>Trace function</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TelephonyTerminal-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>TelephonyTerminal</type>
<methodparam>
<type>&amp;util.telephony.TelephonyAddress</type>
<parameter>&amp;address</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TelephonyTerminal-&gt;getAttachedNumber">
<sdesc>Retrieve the terminal's phone number</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="TempFile-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>TempFile</type>
<methodparam>
<type>string</type>
<parameter>prefix</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>TestCase</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertArray">
<sdesc>Assert that a value is an array</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>var</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertBoolean">
<sdesc>Assert that a value's type is boolean</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>var</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertClass">
<sdesc>Assert that a given object is of a specified class</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;var</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertContains">
<sdesc>Assert that a string contains a substring</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>var</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>needle</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertEmpty">
<sdesc>Assert that a value is empty</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>var</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertEquals">
<sdesc>Assert that two values are equal</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>a</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>b</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertFalse">
<sdesc>Assert that a value is false</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>var</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertFloat">
<sdesc>Assert that a value's type is float</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>var</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertIn">
<sdesc>Assert that a value is contained in a list</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>var</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>list</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertInteger">
<sdesc>Assert that a value's type is integer</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>var</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertMatches">
<sdesc>Assert that a value matches a given pattern</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>var</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>pattern</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertNotEmpty">
<sdesc>Assert that a value is not empty</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>var</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertNotEquals">
<sdesc>Assert that two values are not equal</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>a</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>b</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertNull">
<sdesc>Assert that a value's type is null</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>var</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertObject">
<sdesc>Assert that a value is an object</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>&amp;var</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertString">
<sdesc>Assert that a value's type is string</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>var</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertSubclass">
<sdesc>Assert that a given object is a subclass of a specified class</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;var</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;assertTrue">
<sdesc>Assert that a value is true</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>mixed</type>
<parameter>var</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>error</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;fail">
<sdesc>Fail this test case</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>reason</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>code</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>actual</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>expect</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;getName">
<sdesc>Get Name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;run">
<sdesc>Run this test case.</sdesc>
<desc></desc>
<type>&amp;mixed</type>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;setUp">
<sdesc>Set up this test. Overwrite in subclasses. Throw a  PrerequisitesNotMetError to indicate this case should be  skipped.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;tearDown">
<sdesc>Tear down this test case. Overwrite in subclasses.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TestCase-&gt;_fail">
<sdesc>Callback for assert</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>file</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>line</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>code</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestFailure-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>TestFailure</type>
<methodparam>
<type>&amp;util.profiling.unittest.TestCase</type>
<parameter>&amp;test</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;reason</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestFailure-&gt;toString">
<sdesc>Return a string representation of this class</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="TestResult-&gt;count">
<sdesc>Get number of total tests</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="TestResult-&gt;failureCount">
<sdesc>Get number of failed tests</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="TestResult-&gt;runCount">
<sdesc>Get number of run tests (excluding skipped)</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="TestResult-&gt;setFailed">
<sdesc>Mark a test as failed</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.profiling.unittest.TestCase</type>
<parameter>&amp;test</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>reason</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestResult-&gt;setSkipped">
<sdesc>Mark a test as been skipped</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.profiling.unittest.TestCase</type>
<parameter>&amp;test</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>reason</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestResult-&gt;setSucceeded">
<sdesc>Mark a test as succeeded</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.profiling.unittest.TestCase</type>
<parameter>&amp;test</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestResult-&gt;skipCount">
<sdesc>Get number of skipped tests</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="TestResult-&gt;successCount">
<sdesc>Get number of succeeded tests</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="TestResult-&gt;toString">
<sdesc>Create a nice string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="TestSkipped-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>TestSkipped</type>
<methodparam>
<type>&amp;util.profiling.unittest.TestCase</type>
<parameter>&amp;test</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;reason</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestSkipped-&gt;toString">
<sdesc>Return a string representation of this class</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="TestSuccess-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>TestSuccess</type>
<methodparam>
<type>&amp;util.profiling.unittest.TestCase</type>
<parameter>&amp;test</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;result</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestSuccess-&gt;toString">
<sdesc>Return a string representation of this class</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="TestSuite-&gt;addTest">
<sdesc>Add a test</sdesc>
<desc></desc>
<type>&amp;util.profiling.unittest.TestCase</type>
<methodparam>
<type>&amp;util.profiling.unittest.TestCase</type>
<parameter>&amp;test</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestSuite-&gt;clearTests">
<sdesc>Remove all tests</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TestSuite-&gt;numTests">
<sdesc>Returns number of tests in this suite</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="TestSuite-&gt;run">
<sdesc>Run this test suite</sdesc>
<desc></desc>
<type>&amp;util.profiling.unittest.TestResult</type>
</methodsynopsis>
<methodsynopsis function="TestSuite-&gt;runTest">
<sdesc>Run a single test</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;util.profiling.unittest.TestCase</type>
<parameter>&amp;test</parameter>
</methodparam>
<methodparam>
<type>&amp;util.profiling.unittest.TestResult</type>
<parameter>&amp;result</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TestSuite-&gt;testAt">
<sdesc>Returns test at a given position</sdesc>
<desc>Example for numTests and testAt:  1        // [... set up suite ...]2     3        $result= &amp;new ();4        for ($i= 0, $s= $suite-&gt;(); $i &lt; $s; $i++) {5          $suite-&gt;($suite-&gt;($i), $result);6        }</desc>
<type>&amp;util.profiling.unittest.TestCase</type>
<methodparam>
<type>int</type>
<parameter>pos</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Text-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Text</type>
<methodparam>
<type>&amp;fonts.Font</type>
<parameter>&amp;col</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>&amp;font</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>text</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>x</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Text-&gt;draw">
<sdesc>Draw function</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;resource</type>
<parameter>&amp;hdl</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Thread-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Thread</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Thread-&gt;getId">
<sdesc>Returns thread id or -1 if this thread is not running</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Thread-&gt;getName">
<sdesc>Get Name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Thread-&gt;getParentId">
<sdesc>Returns thread's parent id</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="Thread-&gt;isRunning">
<sdesc>Returns whether this thread is running</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="Thread-&gt;join">
<sdesc>Join this thread. The optional parameter wait may be set to FALSE to  return immediately if this thread hasn't terminated yet.</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>bool</type>
<parameter>wait</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Thread-&gt;run">
<sdesc>Subclasses of Thread should override this method.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Thread-&gt;setName">
<sdesc>Set Name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Thread-&gt;sleep">
<sdesc>Causes the currently executing thread to sleep (temporarily cease  execution) for the specified number of milliseconds.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>millis</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Thread-&gt;start">
<sdesc>Starts thread execution</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Thread-&gt;stop">
<sdesc>Stop this thread</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>signal</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Thread-&gt;toString">
<sdesc>Creates a string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Throwable-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Throwable</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Throwable-&gt;getMessage">
<sdesc>Get Message</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Throwable-&gt;getStackTrace">
<sdesc>Return an array of stack trace elements</sdesc>
<desc></desc>
<type>lang.StackTraceElement[]</type>
</methodsynopsis>
<methodsynopsis function="Throwable-&gt;printStackTrace">
<sdesc>Print &quot;stacktrace&quot; to standard error</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>resource</type>
<parameter>fd</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Throwable-&gt;toString">
<sdesc>Return formatted output of stacktrace</sdesc>
<desc>Example:   Exception lang.ClassNotFoundException (class &quot;&quot; [] not found)
   at lang.ClassNotFoundException::__construct((0x15)'class &quot;&quot; [] not found') \
   [line 79 of StackTraceElement.class.php]
   at lang.ClassLoader::loadclass(NULL) [line 143 of XPClass.class.php]
   at lang.XPClass::forname(NULL) [line 6 of base_test.php] \
   Undefined variable:  nam</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Timer-&gt;elapsedTime">
<sdesc>Retrieve elapsed time</sdesc>
<desc></desc>
<type>float</type>
</methodsynopsis>
<methodsynopsis function="Timer-&gt;microtime">
<sdesc>Retrieve current microtime</sdesc>
<desc></desc>
<type>float</type>
</methodsynopsis>
<methodsynopsis function="Timer-&gt;start">
<sdesc>Start the timer</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Timer-&gt;stop">
<sdesc>Stop the timer</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TimeZone-&gt;__construct">
<sdesc>Constructor.</sdesc>
<desc></desc>
<type>TimeZone</type>
<methodparam>
<type>string</type>
<parameter>offset</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>tz</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TimeZone-&gt;convertDate">
<sdesc>Converts a date from one timezone to a date of this  timezone.</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
<methodparam>
<type>&amp;util.TimeZone</type>
<parameter>&amp;tz</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TimeZone-&gt;convertLocalDate">
<sdesc>Converts a date in the machines local timezone to a date in this  timezone.</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TimeZone-&gt;getByName">
<sdesc>Returns a TimeZone object by a time zone name.</sdesc>
<desc></desc>
<type>&amp;util.TimeZone</type>
<methodparam>
<type>string</type>
<parameter>abbrev</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TimeZone-&gt;getLocal">
<sdesc>Get a timezone object for the machines local timezone.</sdesc>
<desc></desc>
<type>&amp;util.TimeZone</type>
</methodsynopsis>
<methodsynopsis function="TimeZone-&gt;getName">
<sdesc>Gets the name of the timezone</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="TimeZone-&gt;getOffset">
<sdesc>Retrieves the offset of the timezone</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="TimeZone-&gt;getOffsetByTimeZoneString">
<sdesc>Get the offset string by timezone name</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TimeZone-&gt;getOffsetInSeconds">
<sdesc>Retrieves the timezone offset to UTC/GMT</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="TLSSocket-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>TLSSocket</type>
<methodparam>
<type>string</type>
<parameter>host</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
<methodparam>
<type>resource</type>
<parameter>socket</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ToBoolean-&gt;castValue">
<sdesc>Cast a given value</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ToDate-&gt;castValue">
<sdesc>Cast a given value</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ToEmailAddress-&gt;castValue">
<sdesc>Cast a given value</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ToFileData-&gt;castValue">
<sdesc>Cast a given value</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ToInteger-&gt;castValue">
<sdesc>Cast a given value.</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TokenizerTest-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>TokenizerTest</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>dsn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TokenizerTest-&gt;setUp">
<sdesc>Setup function</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TokenizerTest-&gt;tearDown">
<sdesc>Tear down function</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TokenizerTest-&gt;testFloatToken">
<sdesc>Test float token</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TokenizerTest-&gt;testIntegerArrayToken">
<sdesc>Test array of integer token</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TokenizerTest-&gt;testIntegerToken">
<sdesc>Test integer token</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TokenizerTest-&gt;testLeadingToken">
<sdesc>Test leading token</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TokenizerTest-&gt;testPercentToken">
<sdesc>Test percent token</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TokenizerTest-&gt;testStringToken">
<sdesc>Test string token</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="TokenizerTest-&gt;testUnknownToken">
<sdesc>Test unknown token</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="ToTrimmedString-&gt;castValue">
<sdesc>Cast a given value.</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Traceable-&gt;setTrace">
<sdesc>Set a trace for debugging</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Transaction-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Transaction</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Transaction-&gt;commit">
<sdesc>Commit this transaction</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Transaction-&gt;getState">
<sdesc>Retrieve transaction state</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Transaction-&gt;rollback">
<sdesc>Rollback this transaction</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Translator-&gt;translate">
<sdesc>Translates the given sentence</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Transport-&gt;close">
<sdesc>Close connection</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Transport-&gt;connect">
<sdesc>Connect to this transport</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>dsn</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Transport-&gt;send">
<sdesc>Send a message</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.mail.Message</type>
<parameter>&amp;message</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Transport-&gt;setTrace">
<sdesc>Set a LogCategory for tracing communication</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Transport-&gt;trace">
<sdesc>Trace function</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TransportException-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>TransportException</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>&amp;lang.Exception</type>
<parameter>&amp;cause</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TransportException-&gt;toString">
<sdesc>Get string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="Tree-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Tree</type>
<methodparam>
<type>string</type>
<parameter>rootName</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Tree-&gt;addChild">
<sdesc>Add a child to this tree</sdesc>
<desc></desc>
<type>&amp;xml.Node</type>
<methodparam>
<type>&amp;xml.Node</type>
<parameter>&amp;child</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Tree-&gt;fromFile">
<sdesc>Construct an XML tree from a file.</sdesc>
<desc>1        $tree= &amp;::(new ('foo.xml');</desc>
<type>&amp;xml.Tree</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>c</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Tree-&gt;fromString">
<sdesc>Construct an XML tree from a string.</sdesc>
<desc>1        $tree= &amp;::('&lt;document&gt;...&lt;/document&gt;');</desc>
<type>&amp;xml.Tree</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>c</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Tree-&gt;getSource">
<sdesc>Retrieve XML representation</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>bool</type>
<parameter>indent</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Tree-&gt;onCData">
<sdesc>Callback function for XMLParser</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>resource</type>
<parameter>parser</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>cdata</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Tree-&gt;onDefault">
<sdesc>Callback function for XMLParser</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>resource</type>
<parameter>parser</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Tree-&gt;onEndElement">
<sdesc>Callback function for XMLParser</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>resource</type>
<parameter>parser</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Tree-&gt;onStartElement">
<sdesc>Callback function for XMLParser</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>resource</type>
<parameter>parser</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>attrs</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="TrueTypeFont-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>TrueTypeFont</type>
</methodsynopsis>
<methodsynopsis function="TrueTypeFont-&gt;drawtext">
<sdesc>Draw function</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;resource</type>
<parameter>&amp;hdl</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UDDICommand-&gt;marshalTo">
<sdesc>Marshal command to a specified node</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;xml.Node</type>
<parameter>&amp;node</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UDDICommand-&gt;unmarshalFrom">
<sdesc>Unmarshal return value from a specified node</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>&amp;xml.Node</type>
<parameter>&amp;node</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UDDIConstants-&gt;namespaceFor">
<sdesc>Retrieve namespace for a specified version</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UDDIConstants-&gt;versionIdFor">
<sdesc>Retrieve version identifier for a specified version</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UDDIServer-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>UDDIServer</type>
<methodparam>
<type>string</type>
<parameter>inquiryUrl</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>publishUrl</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UDDIServer-&gt;getVersion">
<sdesc>Get Version</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="UDDIServer-&gt;invoke">
<sdesc>Invoke a command</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>&amp;xml.uddi.UDDICommand</type>
<parameter>&amp;command</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UDDIServer-&gt;setTrace">
<sdesc>Set trace for debugging</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.log.LogCategory</type>
<parameter>&amp;cat</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UDDIServer-&gt;setVersion">
<sdesc>Set Version</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UDPSocket-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>UDPSocket</type>
<methodparam>
<type>string</type>
<parameter>host</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>port</parameter>
</methodparam>
<methodparam>
<type>resource</type>
<parameter>socket</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UnexpectedResponseException-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>UnexpectedResponseException</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>statuscode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UnexpectedResponseException-&gt;getStatusCode">
<sdesc>Get statuscode</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="UnexpectedResponseException-&gt;setStatusCode">
<sdesc>Set statuscode</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>statuscode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UnexpectedResponseException-&gt;toString">
<sdesc>Returns string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="UnitTestUI-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>UnitTestUI</type>
<methodparam>
<type>&amp;util.cmd.ParamString</type>
<parameter>&amp;p</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UnitTestUI-&gt;addConfiguration">
<sdesc>Add a configuration</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>section</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UnitTestUI-&gt;init">
<sdesc>Initialize application</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="UnitTestUI-&gt;onClearClicked">
<sdesc>Callback</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;php.GtkWidget</type>
<parameter>&amp;widget</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UnitTestUI-&gt;onRunClicked">
<sdesc>Callback</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;php.GtkWidget</type>
<parameter>&amp;widget</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UnitTestUI-&gt;onSelectClicked">
<sdesc>Callback</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;php.GtkWidget</type>
<parameter>&amp;widget</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UnitTestUI-&gt;onSelectTest">
<sdesc>Callback for when a row is selected in the hierarchy ctree</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;php.GtkWidget</type>
<parameter>&amp;widget</parameter>
</methodparam>
<methodparam>
<type>&amp;php.GtkNode</type>
<parameter>&amp;node</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UnitTestUI-&gt;setStatusText">
<sdesc>Set statusbar text and waits for the GUI to process  whatever events are still pending.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed*</type>
<parameter>1</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>fmt</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UnitTestUI-&gt;updateTest">
<sdesc>Update test</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>id</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>result</parameter>
</methodparam>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UnixCrypt-&gt;crypt">
<sdesc>Encrypt a string</sdesc>
<desc>The salt may be in one of three forms (from man 3 crypt):Extended
 --------
 If it begins with an underscore (``_'') then the DES Extended
 Format is used in interpreting both the key and the salt, as
 outlined below.

 Modular
 -------
 If it begins with the string ``$digit$'' then the Modular Crypt
 Format is used, as outlined below.

 Traditional
 -----------
 If neither of the above is true, it assumes the Traditional
 Format, using the entire string as the salt (or the first portion).If ommitted, the salt is generated and the system default is used.</desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>original</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>salt</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UnixCrypt-&gt;matches">
<sdesc>Check if an entered string matches the crypt</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>encrypted</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>entered</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="URL-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>URL</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="URL-&gt;addParam">
<sdesc>Add a parameter</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>key</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="URL-&gt;addParams">
<sdesc>Add parameters from an associative array. The key is taken as  parameter name and the value as parameter value.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>array</type>
<parameter>hash</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="URL-&gt;getFragment">
<sdesc>Retrieve fragment</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="URL-&gt;getHost">
<sdesc>Retrieve host</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="URL-&gt;getParams">
<sdesc>Retrieve parameters</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="URL-&gt;getPassword">
<sdesc>Retrieve password</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="URL-&gt;getPath">
<sdesc>Retrieve path</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="URL-&gt;getPort">
<sdesc>Retrieve port</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="URL-&gt;getQuery">
<sdesc>Retrieve query</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="URL-&gt;getScheme">
<sdesc>Retrieve scheme</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="URL-&gt;getURL">
<sdesc>Get full URL</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="URL-&gt;getUser">
<sdesc>Retrieve user</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="URL-&gt;hasParams">
<sdesc>Retrieve whether parameters exist</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="URL-&gt;setURL">
<sdesc>Set full URL</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="URL-&gt;toString">
<sdesc>Create a nice string representation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="UTF7-&gt;decode">
<sdesc>Decode utf7 encoded data</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UTF7-&gt;encode">
<sdesc>Encode string</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UTF8-&gt;decode">
<sdesc>Decode utf8 encoded data</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UTF8-&gt;encode">
<sdesc>Encode string</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UUCode-&gt;decode">
<sdesc>Decode uuencoded data</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UUCode-&gt;encode">
<sdesc>Encode string</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UUID-&gt;create">
<sdesc>Create a new UUID</sdesc>
<desc></desc>
<type>&amp;org.ietf.UUID</type>
</methodsynopsis>
<methodsynopsis function="UUID-&gt;fromString">
<sdesc>Create a UUID from a string</sdesc>
<desc></desc>
<type>&amp;org.ietf.UUID</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="UUID-&gt;toString">
<sdesc>Creates a string representation.</sdesc>
<desc>Examples:     f81d4fae-7dec-11d0-a765-00a0c91e6bf6
   c71a4a80-4a80-171a-8fb7-000401000800</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VCalendar-&gt;addEvent">
<sdesc>Add Event</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>org.imc.VEvent</type>
<parameter>&amp;event</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCalendar-&gt;addProperty">
<sdesc>Parser callback</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>array</type>
<parameter>keys</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCalendar-&gt;export">
<sdesc>Returns the textual representation of this vCalendar</sdesc>
<desc>1        [...]2        $f= &amp;new ('calendar.ics');3        $f-&gt;open();4        $f-&gt;write($cal-&gt;());5        $f-&gt;close();</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VCalendar-&gt;fromStream">
<sdesc>Creata a vCalendar from a stream</sdesc>
<desc>1        try(); {2          $cal= &amp;::(new ('/tmp/test.ics'));3        } if (catch('Exception', $e)) {4          $e-&gt;printStackTrace();5          exit(-1);6        }7     8        ($cal);</desc>
<type>&amp;org.imc.VCard</type>
<methodparam>
<type>&amp;io.Stream</type>
<parameter>&amp;stream</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCalendar-&gt;getEvents">
<sdesc>Get Events</sdesc>
<desc></desc>
<type>org.imc.VEvent[]</type>
</methodsynopsis>
<methodsynopsis function="VCalendar-&gt;getMethod">
<sdesc>Get Method</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VCalendar-&gt;getUID">
<sdesc>Get UID</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VCalendar-&gt;getVersion">
<sdesc>Returns the VCalendar version of this implementation</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VCalendar-&gt;setMethod">
<sdesc>Set Method</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>method</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCalendar-&gt;setUID">
<sdesc>Set UID</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>uid</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;addEmail">
<sdesc>Add an email</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>email</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;addProperty">
<sdesc>Parser callback</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>array</type>
<parameter>keys</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;export">
<sdesc>Returns the textual representation of this vCard</sdesc>
<desc>1        [...]2        $f= &amp;new ('me.vcf');3        $f-&gt;open();4        $f-&gt;write($card-&gt;());5        $f-&gt;close();</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;fromStream">
<sdesc>Creata a vCard from a stream</sdesc>
<desc>1        try(); {2          $vcard= &amp;::(new ('/tmp/imc.vcf'));3        } if (catch('Exception', $e)) {4          $e-&gt;printStackTrace();5          exit(-1);6        }7     8        ($vcard);</desc>
<type>&amp;org.imc.VCard</type>
<methodparam>
<type>&amp;io.Stream</type>
<parameter>&amp;stream</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;getAddress">
<sdesc>Get Address. If a portion is specified, only this portion is returned,  else the whole array.</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>portion</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;getBirthday">
<sdesc>Get Birthday</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;getEmails">
<sdesc>Get Email</sdesc>
<desc></desc>
<type>string[]</type>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;getFullname">
<sdesc>Get Fullname</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;getLogo">
<sdesc>Get Logo</sdesc>
<desc></desc>
<type>mixed[]</type>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;getName">
<sdesc>Get Name. If a portion is specified, only this portion is returned,  else the whole array.</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>portion</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;getNick">
<sdesc>Get Nick</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;getOrganization">
<sdesc>Get Organization</sdesc>
<desc></desc>
<type>mixed[]</type>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;getPhone">
<sdesc>Get Phone</sdesc>
<desc></desc>
<type>mixed[]</type>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;getTitle">
<sdesc>Get Title</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;getUrl">
<sdesc>Get Url</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;setAddress">
<sdesc>Set Address</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>street</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>zip</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>city</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>province</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>country</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>pobox</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>suffix</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;setBirthday">
<sdesc>Set Birthday</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;birthday</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;setFullname">
<sdesc>Set Fullname</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>fullname</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;setLogo">
<sdesc>Set Logo</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed[]</type>
<parameter>logo</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;setName">
<sdesc>Set Name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>last</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>first</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>middle</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>title</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>suffix</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;setNick">
<sdesc>Set Nick</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>nick</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;setOrganization">
<sdesc>Set Organization</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed[]</type>
<parameter>organization</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;setPhone">
<sdesc>Set Phone</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed[]</type>
<parameter>phone</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;setTitle">
<sdesc>Set Title</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>title</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VCard-&gt;setUrl">
<sdesc>Set Url</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>url</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VDate-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>VDate</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;arg</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VDate-&gt;export">
<sdesc>Export this VDate</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VDate-&gt;toString">
<sdesc>Create a string representation of this object</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;addAttendee">
<sdesc>Add attendee</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed[]</type>
<parameter>attendee</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;export">
<sdesc>Returns the string representation of this event</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;getAttendees">
<sdesc>Get attendees</sdesc>
<desc></desc>
<type>mixed[]</type>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;getDate">
<sdesc>Get Date</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;getDescription">
<sdesc>Get Description</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;getEnds">
<sdesc>Get Ends</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;getLocation">
<sdesc>Get Location</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;getOrganizer">
<sdesc>Get Organizer</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;getStarts">
<sdesc>Get Starts</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;getSummary">
<sdesc>Get Summary</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;setDate">
<sdesc>Set Date</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;setDescription">
<sdesc>Set Description</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>description</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;setEnds">
<sdesc>Set Ends</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;ends</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;setLocation">
<sdesc>Set Location</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>location</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;setOrganizer">
<sdesc>Set Organizer</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>organizer</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;setStarts">
<sdesc>Set Starts</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;starts</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VEvent-&gt;setSummary">
<sdesc>Set Summary</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>summary</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VFormatParser-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>VFormatParser</type>
<methodparam>
<type>string</type>
<parameter>identifier</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VFormatParser-&gt;decodeDate">
<sdesc>Decodes a date string</sdesc>
<desc>Example of encoded string   20030220T101358Z</desc>
<type>int</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VFormatParser-&gt;decodeString">
<sdesc>Decode a string</sdesc>
<desc>Example of encoded string:   Hi\,\Nwie angekÃ¼ndigt wird das Meeting auf 16:00 Uhr verschobe
  n.\N\NViele GrÃ¼sse\NAndrea \N</desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VFormatParser-&gt;parse">
<sdesc>Parse a stream</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;io.Stream</type>
<parameter>&amp;stream</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VFormatParser-&gt;setDefaultHandler">
<sdesc>Set default handler</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>function</type>
<parameter>func</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VFormatParser-&gt;setHandler">
<sdesc>Set handler for an element</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>element</parameter>
</methodparam>
<methodparam>
<type>function</type>
<parameter>func</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VFormatParser-&gt;_parseProperties">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="ViewNewsState-&gt;process">
<sdesc>Process this state.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VirtualFileManager-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>VirtualFileManager</type>
</methodsynopsis>
<methodsynopsis function="VirtualFileManager-&gt;addFile">
<sdesc>Adds a file</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>path</parameter>
</methodparam>
<methodparam>
<type>&amp;string</type>
<parameter>&amp;data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VirtualFileManager-&gt;getFile">
<sdesc>Retrieves a file</sdesc>
<desc></desc>
<type>&amp;io.Stream</type>
<methodparam>
<type>string</type>
<parameter>path</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VirtualFileManager-&gt;getInstance">
<sdesc>Gets the instance of the VirtualFileManager</sdesc>
<desc></desc>
<type>&amp;io.VirtualFileManager</type>
</methodsynopsis>
<methodsynopsis function="VTimezone-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>VTimezone</type>
</methodsynopsis>
<methodsynopsis function="VTimezone-&gt;export">
<sdesc>Return a string representation of this object suitable  for inclusion in an VCalendar</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VTimezone-&gt;getLastMod">
<sdesc>Gets the last modification time</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="VTimezone-&gt;getTzid">
<sdesc>Returns the tz-identifier</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="VTimezone-&gt;getTZUrl">
<sdesc>Gets the Timezone url</sdesc>
<desc></desc>
<type>&amp;peer.URL</type>
</methodsynopsis>
<methodsynopsis function="VTimezone-&gt;setLastMod">
<sdesc>Sets the last modification time</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VTimezone-&gt;setTzid">
<sdesc>Sets the unique tz-identifier (unique for this icalendar)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="VTimezone-&gt;setTZUrl">
<sdesc>Sets the Timezone url</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;peer.URL</type>
<parameter>&amp;url</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WBmpStreamReader-&gt;readFromStream">
<sdesc>Read an image</sdesc>
<desc></desc>
<type>resource</type>
</methodsynopsis>
<methodsynopsis function="WBmpStreamWriter-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>WBmpStreamWriter</type>
<methodparam>
<type>&amp;io.Stream</type>
<parameter>&amp;stream</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>foreground</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WBmpStreamWriter-&gt;output">
<sdesc>Output an image</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>resource</type>
<parameter>handle</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavAuthorizationHandler-&gt;isAuthorized">
<sdesc>Checks if the user is authorized to do something.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>path</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.auth.WebdavUser</type>
<parameter>&amp;user</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.xml.Webdav*Request</type>
<parameter>&amp;request</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavBool-&gt;fromBool">
<sdesc>Return string from boolean</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>bool</type>
<parameter>bool</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavBool-&gt;fromString">
<sdesc>Return boolean from string</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>s</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavClient-&gt;__construct">
<sdesc>Constructor.</sdesc>
<desc></desc>
<type>WebdavClient</type>
<methodparam>
<type>mixed</type>
<parameter>url</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavClient-&gt;copy">
<sdesc>Do a Copy Request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>string</type>
<parameter>source</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>destination</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>overwrite</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>depth</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavClient-&gt;delete">
<sdesc>Do a Delete Request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavClient-&gt;exists">
<sdesc>Do a Head Request to check if file exists</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavClient-&gt;get">
<sdesc>Do a Get on Webdav server</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavClient-&gt;getConnection">
<sdesc>Get a Connection</sdesc>
<desc></desc>
<type>&amp;peer.webdav.WebdavConnection</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavClient-&gt;lock">
<sdesc>Do a Lock Request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>xml</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavClient-&gt;mkcol">
<sdesc>Do a MkCol Request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavClient-&gt;move">
<sdesc>Do a Move Request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>string</type>
<parameter>source</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>destination</parameter>
</methodparam>
<methodparam>
<type>bool</type>
<parameter>overwrite</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavClient-&gt;proppatch">
<sdesc>Do a Proppatch request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>string</type>
<parameter>xml</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavClient-&gt;put">
<sdesc>Do a Put on Webdav server</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavClient-&gt;read">
<sdesc>Do a Propfind on Webdav server</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>xml</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>depth</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavClient-&gt;report">
<sdesc>Do a Report Request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavClient-&gt;setPath">
<sdesc>Helper Method to set the path</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>path</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavClient-&gt;unlock">
<sdesc>Do a Unlock Request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>locktoken</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavClient-&gt;version">
<sdesc>Activate VersionControl on a file</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavConnection-&gt;copy">
<sdesc>Perform a copy request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavConnection-&gt;lock">
<sdesc>Perform a lock request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavConnection-&gt;mkcol">
<sdesc>Perform a mkCol request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavConnection-&gt;move">
<sdesc>Perform a move request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavConnection-&gt;propfind">
<sdesc>Perform a Propfind request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavConnection-&gt;proppatch">
<sdesc>Perform a Proppatch request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavConnection-&gt;report">
<sdesc>Perform a report request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavConnection-&gt;unlock">
<sdesc>Perform a unlock request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavConnection-&gt;version">
<sdesc>Perform a VersionControl request</sdesc>
<desc></desc>
<type>&amp;peer.http.HttpResponse</type>
<methodparam>
<type>mixed</type>
<parameter>arg</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>headers</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>WebdavFileVersion</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;getContentLength">
<sdesc>Get the contentlength</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;getCreatorName">
<sdesc>Get the name of the creator</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;getFilename">
<sdesc>Get the Filename</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;getHref">
<sdesc>Get the Href</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;getLastModified">
<sdesc>Get the date of last modification</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;getLocation">
<sdesc>Get the location</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;getVersionName">
<sdesc>Get the versionname</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;getVersionNumber">
<sdesc>Get the versionnumber</sdesc>
<desc></desc>
<type>float</type>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;setContentLength">
<sdesc>Set the conentlength</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>length</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;setCreatorName">
<sdesc>Set the name of the creator</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>creator</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;setFilename">
<sdesc>Set the Filename</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;setHref">
<sdesc>Set the Href</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>href</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;setLastModified">
<sdesc>Set date of last modification</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;setLocation">
<sdesc>Set the location (e.g. /dav/versions/test_1.0.txt )</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>loc</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;setVersionName">
<sdesc>Set the versionname (e.g. test_1.0.txt)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>versname</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavFileVersion-&gt;setVersionNumber">
<sdesc>Set the versionnumber</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>float</type>
<parameter>versnr</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>WebdavLock</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;getCreationDate">
<sdesc>Get the time</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;getDepth">
<sdesc>Get the depth</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;getLockScope">
<sdesc>Get the Lockscope</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;getLockToken">
<sdesc>Get the Locktoken</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;getLockType">
<sdesc>Get the Locktype</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;getOwner">
<sdesc>Get the Owner</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;getTimeout">
<sdesc>Get the Timeout</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;getURI">
<sdesc>Get the Uri</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;setCreationDate">
<sdesc>Set the time of creation</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;setDepth">
<sdesc>Set the Depth</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>depth</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;setLockScope">
<sdesc>Set the lockscope</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>scope</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;setLockToken">
<sdesc>Set the Locktoken</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>token</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;setLockType">
<sdesc>Set the Locktype</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>locktype</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;setOwner">
<sdesc>Set the Owner</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>owner</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;setTimeout">
<sdesc>Set the Timeout</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>int</type>
<parameter>timeout</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavLock-&gt;setURI">
<sdesc>Set the Uri</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavLockRequest-&gt;getProperties">
<sdesc>Get all properties</sdesc>
<desc></desc>
<type>&amp;string[]</type>
</methodsynopsis>
<methodsynopsis function="WebdavLockRequest-&gt;registerLock">
<sdesc>register an Lock-request</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>owner</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavLockRequest-&gt;setData">
<sdesc>Set data and parse for properties</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>&amp;data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavLockResponse-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>WebdavLockResponse</type>
</methodsynopsis>
<methodsynopsis function="WebdavLockResponse-&gt;addLock">
<sdesc>Add a webdav object</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;org.webdav.WebdavProperty[]</type>
<parameter>1</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.WebdavObject</type>
<parameter>&amp;lock</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavMultiStatusResponse-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>WebdavMultiStatusResponse</type>
</methodsynopsis>
<methodsynopsis function="WebdavMultiStatusResponse-&gt;addWebdavObject">
<sdesc>Add a webdav object</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;org.webdav.WebdavObject</type>
<parameter>&amp;object</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.WebdavProperty[]</type>
<parameter>&amp;reqprops</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>WebdavObject</type>
<methodparam>
<type>string</type>
<parameter>href</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>resourceType</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>contentLength</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>contentType</parameter>
</methodparam>
<methodparam>
<type>&amp;util.Date</type>
<parameter>creationDate</parameter>
</methodparam>
<methodparam>
<type>&amp;util.Date</type>
<parameter>modifiedDate</parameter>
</methodparam>
<methodparam>
<type>array</type>
<parameter>properties</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;addLockInfo">
<sdesc>Set an Lockinfo</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>sting</type>
<parameter>locktype</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>lockscope</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>owner</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>timeout</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>token</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>depth</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;addProperty">
<sdesc>Add Property</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>property</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;getContentLength">
<sdesc>Get the contentlength</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;getContentType">
<sdesc>Get the contenttype</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;getCreationDate">
<sdesc>Get the creation date</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;getData">
<sdesc>Get data</sdesc>
<desc></desc>
<type>&amp;string</type>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;getHref">
<sdesc>get Href</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;getLockInfo">
<sdesc>Get the Lockinfo</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;getModifiedDate">
<sdesc>Get the last modified date</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;getProperties">
<sdesc>Get Properties</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;getProperty">
<sdesc>Get the properties</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;getResourceType">
<sdesc>Get the Resourcetype</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;setContentLength">
<sdesc>Set the Contentlength</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>contentlength</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;setContentType">
<sdesc>Set contenttype</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;setCreationDate">
<sdesc>Set the creation date</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;setData">
<sdesc>Set data</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;string</type>
<parameter>&amp;data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;setEncoding">
<sdesc>Set encoding</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;string</type>
<parameter>data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;setHref">
<sdesc>Set href</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>href</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;setModifiedDate">
<sdesc>Set the last modified Date</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;setProperties">
<sdesc>Set properties</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>array</type>
<parameter>properties</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavObject-&gt;setResourceType">
<sdesc>Set the Resourcetype</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>restype</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavProperty-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>WebdavProperty</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavProperty-&gt;getAttributes">
<sdesc>Return property's attributes</sdesc>
<desc></desc>
<type>array[]</type>
</methodsynopsis>
<methodsynopsis function="WebdavProperty-&gt;getName">
<sdesc>Get Name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavProperty-&gt;getNamespaceName">
<sdesc>Get Namespace</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavProperty-&gt;getNamespacePrefix">
<sdesc>Get namespace prefix</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavProperty-&gt;getProtected">
<sdesc>Get Protected</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="WebdavProperty-&gt;getValue">
<sdesc>Get Value</sdesc>
<desc></desc>
<type>mixed</type>
</methodsynopsis>
<methodsynopsis function="WebdavProperty-&gt;setName">
<sdesc>Set Name</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavProperty-&gt;setNamespaceName">
<sdesc>Set namespace name (e.g. http://apache.org/dav/props/)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>namespace</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavProperty-&gt;setNamespacePrefix">
<sdesc>Set namespace prefix (e.g. ns1)</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>prefix</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavProperty-&gt;setProtected">
<sdesc>Set Protected</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>protected</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavProperty-&gt;setValue">
<sdesc>Set Value</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavProperty-&gt;toString">
<sdesc>Convert value to valid string</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavPropFindRequest-&gt;addProperty">
<sdesc>Add a property</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>org.webdav.WebdavProperty</type>
<parameter>property</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavPropFindRequest-&gt;getDepth">
<sdesc>Return Depth header field</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavPropFindRequest-&gt;getProperties">
<sdesc>Get all properties</sdesc>
<desc></desc>
<type>&amp;org.webdav.WebdavProperty[]</type>
</methodsynopsis>
<methodsynopsis function="WebdavPropFindRequest-&gt;getWebroot">
<sdesc>Retrieve base uri of request</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavPropFindRequest-&gt;setData">
<sdesc>Set data and parse for properties</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>&amp;data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavPropPatchRequest-&gt;addProperty">
<sdesc>Add a property</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>org.webdav.WebdavProperty</type>
<parameter>property</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavPropPatchRequest-&gt;getFilename">
<sdesc>Retrieve base url of request</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavPropPatchRequest-&gt;getProperties">
<sdesc>Get all properties</sdesc>
<desc></desc>
<type>&amp;org.webdav.WebdavProperty[]</type>
</methodsynopsis>
<methodsynopsis function="WebdavPropPatchRequest-&gt;setData">
<sdesc>Set data and parse for properties</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>&amp;data</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavPropPatchResponse-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>WebdavPropPatchResponse</type>
<methodparam>
<type>&amp;org.webdav.xml.WebdavPropFindRequest</type>
<parameter>0</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.xml.WebdavMultistatus</type>
<parameter>1</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavPropPatchResponse-&gt;process">
<sdesc>Process response and add the status codes</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="WebdavPropPatchResponse-&gt;setHref">
<sdesc>Sets the href attribute for the response</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>href</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavPropResponse-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>WebdavPropResponse</type>
<methodparam>
<type>&amp;org.webdav.xml.WebdavPropFindRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.xml.WebdavMultistatus</type>
<parameter>&amp;response</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.WebdavObject</type>
<parameter>&amp;o</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavReportResponse-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>WebdavReportResponse</type>
<methodparam>
<type>&amp;org.webdav.xml.WebdavPropFindRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;org.webdav.xml.WebdavMultistatus</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>WebdavScriptlet</type>
<methodparam>
<type>array</type>
<parameter>impl</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doAuthorizationDeny">
<sdesc>Called when user hasn't permissions to do something</sdesc>
<desc> @access  private</desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doAuthorizationRequest">
<sdesc>Called when a authorization is required</sdesc>
<desc> @access  private</desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doCopy">
<sdesc>Handle COPY</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doDelete">
<sdesc>Handle DELETE</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doGet">
<sdesc>Handle GET</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doHead">
<sdesc>Handle HEAD</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doLock">
<sdesc>  A LOCK method invocation creates the lock specified by the lockinfo  XML element on the Request-URI.</sdesc>
<desc>[...]  In order to indicate the lock token associated with a newly created  lock, a Lock-Token response header MUST be included in the response  for every successful LOCK request for a new lock.  Note that the  Lock-Token header would not be returned in the response for a  successful refresh LOCK request because a new lock was not created  &lt;/quote&gt;</desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doMkCol">
<sdesc>  The MKCOL method is used to create a new collection. All DAV  compliant resources MUST support the MKCOL method.</sdesc>
<desc>&lt;/quote&gt;</desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doMove">
<sdesc>Handle MOVE</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doNotFound">
<sdesc>Errorhandler not-found impl</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doOptions">
<sdesc>Handle OPTIONS</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doPost">
<sdesc>Handle POST</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doPropFind">
<sdesc>Receives an PROPFIND request from the process() method  and handles it.</sdesc>
<desc>All XML used in either requests or responses MUST be, at minimum, well
 formed.  If a server receives ill-formed XML in a request it MUST reject
 the entire request with a 400 (Bad Request).</desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doPropPatch">
<sdesc>Receives an PROPPATCH request from the process() method  and handles it.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doPut">
<sdesc>Handle PUT</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doReport">
<sdesc>Do a REPORT Request</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doUnlock">
<sdesc>Handle UNLOCK</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="WebdavScriptlet-&gt;doVersionControl">
<sdesc>Do a Version-Control Request</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptletRequest-&gt;decode">
<sdesc>Decode string in the right encoding (currently UTF-8 is used)</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptletRequest-&gt;getAbsoluteURI">
<sdesc>Retrieve the absolute Uri of requested directory</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavScriptletRequest-&gt;getNamespacePrefix">
<sdesc>Returns the given Namespaceprefix</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavScriptletRequest-&gt;getNode">
<sdesc>Search for specific node using simple path string (e.g. &quot;/propfind/set&quot;)</sdesc>
<desc></desc>
<type>xml.Node</type>
<methodparam>
<type>string</type>
<parameter>path</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptletRequest-&gt;getPath">
<sdesc>Retrieve path part of the request URI (e.g.</sdesc>
<desc>http://webdav.host.com/fs/file.txt -&gt; file.txt)</desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavScriptletRequest-&gt;getRelativePath">
<sdesc>Convert absolute URL to relative path:    &quot;http://webdav.host.com/fs/dir/file.txt&quot; -&gt; &quot;dir/file.txt&quot;</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>url</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptletRequest-&gt;getRootURL">
<sdesc>Returns URI to Webdav resource</sdesc>
<desc></desc>
<type>peer.URL</type>
</methodsynopsis>
<methodsynopsis function="WebdavScriptletRequest-&gt;getUser">
<sdesc>Get user</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavScriptletRequest-&gt;setAbsoluteURI">
<sdesc>Set the absolute Uri of requested directory</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>uri</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptletRequest-&gt;setPath">
<sdesc>Set the path</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>path</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptletRequest-&gt;setUser">
<sdesc>Set user</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>&amp;user</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptletResponse-&gt;addChild">
<sdesc>Adds a child to the root node of the tree</sdesc>
<desc></desc>
<type>xml.Node</type>
<methodparam>
<type>xml.Node</type>
<parameter>&amp;node</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptletResponse-&gt;encode">
<sdesc>Encode string in the right encoding (currently UTF-8 is used)</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavScriptletResponse-&gt;process">
<sdesc>Process the response (setting status code, adding XML data to  response body, ...)</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="WebdavScriptletResponse-&gt;setRootNode">
<sdesc>Sets the root node for the response</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>xml.Node</type>
<parameter>&amp;node</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavUser-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>WebdavUser</type>
<methodparam>
<type>string</type>
<parameter>username</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>password</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavUser-&gt;getPassword">
<sdesc>Get password</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavUser-&gt;getUsername">
<sdesc>Get username</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="WebdavUser-&gt;setPassword">
<sdesc>Set password</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>password</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavUser-&gt;setUsername">
<sdesc>Set username</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>username</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavVersionsContainer-&gt;__construct">
<sdesc>Construct</sdesc>
<desc></desc>
<type>WebdavVersionsContainer</type>
<methodparam>
<type>org.webdav.version.Webdav*Version</type>
<parameter>version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavVersionsContainer-&gt;addVersion">
<sdesc>Add a version to the container</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>org.webdav.version.Webdav*Version</type>
<parameter>&amp;version</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebdavVersionsContainer-&gt;getLatestVersion">
<sdesc>Returns the last added version object</sdesc>
<desc></desc>
<type>&amp;org.webdav.version.Webdav*Version</type>
</methodsynopsis>
<methodsynopsis function="WebdavVersionsContainer-&gt;getVersions">
<sdesc>Get all versions</sdesc>
<desc></desc>
<type>array</type>
</methodsynopsis>
<methodsynopsis function="WebdavVersionUtil-&gt;getNextVersion">
<sdesc>Creates new version object relating on latest version</sdesc>
<desc></desc>
<type>&amp;org.webdav.version.Webdav*Version</type>
<methodparam>
<type>&amp;org.webdav.version.Webdav*Version</type>
<parameter>&amp;actVersion</parameter>
</methodparam>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WebsiteScriptlet-&gt;_processor">
<sdesc>Set our own processor object</sdesc>
<desc></desc>
<type>&amp;.xml.XSLProcessor</type>
</methodsynopsis>
<methodsynopsis function="Word-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>Word</type>
</methodsynopsis>
<methodsynopsis function="WordCountChecker-&gt;__construct">
<sdesc>Construct</sdesc>
<desc></desc>
<type>WordCountChecker</type>
<methodparam>
<type>int</type>
<parameter>minWords</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WordCountChecker-&gt;check">
<sdesc>Check a given value</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>array</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WorkflowScriptletRequest-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>WorkflowScriptletRequest</type>
<methodparam>
<type>&amp;lang.ClassLoader</type>
<parameter>&amp;classloader</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WorkflowScriptletRequest-&gt;initialize">
<sdesc>Initialize this request object - overridden from base class.</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="Wrapper-&gt;checkerInstanceFor">
<sdesc>Retrieve a checker instance</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>array</type>
<parameter>defines</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Wrapper-&gt;getValue">
<sdesc>Retrieve a value by its name</sdesc>
<desc></desc>
<type>mixed</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Wrapper-&gt;load">
<sdesc>Load request values from request data</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.workflow.Handler</type>
<parameter>&amp;handler</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Wrapper-&gt;registerParamInfo">
<sdesc>Register definitions for a specified parameter</sdesc>
<desc>Examples:  1        // Order date, optional, retrieve as date object, defaulting to today2        $this-&gt;(3          'orderdate',4          ,5          ::(),6          array('scriptlet.xml.workflow.casters.ToDate')7        );8     9        // T-Shirt size, may be either S, M, L or XL10       $this-&gt;(11         'tshirt.size',12         ,13         NULL,                // No default, required attribute14         NULL,                // No cast necessary15         NULL,                // No precheck necessary, non-empty suffices16         array('scriptlet.xml.workflow.checkers.OptionChecker', array('S', 'M', 'L', 'XL'))17       );18    19       // Quantity check, must be numeric, must be in range 1 to 1020       $this-&gt;(21         'tshirt.quantity',22         ,23         NULL,                // No default, required attribute24         array('scriptlet.xml.workflow.casters.ToInteger'),25         array('scriptlet.xml.workflow.checkers.NumericChecker'),26         array('scriptlet.xml.workflow.checkers.IntegerRangeChecker', 1, 10)27       );</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>occurrence</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>default</parameter>
</methodparam>
<methodparam>
<type>string[]</type>
<parameter>caster</parameter>
</methodparam>
<methodparam>
<type>string[]</type>
<parameter>precheck</parameter>
</methodparam>
<methodparam>
<type>string[]</type>
<parameter>postcheck</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="Wrapper-&gt;setup">
<sdesc>Set up this handler. Called when the handler has not yet been  registered to the session.</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.workflow.WorkflowScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.workflow.Handler</type>
<parameter>&amp;handler</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="WshShell-&gt;getInstance">
<sdesc>Retrieves instance of this object</sdesc>
<desc></desc>
<type>&amp;com.microsoft.wscript.WshShell</type>
</methodsynopsis>
<methodsynopsis function="X509Certificate-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="X509Certificate-&gt;checkValidity">
<sdesc>Checks validity</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>util.Date</type>
<parameter>date</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="X509Certificate-&gt;export">
<sdesc>Export this certificate</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="X509Certificate-&gt;fromString">
<sdesc>Create a X.509 Certificate from a string</sdesc>
<desc></desc>
<type>&amp;security.cert.X509Certificate</type>
<methodparam>
<type>string</type>
<parameter>str</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="X509Certificate-&gt;getHash">
<sdesc>Get certificate'shash</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="X509Certificate-&gt;getIssuerDN">
<sdesc>Gets the issuer DN (distinguished name)</sdesc>
<desc></desc>
<type>&amp;security.Principal</type>
</methodsynopsis>
<methodsynopsis function="X509Certificate-&gt;getKeyUsage">
<sdesc>Gets a boolean array representing bits of the KeyUsage extension</sdesc>
<desc></desc>
<type>object</type>
</methodsynopsis>
<methodsynopsis function="X509Certificate-&gt;getNotAfter">
<sdesc>Gets the notAfter date from the validity period of the certificate.</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="X509Certificate-&gt;getNotBefore">
<sdesc>Gets the notBefore date from the validity period of the certificate.</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="X509Certificate-&gt;getSerialNumber">
<sdesc>Retrieve certificate's serial number</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="X509Certificate-&gt;getSubjectDN">
<sdesc>Gets the subject DN (distinguished name)</sdesc>
<desc></desc>
<type>&amp;security.Principal</type>
</methodsynopsis>
<methodsynopsis function="X509Certificate-&gt;getVersion">
<sdesc>Retrieve certificate's version</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="XbmStreamReader-&gt;readFromStream">
<sdesc>Read an image</sdesc>
<desc></desc>
<type>resource</type>
</methodsynopsis>
<methodsynopsis function="XbmStreamWriter-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>XbmStreamWriter</type>
<methodparam>
<type>&amp;io.Stream</type>
<parameter>&amp;stream</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>foreground</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XbmStreamWriter-&gt;output">
<sdesc>Output an image</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>resource</type>
<parameter>handle</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XML-&gt;getDeclaration">
<sdesc>Returns XML declaration</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XML-&gt;getEncoding">
<sdesc>Retrieve encoding</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XML-&gt;setEncoding">
<sdesc>Set encoding</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>e</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLDecoder-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>XMLDecoder</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLDecoder-&gt;close">
<sdesc>Close</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="XMLDecoder-&gt;readObject">
<sdesc>Read object</sdesc>
<desc></desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>bool</type>
<parameter>trim</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLDecoder-&gt;_recurse">
<sdesc>Private helper</sdesc>
<desc></desc>
<type>array</type>
<methodparam>
<type>&amp;xml.Node</type>
<parameter>&amp;node</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLEncoder-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>XMLEncoder</type>
<methodparam>
<type>&amp;io.File</type>
<parameter>&amp;file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLEncoder-&gt;close">
<sdesc>Close</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="XMLEncoder-&gt;writeObject">
<sdesc>Write object</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;Object</type>
<parameter>&amp;o</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLFormatException-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>XMLFormatException</type>
<methodparam>
<type>string</type>
<parameter>message</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>type</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>filename</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>linenumber</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>column</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLFormatException-&gt;getColumn">
<sdesc>Get Column</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="XMLFormatException-&gt;getFilename">
<sdesc>Get filename</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XMLFormatException-&gt;getLineNumber">
<sdesc>Get line number</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="XMLFormatException-&gt;getType">
<sdesc>Get Type</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="XMLFormatException-&gt;getTypeName">
<sdesc>Get Type's name</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XMLFormatException-&gt;toString">
<sdesc>Returns a string representation of this exception</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XMLParser-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>XMLParser</type>
<methodparam>
<type>string</type>
<parameter>encoding</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLParser-&gt;getEncoding">
<sdesc>Get Encoding</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XMLParser-&gt;parse">
<sdesc>Parse XML data</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>data</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>source</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLParser-&gt;setCallback">
<sdesc>Set callback</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;xml.parser.ParserCallback</type>
<parameter>&amp;callback</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLParser-&gt;setEncoding">
<sdesc>Set Encoding</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>encoding</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptlet-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>XMLScriptlet</type>
<methodparam>
<type>string</type>
<parameter>base</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptlet-&gt;doCreate">
<sdesc>Create - redirects to /xml/$pr:$ll_LL/static if  necessary, regarding the environment variables DEF_PROD and  DEF_LANG as values for $pr and $ll_LL. If these aren't set, &quot;site&quot; and  &quot;en_US&quot; are assumed as default values.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptlet-&gt;doCreateSession">
<sdesc>Creates a session.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.HttpScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.HttpScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptlet-&gt;doGet">
<sdesc>Handle all requests. This method is called from doPost since  it really makes no difference - one can still find out via the  method attribute of the request object.</sdesc>
<desc>Remember:  When overriding this method, please make sure you include all your  sourcecode _before_ you call parent::doGet()</desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptlet-&gt;doPost">
<sdesc>Simply call doGet</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptlet-&gt;doRedirect">
<sdesc>Helper method for doCreate() and doCreateSession()</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>sessionId</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptlet-&gt;handleMethod">
<sdesc>Handle method. Calls doCreate if necessary (the environment variable  &quot;PRODUCT&quot; is not set - which it will be if the RewriteRule has  taken control).</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptlet-&gt;processRequest">
<sdesc>Process request</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptlet-&gt;_processor">
<sdesc>Set our own processor object</sdesc>
<desc></desc>
<type>&amp;.xml.XSLProcessor</type>
</methodsynopsis>
<methodsynopsis function="XMLScriptlet-&gt;_request">
<sdesc>Set our own request object</sdesc>
<desc></desc>
<type>&amp;scriptlet.xml.XMLScriptletRequest</type>
</methodsynopsis>
<methodsynopsis function="XMLScriptlet-&gt;_response">
<sdesc>Set our own response object</sdesc>
<desc></desc>
<type>&amp;scriptlet.xml.XMLScriptletResponse</type>
</methodsynopsis>
<methodsynopsis function="XMLScriptlet-&gt;_setStylesheet">
<sdesc>Sets the responses XSL stylesheet</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>&amp;scriptlet.scriptlet.XMLScriptletRequest</type>
<parameter>&amp;request</parameter>
</methodparam>
<methodparam>
<type>&amp;scriptlet.scriptlet.XMLScriptletResponse</type>
<parameter>&amp;response</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptletRequest-&gt;getLanguage">
<sdesc>Gets language</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XMLScriptletRequest-&gt;getPage">
<sdesc>Get Page</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XMLScriptletRequest-&gt;getProduct">
<sdesc>Gets product</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XMLScriptletRequest-&gt;getSessionId">
<sdesc>Get session's Id</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XMLScriptletRequest-&gt;getStateName">
<sdesc>Gets state</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XMLScriptletRequest-&gt;initialize">
<sdesc>Initialize this request object</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="XMLScriptletRequest-&gt;setLanguage">
<sdesc>Sets Language</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>language</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptletRequest-&gt;setPage">
<sdesc>Set Page</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>page</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptletRequest-&gt;setProduct">
<sdesc>Sets product</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>product</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptletRequest-&gt;setStateName">
<sdesc>Sets state</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>stateName</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptletResponse-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>XMLScriptletResponse</type>
<methodparam>
<type>&amp;xml.XSLProcessor</type>
<parameter>&amp;processor</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptletResponse-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="XMLScriptletResponse-&gt;addFormError">
<sdesc>Adds an error. The XML representation will look like this:</sdesc>
<desc>&lt;xmp&gt;    &lt;error     checker=&quot;foo.bar.wrapper.MyLoginDataChecker&quot;     type=&quot;user_nonexistant&quot;     field=&quot;username&quot;    /&gt;  &lt;/xmp&gt;</desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>checker</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>type</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>field</parameter>
</methodparam>
<methodparam>
<type>mixed</type>
<parameter>info</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptletResponse-&gt;addFormResult">
<sdesc>Add a child to the formresult node. You may add _any_ node  here since there is no special specification what do with  nodes besides formvalues and formerrors</sdesc>
<desc></desc>
<type>xml.Node</type>
<methodparam>
<type>xml.Node</type>
<parameter>&amp;node</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptletResponse-&gt;addFormValue">
<sdesc>Add a child to the formvalues node. The XML representation  is probably best shown with a couple of examples:</sdesc>
<desc>Example: a string  &lt;xmp&gt;    &lt;param name=&quot;__form&quot; xsi:type=&quot;xsd:string&quot;&gt;new&lt;/param&gt;  &lt;/xmp&gt;Example: an associative array  &lt;xmp&gt;    &lt;param name=&quot;data[domain]&quot; xsi:type=&quot;xsd:string&quot;&gt;thekidabc&lt;/param&gt;    &lt;param name=&quot;data[tld]&quot; xsi:type=&quot;xsd:string&quot;&gt;de&lt;/param&gt;  &lt;/xmp&gt;Example: an object  &lt;xmp&gt;    &lt;param name=&quot;faxnumber&quot; xsi:type=&quot;xsd:object&quot;&gt;      721      &lt;number&gt;1234567&lt;/number&gt;      &lt;lcode&gt;+49&lt;/lcode&gt;    &lt;/param&gt;  &lt;/xmp&gt;</desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptletResponse-&gt;getParam">
<sdesc>Retrieves an XSL parameter by its name</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptletResponse-&gt;process">
<sdesc>Transforms the OutputDocument's XML and the stylesheet</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="XMLScriptletResponse-&gt;setContent">
<sdesc>Overwritten method from parent class</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>content</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptletResponse-&gt;setParam">
<sdesc>Sets an XSL parameter</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>value</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptletResponse-&gt;setProcessed">
<sdesc>Set whether this document needs to be processed</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>bool</type>
<parameter>processed</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptletResponse-&gt;setStylesheet">
<sdesc>Sets the absolute path to the XSL stylesheet</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>stylesheet</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>type</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XMLScriptletResponse-&gt;write">
<sdesc>Overwritten method from parent class</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>s</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPath-&gt;__construct">
<sdesc></sdesc>
<desc></desc>
<type>XPath</type>
</methodsynopsis>
<methodsynopsis function="XPath-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="XPath-&gt;evaluate">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="XPath-&gt;setContext">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="XPath-&gt;setContextFile">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="XPath-&gt;_exprXSL">
<sdesc></sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>XPClass</type>
<methodparam>
<type>&amp;mixed</type>
<parameter>&amp;ref</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;equals">
<sdesc>Return whether an object equals this class</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;cmp</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;forName">
<sdesc>Returns the XPClass object associated with the class with the given  string name. Uses the default classloader if none is specified.</sdesc>
<desc></desc>
<type>&amp;lang.XPClass</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>lang.ClassLoader</type>
<parameter>classloader</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;getClasses">
<sdesc>Returns an array containing class objects representing all the  public classes</sdesc>
<desc></desc>
<type>&amp;lang.XPClass[]</type>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;getConstructor">
<sdesc>Retrieves this class' constructor. Returns NULL if no constructor  exists.</sdesc>
<desc></desc>
<type>&amp;lang.reflect.Constructor</type>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;getFields">
<sdesc>Retrieve a list of all declared member variables</sdesc>
<desc></desc>
<type>string[]</type>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;getInterfaces">
<sdesc>Retrieve interfaces this class implements</sdesc>
<desc></desc>
<type>lang.XPClass[]</type>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;getMethod">
<sdesc>Gets a method by a specified name. Returns NULL if the specified  method does not exist.</sdesc>
<desc></desc>
<type>&amp;lang.Method</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;getMethods">
<sdesc>Gets class methods for this class</sdesc>
<desc></desc>
<type>lang.reflect.Method[]</type>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;getName">
<sdesc>Retrieves the fully qualified class name for this class.</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;getParentclass">
<sdesc>Retrieve the parent class's class object. Returns NULL if there  is no parent class.</sdesc>
<desc></desc>
<type>&amp;lang.XPClass</type>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;hasConstructor">
<sdesc>Retrieve if a constructor exists</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;hasMethod">
<sdesc>Checks whether this class has a method named &quot;$method&quot; or not.</sdesc>
<desc>Note: Since in PHP, methods are case-insensitive, calling  hasMethod('toString') will provide the same result as  hasMethod('tostring')</desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>method</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;isInstance">
<sdesc>Determines whether the specified object is an instance of this  class. This is the equivalent of the is() core functionality.</sdesc>
<desc>1        ('io.File', 'io.TempFile');2        $class= &amp;::('io.File');3     4        ($class-&gt;(new ()));  // TRUE5        ($class-&gt;(new ()));      // TRUE6        ($class-&gt;(new ()));</desc>
<type>bool</type>
<methodparam>
<type>&amp;lang.Object</type>
<parameter>&amp;obj</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;isInterface">
<sdesc>Determines if this XPClass object represents an interface type.</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;isSubclassOf">
<sdesc>Tests whether this class is a subclass of a specified class.</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPClass-&gt;newInstance">
<sdesc>Creates a new instance of the class represented by this Class object.</sdesc>
<desc>The class is instantiated as if by a new expression with an empty argument list.Example:  1        try(); {2          $c= &amp;::($name) &amp;&amp;3          $o= &amp;$c-&gt;();4        } if (catch('ClassNotFoundException', $e)) {5          // handle it!6        }Example (passing arguments):  1        try(); {2          $c= &amp;::('peer.Socket') &amp;&amp;3          $o= &amp;$c-&gt;('localhost', 6100);4        } if (catch('ClassNotFoundException', $e)) {5          // handle it!6        }</desc>
<type>&amp;lang.Object</type>
<methodparam>
<type>mixed*</type>
<parameter>0</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;getBody">
<sdesc>Retrieves body</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;getByBz_id">
<sdesc>Gets an array of instances of this object by bz_id</sdesc>
<desc></desc>
<type>net.xp-framework.db.caffeine.XPNews[]</type>
<methodparam>
<type>int</type>
<parameter>bz_id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;getByDateOrdered">
<sdesc>Gets an array of instances of this object descendingly ordered by created_at  (newest first)</sdesc>
<desc></desc>
<type>net.xp-framework.db.caffeine.XPNews[]</type>
<methodparam>
<type>int</type>
<parameter>max</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;getByNews_id">
<sdesc>Gets an instance of this object by unique index &quot;news_news_i_640032591&quot;</sdesc>
<desc></desc>
<type>&amp;net.xp-framework.db.caffeine.XPNews</type>
<methodparam>
<type>int</type>
<parameter>news_id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;getBz_id">
<sdesc>Retrieves bz_id</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;getCaption">
<sdesc>Retrieves caption</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;getChangedby">
<sdesc>Retrieves changedby</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;getCreated_at">
<sdesc>Retrieves created_at</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;getLastchange">
<sdesc>Retrieves lastchange</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;getLink">
<sdesc>Retrieves link</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;getNews_id">
<sdesc>Retrieves news_id</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;getPeer">
<sdesc>Retrieve associated peer</sdesc>
<desc></desc>
<type>&amp;rdbms.Peer</type>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;setBody">
<sdesc>Sets body</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>body</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;setBz_id">
<sdesc>Sets bz_id</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>bz_id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;setCaption">
<sdesc>Sets caption</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>caption</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;setChangedby">
<sdesc>Sets changedby</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>changedby</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;setCreated_at">
<sdesc>Sets created_at</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;created_at</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;setLastchange">
<sdesc>Sets lastchange</sdesc>
<desc></desc>
<type>&amp;util.Date</type>
<methodparam>
<type>&amp;util.Date</type>
<parameter>&amp;lastchange</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;setLink">
<sdesc>Sets link</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>string</type>
<parameter>link</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;setNews_id">
<sdesc>Sets news_id</sdesc>
<desc></desc>
<type>int</type>
<methodparam>
<type>int</type>
<parameter>news_id</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XPNews-&gt;__static">
<sdesc>Static initializer</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="XSLProcessor-&gt;__construct">
<sdesc>Constructor</sdesc>
<desc></desc>
<type>XSLProcessor</type>
</methodsynopsis>
<methodsynopsis function="XSLProcessor-&gt;__destruct">
<sdesc>Destructor</sdesc>
<desc></desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="XSLProcessor-&gt;output">
<sdesc>Retrieve the transformation's result</sdesc>
<desc></desc>
<type>string</type>
</methodsynopsis>
<methodsynopsis function="XSLProcessor-&gt;run">
<sdesc>Run the XSL transformation</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="XSLProcessor-&gt;setBase">
<sdesc>Set base directory</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>dir</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XSLProcessor-&gt;setParam">
<sdesc>Set XSL transformation parameter</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>name</parameter>
</methodparam>
<methodparam>
<type>string</type>
<parameter>val</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XSLProcessor-&gt;setParams">
<sdesc>Set XSL transformation parameters</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>array</type>
<parameter>params</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XSLProcessor-&gt;setSchemeHandler">
<sdesc>Set a scheme handler</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>mixed</type>
<parameter>defines</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XSLProcessor-&gt;setXMLBuf">
<sdesc>Set XML buffer</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>xml</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XSLProcessor-&gt;setXMLFile">
<sdesc>Set XML file</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XSLProcessor-&gt;setXSLBuf">
<sdesc>Set XSL buffer</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>xsl</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="XSLProcessor-&gt;setXSLFile">
<sdesc>Set XSL file</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>file</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ZipFile-&gt;close">
<sdesc>Close this file</sdesc>
<desc></desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="ZipFile-&gt;eof">
<sdesc>Returns whether the file pointer is at the end of the file</sdesc>
<desc>Hint:  Use isOpen() to check if the file is open</desc>
<type>bool</type>
</methodsynopsis>
<methodsynopsis function="ZipFile-&gt;gets">
<sdesc>Read a line</sdesc>
<desc>This function is identical to readLine except that trailing CR and LF characters  will be included in its return value</desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>bytes</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ZipFile-&gt;open">
<sdesc>Open the file</sdesc>
<desc></desc>
<type>void</type>
<methodparam>
<type>string</type>
<parameter>mode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ZipFile-&gt;read">
<sdesc>Read (binary-safe)</sdesc>
<desc></desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>bytes</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ZipFile-&gt;readChar">
<sdesc>Read one char</sdesc>
<desc></desc>
<type>char</type>
</methodsynopsis>
<methodsynopsis function="ZipFile-&gt;readLine">
<sdesc>Read one line and chop off trailing CR and LF characters</sdesc>
<desc>Returns a string of up to length - 1 bytes read from the file.  Reading ends when length - 1 bytes have been read, on a newline (which is  included in the return value), or on EOF (whichever comes first).</desc>
<type>string</type>
<methodparam>
<type>int</type>
<parameter>bytes</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ZipFile-&gt;rewind">
<sdesc>Sets the file position indicator for fp to the beginning of the  file stream.</sdesc>
<desc>This function is identical to a call of $f-&gt;seek(0, SEEK_SET)</desc>
<type>void</type>
</methodsynopsis>
<methodsynopsis function="ZipFile-&gt;seek">
<sdesc>Move file pointer to a new position</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>int</type>
<parameter>position</parameter>
</methodparam>
<methodparam>
<type>int</type>
<parameter>mode</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ZipFile-&gt;tell">
<sdesc>Retrieve file pointer position</sdesc>
<desc></desc>
<type>int</type>
</methodsynopsis>
<methodsynopsis function="ZipFile-&gt;write">
<sdesc>Write</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
</methodsynopsis>
<methodsynopsis function="ZipFile-&gt;writeLine">
<sdesc>Write a line and append a LF (\n) character</sdesc>
<desc></desc>
<type>bool</type>
<methodparam>
<type>string</type>
<parameter>string</parameter>
</methodparam>
</methodsynopsis>
<entry/>
</manual>  	
