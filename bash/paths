# homebrew needs /usr/local/sbin and /usr/local/share/python
if [ `uname` = 'Darwin' ]; then
  export PATH=/usr/local/bin:/usr/local/sbin:$PATH
fi

# pipx
if [ -d "$HOME/.local/bin" ]; then
  export PATH="$HOME/.local/bin:$PATH"
fi

if [ -d "$HOME/.poetry/bin" ]; then
  export PATH="$HOME/.poetry/bin:$PATH"
fi

# rust
if [ -d "$HOME/.cargo/bin" ]; then
  export PATH="$HOME/.cargo/bin:$PATH"
fi

if [ -d "$HOME/.krew" ]; then
  export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
fi

# $HOME/local paths
export PATH="${HOME}/bin:${HOME}/local/bin:${PATH}"
export MANPATH="${HOME}/local/share/man:${MANPATH}"
#export LD_LIBRARY_PATH="${HOME}/local/lib:${LD_LIBRARY_PATH}"
#export LD_RUN_PATH=$LD_LIBRARY_PATH
export CPPFLAGS="-I${HOME}/local/include"
export CXXFLAGS=$CPPFLAGS
export CFLAGS=$CPPFLAGS

if [ -d "$HOME/Library/Android/sdk" ]; then
  export ANDROID_HOME="$HOME/Library/Android/sdk"
  export PATH=$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH
fi

if [ -e "/usr/local/cuda" ]; then
  export PATH=$PATH:/usr/local/cuda/bin
  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64
fi

export GRADLE_OPTS="$GRADLE_OPTS -Dorg.gradle.daemon=true"

# npm bin
export PATH="./node_modules/.bin:$PATH"

export PATH=/usr/local/opt/go/libexec/bin:$PATH
export GOPATH=$HOME/go
export PATH=$GOPATH/bin:$PATH

if [ `uname` = 'Darwin' ]; then
  export JAVA_HOME=`/usr/libexec/java_home -v 1.8`
fi

export PIPENV_VENV_IN_PROJECT=1

