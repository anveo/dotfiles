[user]
	name = Brian Racer
	email = bracer@gmail.com
[alias]
        #l = log --pretty=oneline --graph --abbrev-commit
        br = branch
        #ci = checkin
        co = checkout
        diffi = diff --ignore-all-space
        dump = cat-file -p
        dl = "!git ll -1"
        dlc = diff --cached HEAD^
        f = "!git ls-files | grep -i"
        #hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
        l = log --graph --pretty=format:'%C(yellow)%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=short
        la = "!git config -l | grep alias | cut -c 7-"
        #ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
        ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
        #last = log -1 HEAD
        #log1 = log --pretty=oneline --abbrev-commit
        news = log -p HEAD@{1}..HEAD@{0}
        r = reset
        r1 = reset HEAD^
        r2 = reset HEAD^^
        rh = reset --hard
        rh1 = reset HEAD^ --hard
        rh2 = reset HEAD^^ --hard
        st = status
        type = cat-file -t
        unstage = reset HEAD --
        undo = reset --soft HEAD^

[apply]
        whitespace = nowarn

[color]
        diff = true
	ui = auto

[push]
	default = current

[github]
        user = anveo

[credential]
	helper = git-credential-osxkeychain

[core]
	editor = vim
	excludesfile = /Users/bracer/.gitignore

[pager]
	color = true
	diff = diff-so-fancy | less --tabs=4 -RFX
	show = diff-so-fancy | less --tabs=4 -RFX

[merge]
	stat = true
        diff = vimdiff

[branch]
  # When creating a new branch off a remote branch, always set it up to
  # track the remote branch so that we can pull from there.
	autosetupmerge = true
  mergeoptions = --no-ff
	autosetuprebase = always

[branch "master"]
  # This is the list of cmdline options that should be added to git-merge
  # when I merge commits into the master branch.
  #
  # First off, the option --no-commit instructs git not to commit the merge
  # by default. This allows me to do some final adjustment to the commit log
  # message before it gets commited. I often use this to add extra info to
  # the merge message or rewrite my local branch names in the commit message
  # to branch names sensible to the casual reader of the git log.
  #
  # Option --no-ff instructs git to always record a merge commit, even if
  # the branch being merged into can be fast-forwarded. This is often the
  # case when you create a short-lived topic branch which tracks master, do
  # some changes on the topic branch and then merge the changes into the
  # master which remained unchanged while you were doing your work on the
  # topic branch. In this case the master branch can be fast-forwarded (that
  # is the tip of the master branch can be updated to point to the tip of
  # the topic branch) and this is what git does by default. With --no-ff
  # option set git creates a real merge commit which records the fact that
  # another branch was merged. I find this easier to understand and read in
  # the log.
  #mergeoptions = --no-commit --no-ff
  mergeoptions = --no-ff
[ghi]
        token = <.replace github-token>
[mergetool]
	keepBackup = true
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
